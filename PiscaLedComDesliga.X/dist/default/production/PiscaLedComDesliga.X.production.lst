

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 25 21:26:01 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.41
    15                           ; Generated 25/01/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _TMR0	set	4054
    49  0000                     _PORTBbits	set	3969
    50  0000                     _PORTCbits	set	3970
    51  0000                     _T0CONbits	set	4053
    52  0000                     _TRISC	set	3988
    53  0000                     _TRISB	set	3987
    54  0000                     _INTCONbits	set	4082
    55  0000                     _TMR0IF	set	32658
    56                           
    57                           ; #config settings
    58  0000                     
    59                           	psect	cinit
    60  000128                     __pcinit:
    61                           	opt stack 0
    62  000128                     start_initialization:
    63                           	opt stack 0
    64  000128                     __initialization:
    65                           	opt stack 0
    66                           
    67                           ; Clear objects allocated to COMRAM (3 bytes)
    68  000128  6A15               	clrf	(__pbssCOMRAM+2)& (0+255),c
    69  00012A  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
    70  00012C  6A13               	clrf	__pbssCOMRAM& (0+255),c
    71  00012E                     end_of_initialization:
    72                           	opt stack 0
    73  00012E                     __end_of__initialization:
    74                           	opt stack 0
    75  00012E  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    76  000130  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    77  000132  0100               	movlb	0
    78  000134  EF64  F000         	goto	_main	;jump to C main() function
    79                           
    80                           	psect	bssCOMRAM
    81  000013                     __pbssCOMRAM:
    82                           	opt stack 0
    83  000013                     _flagEstado:
    84                           	opt stack 0
    85  000013                     	ds	1
    86  000014                     _cont:
    87                           	opt stack 0
    88  000014                     	ds	1
    89  000015                     _flagSegundo:
    90                           	opt stack 0
    91  000015                     	ds	1
    92                           
    93                           	psect	cstackCOMRAM
    94  000001                     __pcstackCOMRAM:
    95                           	opt stack 0
    96  000001                     ??_pic_isr:
    97  000001                     
    98                           ; 1 bytes @ 0x0
    99  000001                     	ds	17
   100  000012                     main@estado:
   101                           	opt stack 0
   102                           
   103                           ; 1 bytes @ 0x11
   104  000012                     	ds	1
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 46 in file "newmain.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  estado          1   17[COMRAM] unsigned char 
   116 ;;  ledPiscando     1    0        unsigned char 
   117 ;; Return value:  Size  Location     Type
   118 ;;                  1    wreg      void 
   119 ;; Registers used:
   120 ;;		wreg, status,2, status,0
   121 ;; Tracked objects:
   122 ;;		On entry : 0/0
   123 ;;		On exit  : 0/0
   124 ;;		Unchanged: 0/0
   125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   126 ;;      Params:         0       0       0       0       0       0       0       0       0
   127 ;;      Locals:         1       0       0       0       0       0       0       0       0
   128 ;;      Temps:          0       0       0       0       0       0       0       0       0
   129 ;;      Totals:         1       0       0       0       0       0       0       0       0
   130 ;;Total ram usage:        1 bytes
   131 ;; Hardware stack levels required when called:    1
   132 ;; This function calls:
   133 ;;		Nothing
   134 ;; This function is called by:
   135 ;;		Startup code after reset
   136 ;; This function uses a non-reentrant model
   137 ;;
   138                           
   139                           	psect	text0
   140  0000C8                     __ptext0:
   141                           	opt stack 0
   142  0000C8                     _main:
   143                           	opt stack 30
   144                           
   145                           ;newmain.c: 48: TRISB = 0x00;
   146                           
   147                           ;incstack = 0
   148  0000C8  0E00               	movlw	0
   149  0000CA  6E93               	movwf	3987,c	;volatile
   150                           
   151                           ;newmain.c: 49: TRISC = 0x01;
   152  0000CC  0E01               	movlw	1
   153  0000CE  6E94               	movwf	3988,c	;volatile
   154                           
   155                           ;newmain.c: 50: T0CONbits.TMR0ON = 0;
   156  0000D0  9ED5               	bcf	4053,7,c	;volatile
   157                           
   158                           ;newmain.c: 51: INTCONbits.TMR0IE = 1;
   159  0000D2  8AF2               	bsf	intcon,5,c	;volatile
   160                           
   161                           ;newmain.c: 52: INTCONbits.TMR0IF = 0;
   162  0000D4  94F2               	bcf	intcon,2,c	;volatile
   163                           
   164                           ;newmain.c: 53: T0CONbits.T08BIT = 0;
   165  0000D6  9CD5               	bcf	4053,6,c	;volatile
   166                           
   167                           ;newmain.c: 54: T0CONbits.PSA = 0;
   168  0000D8  96D5               	bcf	4053,3,c	;volatile
   169                           
   170                           ;newmain.c: 55: T0CONbits.T0PS0 = 1;
   171  0000DA  80D5               	bsf	4053,0,c	;volatile
   172                           
   173                           ;newmain.c: 56: T0CONbits.T0PS1 = 0;
   174  0000DC  92D5               	bcf	4053,1,c	;volatile
   175                           
   176                           ;newmain.c: 57: T0CONbits.T0PS2 = 1;
   177  0000DE  84D5               	bsf	4053,2,c	;volatile
   178                           
   179                           ;newmain.c: 58: T0CONbits.T0CS = 0;
   180  0000E0  9AD5               	bcf	4053,5,c	;volatile
   181                           
   182                           ;newmain.c: 59: TMR0 = 26474;
   183  0000E2  0E67               	movlw	103
   184  0000E4  6ED7               	movwf	4055,c	;volatile
   185  0000E6  0E6A               	movlw	106
   186  0000E8  6ED6               	movwf	4054,c	;volatile
   187                           
   188                           ;newmain.c: 60: T0CONbits.TMR0ON = 1;
   189  0000EA  8ED5               	bsf	4053,7,c	;volatile
   190                           
   191                           ;newmain.c: 61: INTCONbits.GIEH = 1;
   192  0000EC  8EF2               	bsf	intcon,7,c	;volatile
   193                           
   194                           ;newmain.c: 62: INTCONbits.GIEL = 1;
   195  0000EE  8CF2               	bsf	intcon,6,c	;volatile
   196  0000F0                     l676:
   197                           
   198                           ;newmain.c: 67: estado = PORTCbits.RC1;
   199  0000F0  0E00               	movlw	0
   200  0000F2  B282               	btfsc	3970,1,c	;volatile
   201  0000F4  0E01               	movlw	1
   202  0000F6  6E12               	movwf	main@estado,c
   203                           
   204                           ;newmain.c: 69: if(PORTCbits.RC1){
   205  0000F8  A282               	btfss	3970,1,c	;volatile
   206  0000FA  D006               	goto	l684
   207                           
   208                           ;newmain.c: 70: flagEstado++;
   209  0000FC  2A13               	incf	_flagEstado,f,c
   210                           
   211                           ;newmain.c: 71: flagEstado = flagEstado % 2;
   212  0000FE  5013               	movf	_flagEstado,w,c
   213  000100  0B01               	andlw	1
   214  000102  6E13               	movwf	_flagEstado,c
   215  000104                     l32:
   216  000104  B282               	btfsc	3970,1,c	;volatile
   217  000106  D7FE               	goto	l32
   218  000108                     l684:
   219                           
   220                           ;newmain.c: 73: }
   221                           ;newmain.c: 75: if(flagEstado){
   222  000108  5013               	movf	_flagEstado,w,c
   223  00010A  B4D8               	btfsc	status,2,c
   224  00010C  D00B               	goto	l35
   225                           
   226                           ;newmain.c: 76: if (flagSegundo) {
   227  00010E  5015               	movf	_flagSegundo,w,c
   228  000110  B4D8               	btfsc	status,2,c
   229  000112  D7EE               	goto	l676
   230                           
   231                           ;newmain.c: 78: if (PORTBbits.RB0 == 0) {
   232  000114  B081               	btfsc	3969,0,c	;volatile
   233  000116  D002               	goto	l37
   234                           
   235                           ;newmain.c: 79: PORTBbits.RB0 = 1;
   236  000118  8081               	bsf	3969,0,c	;volatile
   237                           
   238                           ;newmain.c: 80: } else {
   239  00011A  D001               	goto	l692
   240  00011C                     l37:
   241                           
   242                           ;newmain.c: 81: PORTBbits.RB0 = 0;
   243  00011C  9081               	bcf	3969,0,c	;volatile
   244  00011E                     l692:
   245                           
   246                           ;newmain.c: 82: }
   247                           ;newmain.c: 85: flagSegundo = 0;
   248  00011E  0E00               	movlw	0
   249  000120  6E15               	movwf	_flagSegundo,c
   250                           
   251                           ;newmain.c: 86: }
   252                           ;newmain.c: 87: }else{
   253  000122  D7E6               	goto	l676
   254  000124                     l35:
   255                           
   256                           ;newmain.c: 88: PORTBbits.RB0 = 0;
   257  000124  9081               	bcf	3969,0,c	;volatile
   258  000126  D7E4               	goto	l676
   259  000128                     __end_of_main:
   260                           	opt stack 0
   261                           intcon	equ	0xFF2
   262                           status	equ	0xFD8
   263                           
   264 ;; *************** function _pic_isr *****************
   265 ;; Defined at:
   266 ;;		line 27 in file "newmain.c"
   267 ;; Parameters:    Size  Location     Type
   268 ;;		None
   269 ;; Auto vars:     Size  Location     Type
   270 ;;		None
   271 ;; Return value:  Size  Location     Type
   272 ;;                  1    wreg      void 
   273 ;; Registers used:
   274 ;;		wreg, status,2, status,0
   275 ;; Tracked objects:
   276 ;;		On entry : 0/0
   277 ;;		On exit  : 0/0
   278 ;;		Unchanged: 0/0
   279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   280 ;;      Params:         0       0       0       0       0       0       0       0       0
   281 ;;      Locals:         0       0       0       0       0       0       0       0       0
   282 ;;      Temps:         17       0       0       0       0       0       0       0       0
   283 ;;      Totals:        17       0       0       0       0       0       0       0       0
   284 ;;Total ram usage:       17 bytes
   285 ;; Hardware stack levels used:    1
   286 ;; This function calls:
   287 ;;		Nothing
   288 ;; This function is called by:
   289 ;;		Interrupt level 1
   290 ;; This function uses a non-reentrant model
   291 ;;
   292                           
   293                           	psect	intcodelo
   294  000018                     __pintcodelo:
   295                           	opt stack 0
   296  000018                     _pic_isr:
   297                           	opt stack 30
   298                           
   299                           ;incstack = 0
   300  000018  8016               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   301  00001A  CFD8 F001          	movff	status,??_pic_isr
   302  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   303  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   304  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   305  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   306  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   307  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   308  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   309  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   310  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   311  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   312  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   313  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   314  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   315  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   316  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   317  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   318                           
   319                           ;newmain.c: 31: if (TMR0IF) {
   320  00005E  A4F2               	btfss	intcon,2,c	;volatile
   321  000060  D00D               	goto	i1l27
   322                           
   323                           ;newmain.c: 33: cont++;
   324  000062  2A14               	incf	_cont,f,c
   325                           
   326                           ;newmain.c: 34: if (cont > 1) {
   327  000064  0E01               	movlw	1
   328  000066  6414               	cpfsgt	_cont,c
   329  000068  D004               	goto	i1l26
   330                           
   331                           ;newmain.c: 35: flagSegundo = 1;
   332  00006A  0E01               	movlw	1
   333  00006C  6E15               	movwf	_flagSegundo,c
   334                           
   335                           ;newmain.c: 36: cont = 0;
   336  00006E  0E00               	movlw	0
   337  000070  6E14               	movwf	_cont,c
   338  000072                     i1l26:
   339                           
   340                           ;newmain.c: 37: }
   341                           ;newmain.c: 40: TMR0 = 26474;
   342  000072  0E67               	movlw	103
   343  000074  6ED7               	movwf	4055,c	;volatile
   344  000076  0E6A               	movlw	106
   345  000078  6ED6               	movwf	4054,c	;volatile
   346                           
   347                           ;newmain.c: 41: INTCONbits.TMR0IF = 0;
   348  00007A  94F2               	bcf	intcon,2,c	;volatile
   349  00007C                     i1l27:
   350  00007C  C011  FFF5         	movff	??_pic_isr+16,tablat
   351  000080  C010  FFF8         	movff	??_pic_isr+15,tblptru
   352  000084  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   353  000088  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   354  00008C  C00D  FFF4         	movff	??_pic_isr+12,prodh
   355  000090  C00C  FFF3         	movff	??_pic_isr+11,prodl
   356  000094  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   357  000098  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   358  00009C  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   359  0000A0  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   360  0000A4  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   361  0000A8  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   362  0000AC  C005  FFFB         	movff	??_pic_isr+4,pclatu
   363  0000B0  C004  FFFA         	movff	??_pic_isr+3,pclath
   364  0000B4  C003  FFE0         	movff	??_pic_isr+2,bsr
   365  0000B8  C002  FFE8         	movff	??_pic_isr+1,wreg
   366  0000BC  C001  FFD8         	movff	??_pic_isr,status
   367  0000C0  9016               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   368  0000C2  0010               	retfie	
   369  0000C4                     __end_of_pic_isr:
   370                           	opt stack 0
   371  0000                     pclatu	equ	0xFFB
   372                           pclath	equ	0xFFA
   373                           tblptru	equ	0xFF8
   374                           tblptrh	equ	0xFF7
   375                           tblptrl	equ	0xFF6
   376                           tablat	equ	0xFF5
   377                           prodh	equ	0xFF4
   378                           prodl	equ	0xFF3
   379                           intcon	equ	0xFF2
   380                           fsr0h	equ	0xFEA
   381                           fsr0l	equ	0xFE9
   382                           wreg	equ	0xFE8
   383                           fsr1h	equ	0xFE2
   384                           fsr1l	equ	0xFE1
   385                           bsr	equ	0xFE0
   386                           fsr2h	equ	0xFDA
   387                           fsr2l	equ	0xFD9
   388                           status	equ	0xFD8
   389                           pclatu	equ	0xFFB
   390                           pclath	equ	0xFFA
   391                           tblptru	equ	0xFF8
   392                           tblptrh	equ	0xFF7
   393                           tblptrl	equ	0xFF6
   394                           tablat	equ	0xFF5
   395                           prodh	equ	0xFF4
   396                           prodl	equ	0xFF3
   397                           intcon	equ	0xFF2
   398                           fsr0h	equ	0xFEA
   399                           fsr0l	equ	0xFE9
   400                           wreg	equ	0xFE8
   401                           fsr1h	equ	0xFE2
   402                           fsr1l	equ	0xFE1
   403                           bsr	equ	0xFE0
   404                           fsr2h	equ	0xFDA
   405                           fsr2l	equ	0xFD9
   406                           status	equ	0xFD8
   407                           
   408                           	psect	rparam
   409  0000                     pclatu	equ	0xFFB
   410                           pclath	equ	0xFFA
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           prodh	equ	0xFF4
   416                           prodl	equ	0xFF3
   417                           intcon	equ	0xFF2
   418                           fsr0h	equ	0xFEA
   419                           fsr0l	equ	0xFE9
   420                           wreg	equ	0xFE8
   421                           fsr1h	equ	0xFE2
   422                           fsr1l	equ	0xFE1
   423                           bsr	equ	0xFE0
   424                           fsr2h	equ	0xFDA
   425                           fsr2l	equ	0xFD9
   426                           status	equ	0xFD8
   427                           
   428                           	psect	temp
   429  000016                     btemp:
   430                           	opt stack 0
   431  000016                     	ds	1
   432  0000                     int$flags	set	btemp
   433                           pclatu	equ	0xFFB
   434                           pclath	equ	0xFFA
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           prodh	equ	0xFF4
   440                           prodl	equ	0xFF3
   441                           intcon	equ	0xFF2
   442                           fsr0h	equ	0xFEA
   443                           fsr0l	equ	0xFE9
   444                           wreg	equ	0xFE8
   445                           fsr1h	equ	0xFE2
   446                           fsr1l	equ	0xFE1
   447                           bsr	equ	0xFE0
   448                           fsr2h	equ	0xFDA
   449                           fsr2l	equ	0xFD9
   450                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 25 21:26:01 2018

                     l32 0104                       l35 0124                       l37 011C  
                     bsr 000FE0                      l692 011E                      l684 0108  
                    l676 00F0                      wreg 000FE8             __CFG_WDT$OFF 000000  
                   i1l26 0072                     i1l27 007C                     _TMR0 000FD6  
                   _cont 0014                     _main 00C8                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr2h 000FDA                     fsr0l 000FE9  
                   fsr1l 000FE1                     fsr2l 000FD9                     btemp 0016  
                   prodh 000FF4                     prodl 000FF3                     start 00C4  
           ___param_bank 000000                    ?_main 0001                    _TRISB 000F93  
                  _TRISC 000F94          __end_of_pic_isr 00C4                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 0128  
           __end_of_main 0128                   ??_main 0012            __activetblptr 000000  
                 _TMR0IF 007F92                ??_pic_isr 0001                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 012E          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001               _flagEstado 0013                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0128                  __ramtop 0800  
                __ptext0 00C8                _T0CONbits 000FD5                  _pic_isr 0018  
   end_of_initialization 012E                _PORTBbits 000F81                _PORTCbits 000F82  
             main@estado 0012      start_initialization 0128              __pbssCOMRAM 0013  
            __pintcodelo 0018              _flagSegundo 0015                 ?_pic_isr 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of_pic_isr 00AC  
          __size_of_main 0060                 int$flags 0016               _INTCONbits 000FF2  
               intlevel1 0000  
