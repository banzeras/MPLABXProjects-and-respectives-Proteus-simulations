

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 13 17:38:19 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    60  0000                     
    61                           ; Version 1.41
    62                           ; Generated 25/01/2017 GMT
    63                           ; 
    64                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataCOMRAM
    97  001A50                     __pidataCOMRAM:
    98                           	opt stack 0
    99                           
   100                           ;initializer for _virouDia
   101  001A50  01                 	db	1
   102                           
   103                           	psect	idataBANK0
   104  0019E6                     __pidataBANK0:
   105                           	opt stack 0
   106                           
   107                           ;initializer for _dias_mes
   108  0019E6  1F                 	db	31
   109  0019E7  1C                 	db	28
   110  0019E8  1F                 	db	31
   111  0019E9  1E                 	db	30
   112  0019EA  1F                 	db	31
   113  0019EB  1E                 	db	30
   114  0019EC  1F                 	db	31
   115  0019ED  1F                 	db	31
   116  0019EE  1E                 	db	30
   117  0019EF  1F                 	db	31
   118  0019F0  1E                 	db	30
   119  0019F1  1F                 	db	31
   120                           
   121                           ;initializer for _versao
   122  0019F2  30                 	db	48
   123  0019F3  31                 	db	49
   124  0019F4  2E                 	db	46
   125  0019F5  30                 	db	48
   126  0019F6  30                 	db	48
   127  0019F7  00                 	db	0
   128                           
   129                           	psect	smallconst
   130  000800                     __psmallconst:
   131                           	opt stack 0
   132  000800  00                 	db	0
   133  000801                     _dpowers:
   134                           	opt stack 0
   135  000801  0001               	dw	1
   136  000803  000A               	dw	10
   137  000805  0064               	dw	100
   138  000807  03E8               	dw	1000
   139  000809  2710               	dw	10000
   140  00080B                     __end_of_dpowers:
   141                           	opt stack 0
   142  0000                     _TMR0	set	4054
   143  0000                     _TRISBbits	set	3987
   144  0000                     _PORTB	set	3969
   145  0000                     _LATBbits	set	3978
   146  0000                     _T0CONbits	set	4053
   147  0000                     _TRISCbits	set	3988
   148  0000                     _TXSTA	set	4012
   149  0000                     _RCSTA	set	4011
   150  0000                     _SPBRG	set	4015
   151  0000                     _TRISD	set	3989
   152  0000                     _TRISB	set	3987
   153  0000                     _ADCON1	set	4033
   154  0000                     _PORTCbits	set	3970
   155  0000                     _PORTDbits	set	3971
   156  0000                     _RCREG	set	4014
   157  0000                     _PIR1bits	set	3998
   158  0000                     _INTCONbits	set	4082
   159  0000                     _TXREG	set	4013
   160  0000                     _PEIE	set	32662
   161  0000                     _RCIE	set	31981
   162  0000                     _RCIP	set	31997
   163  0000                     _RCIF	set	31989
   164  0000                     _TMR0IF	set	32658
   165  0000                     _TXIF	set	31988
   166  00080B                     STR_8:
   167  00080B  20                 	db	32
   168  00080C  20                 	db	32
   169  00080D  20                 	db	32
   170  00080E  20                 	db	32
   171  00080F  20                 	db	32
   172  000810  41                 	db	65	;'A'
   173  000811  4C                 	db	76	;'L'
   174  000812  41                 	db	65	;'A'
   175  000813  52                 	db	82	;'R'
   176  000814  4D                 	db	77	;'M'
   177  000815  45                 	db	69	;'E'
   178  000816  20                 	db	32
   179  000817  20                 	db	32
   180  000818  20                 	db	32
   181  000819  20                 	db	32
   182  00081A  20                 	db	32
   183  00081B  00                 	db	0
   184  00081C                     STR_2:
   185  00081C  44                 	db	68	;'D'
   186  00081D  65                 	db	101	;'e'
   187  00081E  73                 	db	115	;'s'
   188  00081F  70                 	db	112	;'p'
   189  000820  65                 	db	101	;'e'
   190  000821  72                 	db	114	;'r'
   191  000822  74                 	db	116	;'t'
   192  000823  61                 	db	97	;'a'
   193  000824  64                 	db	100	;'d'
   194  000825  6F                 	db	111	;'o'
   195  000826  72                 	db	114	;'r'
   196  000827  20                 	db	32
   197  000828  20                 	db	32
   198  000829  20                 	db	32
   199  00082A  20                 	db	32
   200  00082B  20                 	db	32
   201  00082C  00                 	db	0
   202  00082D                     STR_5:
   203  00082D  25                 	db	37
   204  00082E  69                 	db	105	;'i'
   205  00082F  25                 	db	37
   206  000830  69                 	db	105	;'i'
   207  000831  3A                 	db	58	;':'
   208  000832  25                 	db	37
   209  000833  69                 	db	105	;'i'
   210  000834  25                 	db	37
   211  000835  69                 	db	105	;'i'
   212  000836  3A                 	db	58	;':'
   213  000837  25                 	db	37
   214  000838  69                 	db	105	;'i'
   215  000839  25                 	db	37
   216  00083A  69                 	db	105	;'i'
   217  00083B  00                 	db	0
   218  00083C                     STR_7:
   219  00083C  25                 	db	37
   220  00083D  69                 	db	105	;'i'
   221  00083E  25                 	db	37
   222  00083F  69                 	db	105	;'i'
   223  000840  2F                 	db	47
   224  000841  25                 	db	37
   225  000842  69                 	db	105	;'i'
   226  000843  25                 	db	37
   227  000844  69                 	db	105	;'i'
   228  000845  2F                 	db	47
   229  000846  00                 	db	0
   230  000847                     STR_3:
   231  000847  56                 	db	86	;'V'
   232  000848  65                 	db	101	;'e'
   233  000849  72                 	db	114	;'r'
   234  00084A  73                 	db	115	;'s'
   235  00084B  61                 	db	97	;'a'
   236  00084C  6F                 	db	111	;'o'
   237  00084D  3A                 	db	58	;':'
   238  00084E  20                 	db	32
   239  00084F  00                 	db	0
   240  000850                     STR_11:
   241  000850  20                 	db	32
   242  000851  20                 	db	32
   243  000852  20                 	db	32
   244  000853  20                 	db	32
   245  000854  20                 	db	32
   246  000855  20                 	db	32
   247  000856  00                 	db	0
   248  000857                     STR_4:
   249  000857  48                 	db	72	;'H'
   250  000858  6F                 	db	111	;'o'
   251  000859  72                 	db	114	;'r'
   252  00085A  61                 	db	97	;'a'
   253  00085B  3A                 	db	58	;':'
   254  00085C  20                 	db	32
   255  00085D  00                 	db	0
   256  00085E                     STR_6:
   257  00085E  44                 	db	68	;'D'
   258  00085F  61                 	db	97	;'a'
   259  000860  74                 	db	116	;'t'
   260  000861  61                 	db	97	;'a'
   261  000862  3A                 	db	58	;':'
   262  000863  20                 	db	32
   263  000864  00                 	db	0
   264  0000                     
   265                           ; #config settings
   266  000865  00                 	db	0	; dummy byte at the end
   267  0000                     
   268                           	psect	cinit
   269  001584                     __pcinit:
   270                           	opt stack 0
   271  001584                     start_initialization:
   272                           	opt stack 0
   273  001584                     __initialization:
   274                           	opt stack 0
   275                           
   276                           ; Initialize objects allocated to BANK0 (18 bytes)
   277                           ; load TBLPTR registers with __pidataBANK0
   278  001584  0EE6               	movlw	low __pidataBANK0
   279  001586  6EF6               	movwf	tblptrl,c
   280  001588  0E19               	movlw	high __pidataBANK0
   281  00158A  6EF7               	movwf	tblptrh,c
   282  00158C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   283  00158E  6EF8               	movwf	tblptru,c
   284  001590  EE00  F099         	lfsr	0,__pdataBANK0
   285  001594  EE10 F012          	lfsr	1,18
   286  001598                     copy_data0:
   287  001598  0009               	tblrd		*+
   288  00159A  CFF5 FFEE          	movff	tablat,postinc0
   289  00159E  50E5               	movf	postdec1,w,c
   290  0015A0  50E1               	movf	fsr1l,w,c
   291  0015A2  E1FA               	bnz	copy_data0
   292                           
   293                           ; Initialize objects allocated to COMRAM (1 bytes)
   294                           ; load TBLPTR registers with __pidataCOMRAM
   295  0015A4  0E50               	movlw	low __pidataCOMRAM
   296  0015A6  6EF6               	movwf	tblptrl,c
   297  0015A8  0E1A               	movlw	high __pidataCOMRAM
   298  0015AA  6EF7               	movwf	tblptrh,c
   299  0015AC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   300  0015AE  6EF8               	movwf	tblptru,c
   301  0015B0  0009               	tblrd		*+	;fetch initializer
   302  0015B2  CFF5 F048          	movff	tablat,__pdataCOMRAM
   303                           
   304                           ; Clear objects allocated to BANK0 (35 bytes)
   305  0015B6  EE00  F060         	lfsr	0,__pbssBANK0
   306  0015BA  0E23               	movlw	35
   307  0015BC                     clear_0:
   308  0015BC  6AEE               	clrf	postinc0,c
   309  0015BE  06E8               	decf	wreg,f,c
   310  0015C0  E1FD               	bnz	clear_0
   311                           
   312                           ; Clear objects allocated to COMRAM (25 bytes)
   313  0015C2  EE00  F02F         	lfsr	0,__pbssCOMRAM
   314  0015C6  0E19               	movlw	25
   315  0015C8                     clear_1:
   316  0015C8  6AEE               	clrf	postinc0,c
   317  0015CA  06E8               	decf	wreg,f,c
   318  0015CC  E1FD               	bnz	clear_1
   319  0015CE                     end_of_initialization:
   320                           	opt stack 0
   321  0015CE                     __end_of__initialization:
   322                           	opt stack 0
   323  0015CE  9049               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   324  0015D0  9249               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   325  0015D2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   326  0015D4  6EF8               	movwf	tblptru,c
   327  0015D6  0100               	movlb	0
   328  0015D8  EFB8  F007         	goto	_main	;jump to C main() function
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	bssCOMRAM
   339  00002F                     __pbssCOMRAM:
   340                           	opt stack 0
   341  00002F                     _horarioDespertador:
   342                           	opt stack 0
   343  00002F                     	ds	6
   344  000035                     _tela_atual:
   345                           	opt stack 0
   346  000035                     	ds	1
   347  000036                     _tempoDespertador:
   348                           	opt stack 0
   349  000036                     	ds	1
   350  000037                     _botaoMin:
   351                           	opt stack 0
   352  000037                     	ds	1
   353  000038                     _botaoHora:
   354                           	opt stack 0
   355  000038                     	ds	1
   356  000039                     _flagDespertadorLigado:
   357                           	opt stack 0
   358  000039                     	ds	1
   359  00003A                     _cont:
   360                           	opt stack 0
   361  00003A                     	ds	1
   362  00003B                     _flagSegundo:
   363                           	opt stack 0
   364  00003B                     	ds	1
   365  00003C                     _i:
   366                           	opt stack 0
   367  00003C                     	ds	1
   368  00003D                     _estado:
   369                           	opt stack 0
   370  00003D                     	ds	1
   371  00003E                     _BUFFCOM:
   372                           	opt stack 0
   373  00003E                     	ds	7
   374  000045                     _pegaHoraData:
   375                           	opt stack 0
   376  000045                     	ds	3
   377                           tblptru	equ	0xFF8
   378                           tblptrh	equ	0xFF7
   379                           tblptrl	equ	0xFF6
   380                           tablat	equ	0xFF5
   381                           postinc0	equ	0xFEE
   382                           wreg	equ	0xFE8
   383                           postdec1	equ	0xFE5
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	dataCOMRAM
   387  000048                     __pdataCOMRAM:
   388                           	opt stack 0
   389  000048                     _virouDia:
   390                           	opt stack 0
   391  000048                     	ds	1
   392                           tblptru	equ	0xFF8
   393                           tblptrh	equ	0xFF7
   394                           tblptrl	equ	0xFF6
   395                           tablat	equ	0xFF5
   396                           postinc0	equ	0xFEE
   397                           wreg	equ	0xFE8
   398                           postdec1	equ	0xFE5
   399                           fsr1l	equ	0xFE1
   400                           
   401                           	psect	bssBANK0
   402  000060                     __pbssBANK0:
   403                           	opt stack 0
   404  000060                     _data_horario:
   405                           	opt stack 0
   406  000060                     	ds	20
   407  000074                     _vet:
   408                           	opt stack 0
   409  000074                     	ds	8
   410  00007C                     _BUFFRESP:
   411                           	opt stack 0
   412  00007C                     	ds	7
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	dataBANK0
   423  000099                     __pdataBANK0:
   424                           	opt stack 0
   425  000099                     _dias_mes:
   426                           	opt stack 0
   427  000099                     	ds	12
   428  0000A5                     _versao:
   429                           	opt stack 0
   430  0000A5                     	ds	6
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	cstackBANK0
   441  000083                     __pcstackBANK0:
   442                           	opt stack 0
   443  000083                     ?_sprintf:
   444                           	opt stack 0
   445  000083                     sprintf@sp:
   446                           	opt stack 0
   447                           
   448                           ; 2 bytes @ 0x0
   449  000083                     	ds	2
   450  000085                     sprintf@f:
   451                           	opt stack 0
   452                           
   453                           ; 2 bytes @ 0x2
   454  000085                     	ds	14
   455  000093                     converteAnoString@anoStr:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x10
   459  000093                     	ds	4
   460  000097                     atualiza_Tela@troca_ou_nao:
   461                           	opt stack 0
   462                           
   463                           ; 1 bytes @ 0x14
   464  000097                     	ds	1
   465  000098                     main@botao:
   466                           	opt stack 0
   467                           
   468                           ; 1 bytes @ 0x15
   469  000098                     	ds	1
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	cstackCOMRAM
   480  000001                     __pcstackCOMRAM:
   481                           	opt stack 0
   482  000001                     i1Delay10TCYx@unit:
   483                           	opt stack 0
   484                           
   485                           ; 1 bytes @ 0x0
   486  000001                     	ds	1
   487  000002                     ??i1_SetDDRamAddr:
   488                           
   489                           ; 1 bytes @ 0x1
   490  000002                     	ds	3
   491  000005                     i1SetDDRamAddr@DDaddr:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x4
   495  000005                     	ds	1
   496  000006                     ??_pic_isr:
   497  000006                     
   498                           ; 1 bytes @ 0x5
   499  000006                     	ds	17
   500  000017                     ??_Delay10KTCYx:
   501  000017                     ??_isdigit:
   502  000017                     ?_strlen:
   503                           	opt stack 0
   504  000017                     ?_crc16:
   505                           	opt stack 0
   506  000017                     ?___wmul:
   507                           	opt stack 0
   508  000017                     ?___awdiv:
   509                           	opt stack 0
   510  000017                     ?___awmod:
   511                           	opt stack 0
   512  000017                     ?___lwdiv:
   513                           	opt stack 0
   514  000017                     enviaByte@BYTE:
   515                           	opt stack 0
   516  000017                     Delay10TCYx@unit:
   517                           	opt stack 0
   518  000017                     Delay1KTCYx@unit:
   519                           	opt stack 0
   520  000017                     crc16@data_p:
   521                           	opt stack 0
   522  000017                     tx_data@cont:
   523                           	opt stack 0
   524  000017                     ___wmul@multiplier:
   525                           	opt stack 0
   526  000017                     ___awdiv@dividend:
   527                           	opt stack 0
   528  000017                     ___awmod@dividend:
   529                           	opt stack 0
   530  000017                     ___lwdiv@dividend:
   531                           	opt stack 0
   532  000017                     strlen@s:
   533                           	opt stack 0
   534                           
   535                           ; 2 bytes @ 0x16
   536  000017                     	ds	1
   537  000018                     ??_SetDDRamAddr:
   538  000018                     WriteCmdXLCD@cmd:
   539                           	opt stack 0
   540  000018                     WriteDataXLCD@data:
   541                           	opt stack 0
   542  000018                     Delay10KTCYx@unit:
   543                           	opt stack 0
   544  000018                     _isdigit$1102:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x17
   548  000018                     	ds	1
   549  000019                     ??_strlen:
   550  000019                     isdigit@c:
   551                           	opt stack 0
   552  000019                     crc16@length:
   553                           	opt stack 0
   554  000019                     ___wmul@multiplicand:
   555                           	opt stack 0
   556  000019                     ___awdiv@divisor:
   557                           	opt stack 0
   558  000019                     ___awmod@divisor:
   559                           	opt stack 0
   560  000019                     ___lwdiv@divisor:
   561                           	opt stack 0
   562                           
   563                           ; 2 bytes @ 0x18
   564  000019                     	ds	2
   565  00001B                     ??_crc16:
   566  00001B                     SetDDRamAddr@DDaddr:
   567                           	opt stack 0
   568  00001B                     ___awdiv@counter:
   569                           	opt stack 0
   570  00001B                     ___awmod@counter:
   571                           	opt stack 0
   572  00001B                     ___lwdiv@counter:
   573                           	opt stack 0
   574  00001B                     ___wmul@product:
   575                           	opt stack 0
   576  00001B                     strlen@cp:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x1A
   580  00001B                     	ds	1
   581  00001C                     OpenXLCD@lcdtype:
   582                           	opt stack 0
   583  00001C                     ___awdiv@sign:
   584                           	opt stack 0
   585  00001C                     ___awmod@sign:
   586                           	opt stack 0
   587  00001C                     ___lwdiv@quotient:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x1B
   591  00001C                     	ds	1
   592  00001D                     ?_atoi:
   593                           	opt stack 0
   594  00001D                     verificaAnoBissexto@ano:
   595                           	opt stack 0
   596  00001D                     atoi@s:
   597                           	opt stack 0
   598  00001D                     ___awdiv@quotient:
   599                           	opt stack 0
   600  00001D                     memcpy@d1:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x1C
   604  00001D                     	ds	1
   605  00001E                     ?___lwmod:
   606                           	opt stack 0
   607  00001E                     ___lwmod@dividend:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0x1D
   611  00001E                     	ds	1
   612  00001F                     ??_atoi:
   613  00001F                     ??_verificaAnoBissexto:
   614  00001F                     crc16@i:
   615                           	opt stack 0
   616  00001F                     memcpy@s1:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x1E
   620  00001F                     	ds	1
   621  000020                     crc16@data:
   622                           	opt stack 0
   623  000020                     ___lwmod@divisor:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x1F
   627  000020                     	ds	1
   628  000021                     ??_trata_relogio_data:
   629  000021                     atoi@sign:
   630                           	opt stack 0
   631  000021                     memcpy@n:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x20
   635  000021                     	ds	1
   636  000022                     ___lwmod@counter:
   637                           	opt stack 0
   638  000022                     crc16@crc:
   639                           	opt stack 0
   640  000022                     atoi@a:
   641                           	opt stack 0
   642                           
   643                           ; 2 bytes @ 0x21
   644  000022                     	ds	1
   645  000023                     ??_sprintf:
   646  000023                     memcpy@d:
   647                           	opt stack 0
   648                           
   649                           ; 2 bytes @ 0x22
   650  000023                     	ds	1
   651  000024                     ??_verificaCRCBUFFCOM:
   652  000024                     calculaCRCBUFFRESP@crc:
   653                           	opt stack 0
   654  000024                     sprintf@ap:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x23
   658  000024                     	ds	1
   659  000025                     memcpy@s:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x24
   663  000025                     	ds	1
   664  000026                     sprintf@flag:
   665                           	opt stack 0
   666  000026                     verificaCRCBUFFCOM@crc1:
   667                           	opt stack 0
   668                           
   669                           ; 2 bytes @ 0x25
   670  000026                     	ds	1
   671  000027                     sprintf@prec:
   672                           	opt stack 0
   673                           
   674                           ; 1 bytes @ 0x26
   675  000027                     	ds	1
   676  000028                     verificaCRCBUFFCOM@crc2:
   677                           	opt stack 0
   678  000028                     sprintf@val:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x27
   682  000028                     	ds	2
   683  00002A                     verificaCRCBUFFCOM@CRC_OK:
   684                           	opt stack 0
   685  00002A                     sprintf@c:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x29
   689  00002A                     	ds	1
   690  00002B                     ?_converteAnoString:
   691                           	opt stack 0
   692  00002B                     converteAnoString@ano:
   693                           	opt stack 0
   694  00002B                     verificaCRCBUFFCOM@crc:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x2A
   698  00002B                     	ds	2
   699  00002D                     putrsXLCD@buffer:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x2C
   703  00002D                     	ds	2
   704  00002F                     tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           ; 1 bytes @ 0x2E
   714 ;;
   715 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   716 ;;
   717 ;; *************** function _main *****************
   718 ;; Defined at:
   719 ;;		line 611 in file "main.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;  botao           1   21[BANK0 ] unsigned char 
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         0       1       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         0       1       0       0       0       0       0       0       0
   737 ;;Total ram usage:        1 bytes
   738 ;; Hardware stack levels required when called:   11
   739 ;; This function calls:
   740 ;;		_Delay10KTCYx
   741 ;;		_atualiza_Tela
   742 ;;		_init_XLCD
   743 ;;		_maquinaEstado
   744 ;;		_setaDespertador
   745 ;;		_trata_relogio_data
   746 ;; This function is called by:
   747 ;;		Startup code after reset
   748 ;; This function uses a non-reentrant model
   749 ;;
   750                           
   751                           	psect	text0
   752  000F70                     __ptext0:
   753                           	opt stack 0
   754  000F70                     _main:
   755                           	opt stack 20
   756                           
   757                           ;main.c: 612: ADCON1 = 0x0F;
   758                           
   759                           ;incstack = 0
   760  000F70  0E0F               	movlw	15
   761  000F72  6EC1               	movwf	4033,c	;volatile
   762                           
   763                           ;main.c: 613: TRISB = 0x00;
   764  000F74  0E00               	movlw	0
   765  000F76  6E93               	movwf	3987,c	;volatile
   766                           
   767                           ;main.c: 614: TRISD = 0x00;
   768  000F78  0E00               	movlw	0
   769  000F7A  6E95               	movwf	3989,c	;volatile
   770                           
   771                           ;main.c: 616: SPBRG=(((12000000/64)/9600)-1);
   772  000F7C  0E12               	movlw	18
   773  000F7E  6EAF               	movwf	4015,c	;volatile
   774                           
   775                           ;main.c: 622: RCSTA = 0b10010000;
   776  000F80  0E90               	movlw	144
   777  000F82  6EAB               	movwf	4011,c	;volatile
   778                           
   779                           ;main.c: 623: TXSTA = 0b00100000;
   780  000F84  0E20               	movlw	32
   781  000F86  6EAC               	movwf	4012,c	;volatile
   782                           
   783                           ;main.c: 625: TRISCbits.RC0 = 1;
   784  000F88  8094               	bsf	3988,0,c	;volatile
   785                           
   786                           ;main.c: 626: TRISCbits.RC1 = 1;
   787  000F8A  8294               	bsf	3988,1,c	;volatile
   788                           
   789                           ;main.c: 627: TRISCbits.RC2 = 1;
   790  000F8C  8494               	bsf	3988,2,c	;volatile
   791                           
   792                           ;main.c: 629: TRISCbits.RC6 = 0;
   793  000F8E  9C94               	bcf	3988,6,c	;volatile
   794                           
   795                           ;main.c: 630: TRISCbits.RC7 = 1;
   796  000F90  8E94               	bsf	3988,7,c	;volatile
   797                           
   798                           ;main.c: 633: RCIF = 0;
   799  000F92  9A9E               	bcf	3998,5,c	;volatile
   800                           
   801                           ;main.c: 634: RCIP = 0;
   802  000F94  9A9F               	bcf	3999,5,c	;volatile
   803                           
   804                           ;main.c: 635: RCIE = 1;
   805  000F96  8A9D               	bsf	3997,5,c	;volatile
   806                           
   807                           ;main.c: 636: PEIE = 1;
   808  000F98  8CF2               	bsf	intcon,6,c	;volatile
   809                           
   810                           ;main.c: 637: char botao;
   811                           ;main.c: 641: data_horario.horario[0] = 2;
   812  000F9A  0E02               	movlw	2
   813  000F9C  0100               	movlb	0	; () banked
   814  000F9E  6F60               	movwf	_data_horario& (0+255),b
   815                           
   816                           ;main.c: 642: data_horario.horario[1] = 3;
   817  000FA0  0E03               	movlw	3
   818  000FA2  0100               	movlb	0	; () banked
   819  000FA4  6F61               	movwf	(_data_horario+1)& (0+255),b
   820                           
   821                           ;main.c: 643: data_horario.horario[3] = 5;
   822  000FA6  0E05               	movlw	5
   823  000FA8  0100               	movlb	0	; () banked
   824  000FAA  6F63               	movwf	(_data_horario+3)& (0+255),b
   825                           
   826                           ;main.c: 644: data_horario.horario[4] = 9;
   827  000FAC  0E09               	movlw	9
   828  000FAE  0100               	movlb	0	; () banked
   829  000FB0  6F64               	movwf	(_data_horario+4)& (0+255),b
   830                           
   831                           ;main.c: 645: data_horario.horario[6] = 5;
   832  000FB2  0E05               	movlw	5
   833  000FB4  0100               	movlb	0	; () banked
   834  000FB6  6F66               	movwf	(_data_horario+6)& (0+255),b
   835                           
   836                           ;main.c: 646: data_horario.horario[7] = 0;
   837  000FB8  0E00               	movlw	0
   838  000FBA  0100               	movlb	0	; () banked
   839  000FBC  6F67               	movwf	(_data_horario+7)& (0+255),b
   840                           
   841                           ;main.c: 647: data_horario.horario[8] = '\0';
   842  000FBE  0E00               	movlw	0
   843  000FC0  0100               	movlb	0	; () banked
   844  000FC2  6F68               	movwf	(_data_horario+8)& (0+255),b
   845                           
   846                           ;main.c: 649: data_horario.data[0] = 3;
   847  000FC4  0E03               	movlw	3
   848  000FC6  0100               	movlb	0	; () banked
   849  000FC8  6F69               	movwf	(_data_horario+9)& (0+255),b
   850                           
   851                           ;main.c: 650: data_horario.data[1] = 1;
   852  000FCA  0E01               	movlw	1
   853  000FCC  0100               	movlb	0	; () banked
   854  000FCE  6F6A               	movwf	(_data_horario+10)& (0+255),b
   855                           
   856                           ;main.c: 651: data_horario.data[3] = 1;
   857  000FD0  0E01               	movlw	1
   858  000FD2  0100               	movlb	0	; () banked
   859  000FD4  6F6C               	movwf	(_data_horario+12)& (0+255),b
   860                           
   861                           ;main.c: 652: data_horario.data[4] = 2;
   862  000FD6  0E02               	movlw	2
   863  000FD8  0100               	movlb	0	; () banked
   864  000FDA  6F6D               	movwf	(_data_horario+13)& (0+255),b
   865                           
   866                           ;main.c: 653: data_horario.data[6] = '\0';
   867  000FDC  0E00               	movlw	0
   868  000FDE  0100               	movlb	0	; () banked
   869  000FE0  6F6F               	movwf	(_data_horario+15)& (0+255),b
   870                           
   871                           ;main.c: 654: data_horario.ano = 2018;
   872  000FE2  0E07               	movlw	7
   873  000FE4  0100               	movlb	0	; () banked
   874  000FE6  6F73               	movwf	(_data_horario+19)& (0+255),b
   875  000FE8  0EE2               	movlw	226
   876  000FEA  6F72               	movwf	(_data_horario+18)& (0+255),b
   877                           
   878                           ;main.c: 655: data_horario.dias = 31;
   879  000FEC  0E1F               	movlw	31
   880  000FEE  0100               	movlb	0	; () banked
   881  000FF0  6F70               	movwf	(_data_horario+16)& (0+255),b
   882                           
   883                           ;main.c: 656: data_horario.mes_atual = 11;
   884  000FF2  0E0B               	movlw	11
   885  000FF4  0100               	movlb	0	; () banked
   886  000FF6  6F71               	movwf	(_data_horario+17)& (0+255),b
   887                           
   888                           ;main.c: 658: horarioDespertador[0] = 0;
   889  000FF8  0E00               	movlw	0
   890  000FFA  6E2F               	movwf	_horarioDespertador,c
   891                           
   892                           ;main.c: 659: horarioDespertador[1] = 0;
   893  000FFC  0E00               	movlw	0
   894  000FFE  6E30               	movwf	_horarioDespertador+1,c
   895                           
   896                           ;main.c: 660: horarioDespertador[3] = 0;
   897  001000  0E00               	movlw	0
   898  001002  6E32               	movwf	_horarioDespertador+3,c
   899                           
   900                           ;main.c: 661: horarioDespertador[4] = 1;
   901  001004  0E01               	movlw	1
   902  001006  6E33               	movwf	_horarioDespertador+4,c
   903                           
   904                           ;main.c: 662: horarioDespertador[5] = '\0';
   905  001008  0E00               	movlw	0
   906  00100A  6E34               	movwf	_horarioDespertador+5,c
   907                           
   908                           ; BSR set to: 0
   909                           ;main.c: 664: T0CONbits.TMR0ON = 0;
   910  00100C  9ED5               	bcf	4053,7,c	;volatile
   911                           
   912                           ; BSR set to: 0
   913                           ;main.c: 665: INTCONbits.TMR0IE = 1;
   914  00100E  8AF2               	bsf	intcon,5,c	;volatile
   915                           
   916                           ; BSR set to: 0
   917                           ;main.c: 666: INTCONbits.TMR0IF = 0;
   918  001010  94F2               	bcf	intcon,2,c	;volatile
   919                           
   920                           ; BSR set to: 0
   921                           ;main.c: 667: T0CONbits.T08BIT = 0;
   922  001012  9CD5               	bcf	4053,6,c	;volatile
   923                           
   924                           ; BSR set to: 0
   925                           ;main.c: 668: T0CONbits.PSA = 0;
   926  001014  96D5               	bcf	4053,3,c	;volatile
   927                           
   928                           ; BSR set to: 0
   929                           ;main.c: 669: T0CONbits.T0PS0 = 1;
   930  001016  80D5               	bsf	4053,0,c	;volatile
   931                           
   932                           ; BSR set to: 0
   933                           ;main.c: 670: T0CONbits.T0PS1 = 0;
   934  001018  92D5               	bcf	4053,1,c	;volatile
   935                           
   936                           ; BSR set to: 0
   937                           ;main.c: 671: T0CONbits.T0PS2 = 1;
   938  00101A  84D5               	bsf	4053,2,c	;volatile
   939                           
   940                           ; BSR set to: 0
   941                           ;main.c: 672: T0CONbits.T0CS = 0;
   942  00101C  9AD5               	bcf	4053,5,c	;volatile
   943                           
   944                           ;main.c: 673: TMR0 = 26474;
   945  00101E  0E67               	movlw	103
   946  001020  6ED7               	movwf	4055,c	;volatile
   947  001022  0E6A               	movlw	106
   948  001024  6ED6               	movwf	4054,c	;volatile
   949                           
   950                           ; BSR set to: 0
   951                           ;main.c: 674: T0CONbits.TMR0ON = 1;
   952  001026  8ED5               	bsf	4053,7,c	;volatile
   953                           
   954                           ; BSR set to: 0
   955                           ;main.c: 675: INTCONbits.GIEH = 1;
   956  001028  8EF2               	bsf	intcon,7,c	;volatile
   957                           
   958                           ; BSR set to: 0
   959                           ;main.c: 676: INTCONbits.GIEL = 1;
   960  00102A  8CF2               	bsf	intcon,6,c	;volatile
   961                           
   962                           ; BSR set to: 0
   963                           ;main.c: 679: init_XLCD();
   964  00102C  ECD9  F00C         	call	_init_XLCD	;wreg free
   965  001030                     l3915:
   966                           
   967                           ;main.c: 683: maquinaEstado();
   968  001030  EC69  F00B         	call	_maquinaEstado	;wreg free
   969                           
   970                           ;main.c: 684: botao = PORTCbits.RC0;
   971  001034  0E00               	movlw	0
   972  001036  B082               	btfsc	3970,0,c	;volatile
   973  001038  0E01               	movlw	1
   974  00103A  0100               	movlb	0	; () banked
   975  00103C  6F98               	movwf	main@botao& (0+255),b
   976                           
   977                           ; BSR set to: 0
   978                           ;main.c: 685: if(botao){
   979  00103E  0100               	movlb	0	; () banked
   980  001040  5198               	movf	main@botao& (0+255),w,b
   981  001042  0100               	movlb	0	; () banked
   982  001044  B4D8               	btfsc	status,2,c
   983  001046  D011               	goto	l3929
   984                           
   985                           ; BSR set to: 0
   986                           ;main.c: 686: Delay10KTCYx(180);
   987  001048  0EB4               	movlw	180
   988  00104A  ECE8  F00C         	call	_Delay10KTCYx
   989                           
   990                           ;main.c: 688: atualiza_Tela(1);
   991  00104E  0E01               	movlw	1
   992  001050  EC89  F005         	call	_atualiza_Tela
   993                           
   994                           ;main.c: 690: while(botao){
   995  001054  D005               	goto	l3927
   996  001056                     l3925:
   997                           
   998                           ;main.c: 691: botao = PORTCbits.RC0;
   999  001056  0E00               	movlw	0
  1000  001058  B082               	btfsc	3970,0,c	;volatile
  1001  00105A  0E01               	movlw	1
  1002  00105C  0100               	movlb	0	; () banked
  1003  00105E  6F98               	movwf	main@botao& (0+255),b
  1004  001060                     l3927:
  1005  001060  0100               	movlb	0	; () banked
  1006  001062  5198               	movf	main@botao& (0+255),w,b
  1007  001064  0100               	movlb	0	; () banked
  1008  001066  A4D8               	btfss	status,2,c
  1009  001068  D7F6               	goto	l3925
  1010  00106A                     l3929:
  1011                           
  1012                           ; BSR set to: 0
  1013                           ;main.c: 692: }
  1014                           ;main.c: 693: }
  1015                           ;main.c: 695: if(flagSegundo){
  1016  00106A  503B               	movf	_flagSegundo,w,c
  1017  00106C  B4D8               	btfsc	status,2,c
  1018  00106E  D007               	goto	l3937
  1019                           
  1020                           ; BSR set to: 0
  1021                           ;main.c: 697: atualiza_Tela(0);
  1022  001070  0E00               	movlw	0
  1023  001072  EC89  F005         	call	_atualiza_Tela
  1024                           
  1025                           ;main.c: 698: trata_relogio_data();
  1026  001076  EC20  F007         	call	_trata_relogio_data	;wreg free
  1027                           
  1028                           ;main.c: 699: flagSegundo=0;
  1029  00107A  0E00               	movlw	0
  1030  00107C  6E3B               	movwf	_flagSegundo,c
  1031  00107E                     l3937:
  1032                           
  1033                           ;main.c: 701: }
  1034                           ;main.c: 703: if(tela_atual == 2){
  1035  00107E  0E02               	movlw	2
  1036  001080  1835               	xorwf	_tela_atual,w,c
  1037  001082  A4D8               	btfss	status,2,c
  1038  001084  D7D5               	goto	l3915
  1039                           
  1040                           ;main.c: 704: setaDespertador();
  1041  001086  EC68  F009         	call	_setaDespertador	;wreg free
  1042  00108A  D7D2               	goto	l3915
  1043  00108C                     __end_of_main:
  1044                           	opt stack 0
  1045                           tblptru	equ	0xFF8
  1046                           tblptrh	equ	0xFF7
  1047                           tblptrl	equ	0xFF6
  1048                           tablat	equ	0xFF5
  1049                           intcon	equ	0xFF2
  1050                           postinc0	equ	0xFEE
  1051                           wreg	equ	0xFE8
  1052                           postdec1	equ	0xFE5
  1053                           fsr1l	equ	0xFE1
  1054                           status	equ	0xFD8
  1055                           
  1056 ;; *************** function _trata_relogio_data *****************
  1057 ;; Defined at:
  1058 ;;		line 177 in file "main.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;		None
  1061 ;; Auto vars:     Size  Location     Type
  1062 ;;		None
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1072 ;;      Params:         0       0       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1074 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1075 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1076 ;;Total ram usage:        5 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; Hardware stack levels required when called:    7
  1079 ;; This function calls:
  1080 ;;		_verificaAnoBissexto
  1081 ;; This function is called by:
  1082 ;;		_main
  1083 ;; This function uses a non-reentrant model
  1084 ;;
  1085                           
  1086                           	psect	text1
  1087  000E40                     __ptext1:
  1088                           	opt stack 0
  1089  000E40                     _trata_relogio_data:
  1090                           	opt stack 23
  1091                           
  1092                           ;main.c: 178: data_horario.horario[7]++;
  1093                           
  1094                           ;incstack = 0
  1095  000E40  0100               	movlb	0	; () banked
  1096  000E42  2B67               	incf	(_data_horario+7)& (0+255),f,b
  1097                           
  1098                           ; BSR set to: 0
  1099                           ;main.c: 179: if(data_horario.horario[7]> 9){
  1100  000E44  0E09               	movlw	9
  1101  000E46  0100               	movlb	0	; () banked
  1102  000E48  6567               	cpfsgt	(_data_horario+7)& (0+255),b
  1103  000E4A  0012               	return	
  1104                           
  1105                           ; BSR set to: 0
  1106                           ;main.c: 180: data_horario.horario[7]= 0;
  1107  000E4C  0E00               	movlw	0
  1108  000E4E  0100               	movlb	0	; () banked
  1109  000E50  6F67               	movwf	(_data_horario+7)& (0+255),b
  1110                           
  1111                           ; BSR set to: 0
  1112                           ;main.c: 181: data_horario.horario[6]++;
  1113  000E52  0100               	movlb	0	; () banked
  1114  000E54  2B66               	incf	(_data_horario+6)& (0+255),f,b
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;main.c: 182: if(data_horario.horario[6]> 5 ){
  1118  000E56  0E05               	movlw	5
  1119  000E58  0100               	movlb	0	; () banked
  1120  000E5A  6566               	cpfsgt	(_data_horario+6)& (0+255),b
  1121  000E5C  0012               	return	
  1122                           
  1123                           ; BSR set to: 0
  1124                           ;main.c: 183: data_horario.horario[6] = 0;
  1125  000E5E  0E00               	movlw	0
  1126  000E60  0100               	movlb	0	; () banked
  1127  000E62  6F66               	movwf	(_data_horario+6)& (0+255),b
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;main.c: 184: data_horario.horario[4]++;
  1131  000E64  0100               	movlb	0	; () banked
  1132  000E66  2B64               	incf	(_data_horario+4)& (0+255),f,b
  1133                           
  1134                           ; BSR set to: 0
  1135                           ;main.c: 185: virouDia = 1;
  1136  000E68  0E01               	movlw	1
  1137  000E6A  6E48               	movwf	_virouDia,c
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;main.c: 186: if(data_horario.horario[4]>9){
  1141  000E6C  0E09               	movlw	9
  1142  000E6E  0100               	movlb	0	; () banked
  1143  000E70  6564               	cpfsgt	(_data_horario+4)& (0+255),b
  1144  000E72  0012               	return	
  1145                           
  1146                           ; BSR set to: 0
  1147                           ;main.c: 187: data_horario.horario[4] = 0;
  1148  000E74  0E00               	movlw	0
  1149  000E76  0100               	movlb	0	; () banked
  1150  000E78  6F64               	movwf	(_data_horario+4)& (0+255),b
  1151                           
  1152                           ; BSR set to: 0
  1153                           ;main.c: 188: data_horario.horario[3]++;
  1154  000E7A  0100               	movlb	0	; () banked
  1155  000E7C  2B63               	incf	(_data_horario+3)& (0+255),f,b
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;main.c: 189: if( data_horario.horario[3]> 5){
  1159  000E7E  0E05               	movlw	5
  1160  000E80  0100               	movlb	0	; () banked
  1161  000E82  6563               	cpfsgt	(_data_horario+3)& (0+255),b
  1162  000E84  0012               	return	
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;main.c: 190: data_horario.horario[3] = 0;
  1166  000E86  0E00               	movlw	0
  1167  000E88  0100               	movlb	0	; () banked
  1168  000E8A  6F63               	movwf	(_data_horario+3)& (0+255),b
  1169                           
  1170                           ; BSR set to: 0
  1171                           ;main.c: 191: data_horario.horario[1]++;
  1172  000E8C  0100               	movlb	0	; () banked
  1173  000E8E  2B61               	incf	(_data_horario+1)& (0+255),f,b
  1174                           
  1175                           ; BSR set to: 0
  1176                           ;main.c: 192: if( data_horario.horario[1]> 9){
  1177  000E90  0E09               	movlw	9
  1178  000E92  0100               	movlb	0	; () banked
  1179  000E94  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1180  000E96  D005               	goto	l3751
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;main.c: 193: data_horario.horario[1]= 0;
  1184  000E98  0E00               	movlw	0
  1185  000E9A  0100               	movlb	0	; () banked
  1186  000E9C  6F61               	movwf	(_data_horario+1)& (0+255),b
  1187                           
  1188                           ; BSR set to: 0
  1189                           ;main.c: 194: data_horario.horario[0]++;
  1190  000E9E  0100               	movlb	0	; () banked
  1191  000EA0  2B60               	incf	_data_horario& (0+255),f,b
  1192  000EA2                     l3751:
  1193                           
  1194                           ; BSR set to: 0
  1195                           ;main.c: 195: }
  1196                           ;main.c: 196: if( data_horario.horario[0] == 2 && data_horario.horario[1] > 3){
  1197  000EA2  0E02               	movlw	2
  1198  000EA4  0100               	movlb	0	; () banked
  1199  000EA6  1960               	xorwf	_data_horario& (0+255),w,b
  1200  000EA8  A4D8               	btfss	status,2,c
  1201  000EAA  0012               	return	
  1202                           
  1203                           ; BSR set to: 0
  1204  000EAC  0E03               	movlw	3
  1205  000EAE  0100               	movlb	0	; () banked
  1206  000EB0  6561               	cpfsgt	(_data_horario+1)& (0+255),b
  1207  000EB2  0012               	return	
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;main.c: 197: data_horario.horario[0] = 0;
  1211  000EB4  0E00               	movlw	0
  1212  000EB6  0100               	movlb	0	; () banked
  1213  000EB8  6F60               	movwf	_data_horario& (0+255),b
  1214                           
  1215                           ;main.c: 198: data_horario.horario[1] = 0;
  1216  000EBA  0E00               	movlw	0
  1217  000EBC  0100               	movlb	0	; () banked
  1218  000EBE  6F61               	movwf	(_data_horario+1)& (0+255),b
  1219                           
  1220                           ; BSR set to: 0
  1221                           ;main.c: 199: data_horario.data[1]++;
  1222  000EC0  0100               	movlb	0	; () banked
  1223  000EC2  2B6A               	incf	(_data_horario+10)& (0+255),f,b
  1224                           
  1225                           ; BSR set to: 0
  1226                           ;main.c: 200: data_horario.dias++;
  1227  000EC4  0100               	movlb	0	; () banked
  1228  000EC6  2B70               	incf	(_data_horario+16)& (0+255),f,b
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;main.c: 201: if(data_horario.data[1]> 9){
  1232  000EC8  0E09               	movlw	9
  1233  000ECA  0100               	movlb	0	; () banked
  1234  000ECC  656A               	cpfsgt	(_data_horario+10)& (0+255),b
  1235  000ECE  D005               	goto	l3767
  1236                           
  1237                           ; BSR set to: 0
  1238                           ;main.c: 202: data_horario.data[1]=0;
  1239  000ED0  0E00               	movlw	0
  1240  000ED2  0100               	movlb	0	; () banked
  1241  000ED4  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1242                           
  1243                           ; BSR set to: 0
  1244                           ;main.c: 203: data_horario.data[0]++;
  1245  000ED6  0100               	movlb	0	; () banked
  1246  000ED8  2B69               	incf	(_data_horario+9)& (0+255),f,b
  1247  000EDA                     l3767:
  1248                           
  1249                           ; BSR set to: 0
  1250                           ;main.c: 204: }
  1251                           ;main.c: 205: if(data_horario.dias > dias_mes[data_horario.mes_atual-1]){
  1252  000EDA  0EFF               	movlw	255
  1253  000EDC  6E21               	movwf	??_trata_relogio_data& (0+255),c
  1254  000EDE  0EFF               	movlw	255
  1255  000EE0  6E22               	movwf	(??_trata_relogio_data+1)& (0+255),c
  1256  000EE2  0100               	movlb	0	; () banked
  1257  000EE4  5171               	movf	(_data_horario+17)& (0+255),w,b
  1258  000EE6  6E23               	movwf	(??_trata_relogio_data+2)& (0+255),c
  1259  000EE8  6A24               	clrf	(??_trata_relogio_data+3)& (0+255),c
  1260  000EEA  5021               	movf	??_trata_relogio_data,w,c
  1261  000EEC  2623               	addwf	??_trata_relogio_data+2,f,c
  1262  000EEE  5022               	movf	??_trata_relogio_data+1,w,c
  1263  000EF0  2224               	addwfc	??_trata_relogio_data+3,f,c
  1264  000EF2  0E99               	movlw	low _dias_mes
  1265  000EF4  2423               	addwf	??_trata_relogio_data+2,w,c
  1266  000EF6  6ED9               	movwf	fsr2l,c
  1267  000EF8  0E00               	movlw	high _dias_mes
  1268  000EFA  2024               	addwfc	??_trata_relogio_data+3,w,c
  1269  000EFC  6EDA               	movwf	fsr2h,c
  1270  000EFE  0100               	movlb	0	; () banked
  1271  000F00  5170               	movf	(_data_horario+16)& (0+255),w,b
  1272  000F02  5CDE               	subwf	postinc2,w,c
  1273  000F04  B0D8               	btfsc	status,0,c
  1274  000F06  0012               	return	
  1275                           
  1276                           ; BSR set to: 0
  1277                           ;main.c: 206: data_horario.data[1]= 1;
  1278  000F08  0E01               	movlw	1
  1279  000F0A  0100               	movlb	0	; () banked
  1280  000F0C  6F6A               	movwf	(_data_horario+10)& (0+255),b
  1281                           
  1282                           ;main.c: 207: data_horario.data[0]= 0;
  1283  000F0E  0E00               	movlw	0
  1284  000F10  0100               	movlb	0	; () banked
  1285  000F12  6F69               	movwf	(_data_horario+9)& (0+255),b
  1286                           
  1287                           ; BSR set to: 0
  1288                           ;main.c: 208: data_horario.mes_atual++;
  1289  000F14  0100               	movlb	0	; () banked
  1290  000F16  2B71               	incf	(_data_horario+17)& (0+255),f,b
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;main.c: 209: data_horario.data[4]++;
  1294  000F18  0100               	movlb	0	; () banked
  1295  000F1A  2B6D               	incf	(_data_horario+13)& (0+255),f,b
  1296                           
  1297                           ; BSR set to: 0
  1298                           ;main.c: 210: if( data_horario.data[4] > 9){
  1299  000F1C  0E09               	movlw	9
  1300  000F1E  0100               	movlb	0	; () banked
  1301  000F20  656D               	cpfsgt	(_data_horario+13)& (0+255),b
  1302  000F22  D005               	goto	l3781
  1303                           
  1304                           ; BSR set to: 0
  1305                           ;main.c: 211: data_horario.data[4] = 0;
  1306  000F24  0E00               	movlw	0
  1307  000F26  0100               	movlb	0	; () banked
  1308  000F28  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;main.c: 212: data_horario.data[3]++;
  1312  000F2A  0100               	movlb	0	; () banked
  1313  000F2C  2B6C               	incf	(_data_horario+12)& (0+255),f,b
  1314  000F2E                     l3781:
  1315                           
  1316                           ; BSR set to: 0
  1317                           ;main.c: 213: }
  1318                           ;main.c: 214: if(data_horario.mes_atual >11){
  1319  000F2E  0E0B               	movlw	11
  1320  000F30  0100               	movlb	0	; () banked
  1321  000F32  6571               	cpfsgt	(_data_horario+17)& (0+255),b
  1322  000F34  0012               	return	
  1323                           
  1324                           ; BSR set to: 0
  1325                           ;main.c: 215: data_horario.data[4] =1;
  1326  000F36  0E01               	movlw	1
  1327  000F38  0100               	movlb	0	; () banked
  1328  000F3A  6F6D               	movwf	(_data_horario+13)& (0+255),b
  1329                           
  1330                           ;main.c: 216: data_horario.data[3]= 0;
  1331  000F3C  0E00               	movlw	0
  1332  000F3E  0100               	movlb	0	; () banked
  1333  000F40  6F6C               	movwf	(_data_horario+12)& (0+255),b
  1334                           
  1335                           ;main.c: 217: data_horario.mes_atual =1;
  1336  000F42  0E01               	movlw	1
  1337  000F44  0100               	movlb	0	; () banked
  1338  000F46  6F71               	movwf	(_data_horario+17)& (0+255),b
  1339                           
  1340                           ; BSR set to: 0
  1341                           ;main.c: 218: data_horario.ano++;
  1342  000F48  0100               	movlb	0	; () banked
  1343  000F4A  4B72               	infsnz	(_data_horario+18)& (0+255),f,b
  1344  000F4C  2B73               	incf	(_data_horario+19)& (0+255),f,b
  1345                           
  1346                           ; BSR set to: 0
  1347                           ;main.c: 219: if(verificaAnoBissexto(data_horario.ano)){
  1348  000F4E  C072  F01D         	movff	_data_horario+18,verificaAnoBissexto@ano
  1349  000F52  C073  F01E         	movff	_data_horario+19,verificaAnoBissexto@ano+1
  1350  000F56  EC66  F00A         	call	_verificaAnoBissexto	;wreg free
  1351  000F5A  0900               	iorlw	0
  1352  000F5C  B4D8               	btfsc	status,2,c
  1353  000F5E  D004               	goto	l3791
  1354                           
  1355                           ;main.c: 220: dias_mes[1] = 29;
  1356  000F60  0E1D               	movlw	29
  1357  000F62  0100               	movlb	0	; () banked
  1358  000F64  6F9A               	movwf	(_dias_mes+1)& (0+255),b
  1359                           
  1360                           ;main.c: 221: }
  1361  000F66  0012               	return	
  1362  000F68                     l3791:
  1363                           
  1364                           ;main.c: 222: else
  1365                           ;main.c: 223: {
  1366                           ;main.c: 224: dias_mes[1] = 28;
  1367  000F68  0E1C               	movlw	28
  1368  000F6A  0100               	movlb	0	; () banked
  1369  000F6C  6F9A               	movwf	(_dias_mes+1)& (0+255),b
  1370                           
  1371                           ; BSR set to: 0
  1372                           
  1373                           ; BSR set to: 0
  1374                           
  1375                           ; BSR set to: 0
  1376                           
  1377                           ; BSR set to: 0
  1378                           
  1379                           ; BSR set to: 0
  1380                           
  1381                           ; BSR set to: 0
  1382                           
  1383                           ; BSR set to: 0
  1384  000F6E  0012               	return	
  1385  000F70                     __end_of_trata_relogio_data:
  1386                           	opt stack 0
  1387                           tblptru	equ	0xFF8
  1388                           tblptrh	equ	0xFF7
  1389                           tblptrl	equ	0xFF6
  1390                           tablat	equ	0xFF5
  1391                           intcon	equ	0xFF2
  1392                           postinc0	equ	0xFEE
  1393                           wreg	equ	0xFE8
  1394                           postdec1	equ	0xFE5
  1395                           fsr1l	equ	0xFE1
  1396                           postinc2	equ	0xFDE
  1397                           fsr2h	equ	0xFDA
  1398                           fsr2l	equ	0xFD9
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _verificaAnoBissexto *****************
  1402 ;; Defined at:
  1403 ;;		line 149 in file "main.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  ano             2   28[COMRAM] int 
  1406 ;; Auto vars:     Size  Location     Type
  1407 ;;		None
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  1    wreg      unsigned char 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0, cstack
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1417 ;;      Params:         2       0       0       0       0       0       0       0       0
  1418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1419 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1420 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1421 ;;Total ram usage:        4 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    6
  1424 ;; This function calls:
  1425 ;;		___awmod
  1426 ;; This function is called by:
  1427 ;;		_trata_relogio_data
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text2
  1432  0014CC                     __ptext2:
  1433                           	opt stack 0
  1434  0014CC                     _verificaAnoBissexto:
  1435                           	opt stack 23
  1436                           
  1437                           ;main.c: 150: if(ano % 4 == 0 ){
  1438                           
  1439                           ; BSR set to: 0
  1440                           ;incstack = 0
  1441  0014CC  0E03               	movlw	3
  1442  0014CE  141D               	andwf	verificaAnoBissexto@ano,w,c
  1443  0014D0  6E1F               	movwf	??_verificaAnoBissexto& (0+255),c
  1444  0014D2  0E00               	movlw	0
  1445  0014D4  141E               	andwf	verificaAnoBissexto@ano+1,w,c
  1446  0014D6  6E20               	movwf	(??_verificaAnoBissexto+1)& (0+255),c
  1447  0014D8  501F               	movf	??_verificaAnoBissexto,w,c
  1448  0014DA  1020               	iorwf	??_verificaAnoBissexto+1,w,c
  1449  0014DC  A4D8               	btfss	status,2,c
  1450  0014DE  D022               	goto	l3493
  1451                           
  1452                           ;main.c: 151: if( ano % 100 != 0){
  1453  0014E0  C01D  F017         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1454  0014E4  C01E  F018         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1455  0014E8  0E00               	movlw	0
  1456  0014EA  6E1A               	movwf	___awmod@divisor+1,c
  1457  0014EC  0E64               	movlw	100
  1458  0014EE  6E19               	movwf	___awmod@divisor,c
  1459  0014F0  ECF9  F009         	call	___awmod	;wreg free
  1460  0014F4  5017               	movf	?___awmod,w,c
  1461  0014F6  1018               	iorwf	?___awmod+1,w,c
  1462  0014F8  B4D8               	btfsc	status,2,c
  1463  0014FA  D002               	goto	l3481
  1464                           
  1465                           ;main.c: 152: return 1;
  1466  0014FC  0E01               	movlw	1
  1467                           
  1468                           ;main.c: 153: }
  1469  0014FE  0012               	return	
  1470  001500                     l3481:
  1471                           
  1472                           ;main.c: 154: else
  1473                           ;main.c: 155: {
  1474                           ;main.c: 156: if( ano % 400 != 0){
  1475  001500  C01D  F017         	movff	verificaAnoBissexto@ano,___awmod@dividend
  1476  001504  C01E  F018         	movff	verificaAnoBissexto@ano+1,___awmod@dividend+1
  1477  001508  0E01               	movlw	1
  1478  00150A  6E1A               	movwf	___awmod@divisor+1,c
  1479  00150C  0E90               	movlw	144
  1480  00150E  6E19               	movwf	___awmod@divisor,c
  1481  001510  ECF9  F009         	call	___awmod	;wreg free
  1482  001514  5017               	movf	?___awmod,w,c
  1483  001516  1018               	iorwf	?___awmod+1,w,c
  1484  001518  B4D8               	btfsc	status,2,c
  1485  00151A  D002               	goto	l3489
  1486                           
  1487                           ;main.c: 157: return 0;
  1488  00151C  0E00               	movlw	0
  1489                           
  1490                           ;main.c: 158: }
  1491  00151E  0012               	return	
  1492  001520                     l3489:
  1493                           
  1494                           ;main.c: 159: else{
  1495                           ;main.c: 160: return 1;
  1496  001520  0E01               	movlw	1
  1497                           
  1498                           ;main.c: 161: }
  1499                           ;main.c: 162: }
  1500                           ;main.c: 163: }
  1501  001522  0012               	return	
  1502  001524                     l3493:
  1503                           
  1504                           ;main.c: 164: else{
  1505                           ;main.c: 165: return 0;
  1506  001524  0E00               	movlw	0
  1507  001526  0012               	return	
  1508  001528                     __end_of_verificaAnoBissexto:
  1509                           	opt stack 0
  1510                           tblptru	equ	0xFF8
  1511                           tblptrh	equ	0xFF7
  1512                           tblptrl	equ	0xFF6
  1513                           tablat	equ	0xFF5
  1514                           intcon	equ	0xFF2
  1515                           postinc0	equ	0xFEE
  1516                           wreg	equ	0xFE8
  1517                           postdec1	equ	0xFE5
  1518                           fsr1l	equ	0xFE1
  1519                           postinc2	equ	0xFDE
  1520                           fsr2h	equ	0xFDA
  1521                           fsr2l	equ	0xFD9
  1522                           status	equ	0xFD8
  1523                           
  1524 ;; *************** function _setaDespertador *****************
  1525 ;; Defined at:
  1526 ;;		line 308 in file "main.c"
  1527 ;; Parameters:    Size  Location     Type
  1528 ;;		None
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;		None
  1531 ;; Return value:  Size  Location     Type
  1532 ;;                  1    wreg      void 
  1533 ;; Registers used:
  1534 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1535 ;; Tracked objects:
  1536 ;;		On entry : 0/0
  1537 ;;		On exit  : 0/0
  1538 ;;		Unchanged: 0/0
  1539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1540 ;;      Params:         0       0       0       0       0       0       0       0       0
  1541 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1542 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1543 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1544 ;;Total ram usage:        0 bytes
  1545 ;; Hardware stack levels used:    1
  1546 ;; Hardware stack levels required when called:   10
  1547 ;; This function calls:
  1548 ;;		_Delay10KTCYx
  1549 ;;		_atualiza_Tela
  1550 ;; This function is called by:
  1551 ;;		_main
  1552 ;; This function uses a non-reentrant model
  1553 ;;
  1554                           
  1555                           	psect	text3
  1556  0012D0                     __ptext3:
  1557                           	opt stack 0
  1558  0012D0                     _setaDespertador:
  1559                           	opt stack 20
  1560                           
  1561                           ;main.c: 309: botaoHora = PORTCbits.RC1;
  1562                           
  1563                           ;incstack = 0
  1564  0012D0  0E00               	movlw	0
  1565  0012D2  B282               	btfsc	3970,1,c	;volatile
  1566  0012D4  0E01               	movlw	1
  1567  0012D6  6E38               	movwf	_botaoHora,c
  1568                           
  1569                           ;main.c: 310: botaoMin = PORTCbits.RC2;
  1570  0012D8  0E00               	movlw	0
  1571  0012DA  B482               	btfsc	3970,2,c	;volatile
  1572  0012DC  0E01               	movlw	1
  1573  0012DE  6E37               	movwf	_botaoMin,c
  1574                           
  1575                           ;main.c: 311: if(botaoHora){
  1576  0012E0  5038               	movf	_botaoHora,w,c
  1577  0012E2  B4D8               	btfsc	status,2,c
  1578  0012E4  D020               	goto	l3825
  1579                           
  1580                           ;main.c: 312: Delay10KTCYx(180);
  1581  0012E6  0EB4               	movlw	180
  1582  0012E8  ECE8  F00C         	call	_Delay10KTCYx
  1583                           
  1584                           ;main.c: 314: horarioDespertador[1]++;
  1585  0012EC  2A30               	incf	_horarioDespertador+1,f,c
  1586                           
  1587                           ;main.c: 315: if(horarioDespertador[1]>9){
  1588  0012EE  0E09               	movlw	9
  1589  0012F0  6430               	cpfsgt	_horarioDespertador+1,c
  1590  0012F2  D003               	goto	l3813
  1591                           
  1592                           ;main.c: 316: horarioDespertador[1] = 0;
  1593  0012F4  0E00               	movlw	0
  1594  0012F6  6E30               	movwf	_horarioDespertador+1,c
  1595                           
  1596                           ;main.c: 317: horarioDespertador[0]++;
  1597  0012F8  2A2F               	incf	_horarioDespertador,f,c
  1598  0012FA                     l3813:
  1599                           
  1600                           ;main.c: 318: }
  1601                           ;main.c: 319: if(horarioDespertador[0] == 2 && horarioDespertador[1] > 3){
  1602  0012FA  0E02               	movlw	2
  1603  0012FC  182F               	xorwf	_horarioDespertador,w,c
  1604  0012FE  A4D8               	btfss	status,2,c
  1605  001300  D007               	goto	l3819
  1606  001302  0E03               	movlw	3
  1607  001304  6430               	cpfsgt	_horarioDespertador+1,c
  1608  001306  D004               	goto	l3819
  1609                           
  1610                           ;main.c: 320: horarioDespertador[1] = 0;
  1611  001308  0E00               	movlw	0
  1612  00130A  6E30               	movwf	_horarioDespertador+1,c
  1613                           
  1614                           ;main.c: 321: horarioDespertador[0] = 0;
  1615  00130C  0E00               	movlw	0
  1616  00130E  6E2F               	movwf	_horarioDespertador,c
  1617  001310                     l3819:
  1618                           
  1619                           ;main.c: 322: }
  1620                           ;main.c: 324: atualiza_Tela(0);
  1621  001310  0E00               	movlw	0
  1622  001312  EC89  F005         	call	_atualiza_Tela
  1623                           
  1624                           ;main.c: 325: while(botaoHora){
  1625  001316  D004               	goto	l3823
  1626  001318                     l3821:
  1627                           
  1628                           ;main.c: 326: botaoHora = PORTCbits.RC1;
  1629  001318  0E00               	movlw	0
  1630  00131A  B282               	btfsc	3970,1,c	;volatile
  1631  00131C  0E01               	movlw	1
  1632  00131E  6E38               	movwf	_botaoHora,c
  1633  001320                     l3823:
  1634  001320  5038               	movf	_botaoHora,w,c
  1635  001322  A4D8               	btfss	status,2,c
  1636  001324  D7F9               	goto	l3821
  1637  001326                     l3825:
  1638                           
  1639                           ;main.c: 327: }
  1640                           ;main.c: 328: }
  1641                           ;main.c: 330: if(botaoMin){
  1642  001326  5037               	movf	_botaoMin,w,c
  1643  001328  B4D8               	btfsc	status,2,c
  1644  00132A  0012               	return	
  1645                           
  1646                           ;main.c: 331: Delay10KTCYx(180);
  1647  00132C  0EB4               	movlw	180
  1648  00132E  ECE8  F00C         	call	_Delay10KTCYx
  1649                           
  1650                           ;main.c: 333: horarioDespertador[4]++;
  1651  001332  2A33               	incf	_horarioDespertador+4,f,c
  1652                           
  1653                           ;main.c: 334: if(horarioDespertador[4]>9){
  1654  001334  0E09               	movlw	9
  1655  001336  6433               	cpfsgt	_horarioDespertador+4,c
  1656  001338  D003               	goto	l3837
  1657                           
  1658                           ;main.c: 335: horarioDespertador[4]=0;
  1659  00133A  0E00               	movlw	0
  1660  00133C  6E33               	movwf	_horarioDespertador+4,c
  1661                           
  1662                           ;main.c: 336: horarioDespertador[3]++;
  1663  00133E  2A32               	incf	_horarioDespertador+3,f,c
  1664  001340                     l3837:
  1665                           
  1666                           ;main.c: 338: }
  1667                           ;main.c: 339: if(horarioDespertador[3] == 5 && horarioDespertador[4] > 9){
  1668  001340  0E05               	movlw	5
  1669  001342  1832               	xorwf	_horarioDespertador+3,w,c
  1670  001344  A4D8               	btfss	status,2,c
  1671  001346  D007               	goto	l3843
  1672  001348  0E09               	movlw	9
  1673  00134A  6433               	cpfsgt	_horarioDespertador+4,c
  1674  00134C  D004               	goto	l3843
  1675                           
  1676                           ;main.c: 340: horarioDespertador[4] = 0;
  1677  00134E  0E00               	movlw	0
  1678  001350  6E33               	movwf	_horarioDespertador+4,c
  1679                           
  1680                           ;main.c: 341: horarioDespertador[3] = 0;
  1681  001352  0E00               	movlw	0
  1682  001354  6E32               	movwf	_horarioDespertador+3,c
  1683  001356                     l3843:
  1684                           
  1685                           ;main.c: 342: }
  1686                           ;main.c: 343: atualiza_Tela(0);
  1687  001356  0E00               	movlw	0
  1688  001358  EC89  F005         	call	_atualiza_Tela
  1689                           
  1690                           ;main.c: 344: while(botaoMin){
  1691  00135C  D004               	goto	l3847
  1692  00135E                     l3845:
  1693                           
  1694                           ;main.c: 345: botaoMin = PORTCbits.RC2;
  1695  00135E  0E00               	movlw	0
  1696  001360  B482               	btfsc	3970,2,c	;volatile
  1697  001362  0E01               	movlw	1
  1698  001364  6E37               	movwf	_botaoMin,c
  1699  001366                     l3847:
  1700  001366  5037               	movf	_botaoMin,w,c
  1701  001368  B4D8               	btfsc	status,2,c
  1702  00136A  0012               	return	
  1703  00136C  D7F8               	goto	l3845
  1704  00136E                     __end_of_setaDespertador:
  1705                           	opt stack 0
  1706                           tblptru	equ	0xFF8
  1707                           tblptrh	equ	0xFF7
  1708                           tblptrl	equ	0xFF6
  1709                           tablat	equ	0xFF5
  1710                           intcon	equ	0xFF2
  1711                           postinc0	equ	0xFEE
  1712                           wreg	equ	0xFE8
  1713                           postdec1	equ	0xFE5
  1714                           fsr1l	equ	0xFE1
  1715                           postinc2	equ	0xFDE
  1716                           fsr2h	equ	0xFDA
  1717                           fsr2l	equ	0xFD9
  1718                           status	equ	0xFD8
  1719                           
  1720 ;; *************** function _atualiza_Tela *****************
  1721 ;; Defined at:
  1722 ;;		line 257 in file "main.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  troca_ou_nao    1    wreg     unsigned char 
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  troca_ou_nao    1   20[BANK0 ] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0
  1737 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1739 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1740 ;;Total ram usage:        1 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    9
  1743 ;; This function calls:
  1744 ;;		_SetDDRamAddr
  1745 ;;		_acionaDespertador
  1746 ;;		_converteAnoString
  1747 ;;		_putrsXLCD
  1748 ;;		_sprintf
  1749 ;; This function is called by:
  1750 ;;		_setaDespertador
  1751 ;;		_main
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text4
  1756  000B12                     __ptext4:
  1757                           	opt stack 0
  1758  000B12                     _atualiza_Tela:
  1759                           	opt stack 20
  1760                           
  1761                           ;incstack = 0
  1762                           ;atualiza_Tela@troca_ou_nao stored from wreg
  1763  000B12  0100               	movlb	0	; () banked
  1764  000B14  6F97               	movwf	atualiza_Tela@troca_ou_nao& (0+255),b
  1765                           
  1766                           ;main.c: 259: if(troca_ou_nao == 1){
  1767  000B16  0100               	movlb	0	; () banked
  1768  000B18  0597               	decf	atualiza_Tela@troca_ou_nao& (0+255),w,b
  1769  000B1A  A4D8               	btfss	status,2,c
  1770  000B1C  D0DD               	goto	l3609
  1771                           
  1772                           ; BSR set to: 0
  1773                           ;main.c: 260: tela_atual++;
  1774  000B1E  2A35               	incf	_tela_atual,f,c
  1775                           
  1776                           ; BSR set to: 0
  1777                           ;main.c: 261: if(tela_atual >2){
  1778  000B20  0E02               	movlw	2
  1779  000B22  6435               	cpfsgt	_tela_atual,c
  1780  000B24  D0D9               	goto	l3609
  1781                           
  1782                           ; BSR set to: 0
  1783                           ;main.c: 262: tela_atual = 0;
  1784  000B26  0E00               	movlw	0
  1785  000B28  6E35               	movwf	_tela_atual,c
  1786                           
  1787                           ; BSR set to: 0
  1788                           ;main.c: 263: }
  1789                           ;main.c: 264: }
  1790                           ;main.c: 265: switch(tela_atual){
  1791                           
  1792                           ; BSR set to: 0
  1793  000B2A  D0D6               	goto	l3609
  1794  000B2C                     l3559:
  1795                           
  1796                           ;main.c: 267: SetDDRamAddr(0x00);
  1797  000B2C  0E00               	movlw	0
  1798  000B2E  EC17  F00B         	call	_SetDDRamAddr
  1799                           
  1800                           ;main.c: 268: putrsXLCD("Despertador     ");
  1801  000B32  0E1C               	movlw	low STR_2
  1802  000B34  6E2D               	movwf	putrsXLCD@buffer,c
  1803  000B36  0E08               	movlw	high STR_2
  1804  000B38  6E2E               	movwf	putrsXLCD@buffer+1,c
  1805  000B3A  EC94  F00A         	call	_putrsXLCD	;wreg free
  1806                           
  1807                           ;main.c: 269: SetDDRamAddr(0x40);
  1808  000B3E  0E40               	movlw	64
  1809  000B40  EC17  F00B         	call	_SetDDRamAddr
  1810                           
  1811                           ;main.c: 270: putrsXLCD("Versao: ");
  1812  000B44  0E47               	movlw	low STR_3
  1813  000B46  6E2D               	movwf	putrsXLCD@buffer,c
  1814  000B48  0E08               	movlw	high STR_3
  1815  000B4A  6E2E               	movwf	putrsXLCD@buffer+1,c
  1816  000B4C  EC94  F00A         	call	_putrsXLCD	;wreg free
  1817                           
  1818                           ;main.c: 271: putrsXLCD(versao);
  1819  000B50  0EA5               	movlw	low _versao
  1820  000B52  6E2D               	movwf	putrsXLCD@buffer,c
  1821  000B54  0E00               	movlw	high _versao
  1822  000B56  6E2E               	movwf	putrsXLCD@buffer+1,c
  1823  000B58  EC94  F00A         	call	_putrsXLCD	;wreg free
  1824                           
  1825                           ;main.c: 273: break;
  1826  000B5C  0012               	return	
  1827  000B5E                     l3565:
  1828                           
  1829                           ;main.c: 275: SetDDRamAddr(0x00);
  1830  000B5E  0E00               	movlw	0
  1831  000B60  EC17  F00B         	call	_SetDDRamAddr
  1832                           
  1833                           ;main.c: 276: putrsXLCD("Hora: ");
  1834  000B64  0E57               	movlw	low STR_4
  1835  000B66  6E2D               	movwf	putrsXLCD@buffer,c
  1836  000B68  0E08               	movlw	high STR_4
  1837  000B6A  6E2E               	movwf	putrsXLCD@buffer+1,c
  1838  000B6C  EC94  F00A         	call	_putrsXLCD	;wreg free
  1839                           
  1840                           ;main.c: 277: sprintf(vet,"%i%i:%i%i:%i%i", data_horario.horario[0], data_horario.horari
      +                          o[1], data_horario.horario[3], data_horario.horario[4], data_horario.horario[6],data_hor
      +                          ario.horario[7]);
  1841  000B70  0E74               	movlw	low _vet
  1842  000B72  0100               	movlb	0	; () banked
  1843  000B74  6F83               	movwf	sprintf@sp& (0+255),b
  1844  000B76  0E00               	movlw	high _vet
  1845  000B78  0100               	movlb	0	; () banked
  1846  000B7A  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  1847  000B7C  0E2D               	movlw	low STR_5
  1848  000B7E  0100               	movlb	0	; () banked
  1849  000B80  6F85               	movwf	sprintf@f& (0+255),b
  1850  000B82  0E08               	movlw	high STR_5
  1851  000B84  0100               	movlb	0	; () banked
  1852  000B86  6F86               	movwf	(sprintf@f+1)& (0+255),b
  1853  000B88  C060  F087         	movff	_data_horario,?_sprintf+4
  1854  000B8C  0100               	movlb	0	; () banked
  1855  000B8E  6B88               	clrf	(?_sprintf+5)& (0+255),b
  1856  000B90  C061  F089         	movff	_data_horario+1,?_sprintf+6
  1857  000B94  0100               	movlb	0	; () banked
  1858  000B96  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  1859  000B98  C063  F08B         	movff	_data_horario+3,?_sprintf+8
  1860  000B9C  0100               	movlb	0	; () banked
  1861  000B9E  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  1862  000BA0  C064  F08D         	movff	_data_horario+4,?_sprintf+10
  1863  000BA4  0100               	movlb	0	; () banked
  1864  000BA6  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  1865  000BA8  C066  F08F         	movff	_data_horario+6,?_sprintf+12
  1866  000BAC  0100               	movlb	0	; () banked
  1867  000BAE  6B90               	clrf	(?_sprintf+13)& (0+255),b
  1868  000BB0  C067  F091         	movff	_data_horario+7,?_sprintf+14
  1869  000BB4  0100               	movlb	0	; () banked
  1870  000BB6  6B92               	clrf	(?_sprintf+15)& (0+255),b
  1871  000BB8  EC77  F006         	call	_sprintf	;wreg free
  1872                           
  1873                           ;main.c: 278: putrsXLCD(vet);
  1874  000BBC  0E74               	movlw	low _vet
  1875  000BBE  6E2D               	movwf	putrsXLCD@buffer,c
  1876  000BC0  0E00               	movlw	high _vet
  1877  000BC2  6E2E               	movwf	putrsXLCD@buffer+1,c
  1878  000BC4  EC94  F00A         	call	_putrsXLCD	;wreg free
  1879                           
  1880                           ;main.c: 279: SetDDRamAddr(0x40);
  1881  000BC8  0E40               	movlw	64
  1882  000BCA  EC17  F00B         	call	_SetDDRamAddr
  1883                           
  1884                           ;main.c: 280: putrsXLCD("Data: ");
  1885  000BCE  0E5E               	movlw	low STR_6
  1886  000BD0  6E2D               	movwf	putrsXLCD@buffer,c
  1887  000BD2  0E08               	movlw	high STR_6
  1888  000BD4  6E2E               	movwf	putrsXLCD@buffer+1,c
  1889  000BD6  EC94  F00A         	call	_putrsXLCD	;wreg free
  1890                           
  1891                           ;main.c: 281: sprintf(vet,"%i%i/%i%i/",data_horario.data[0],data_horario.data[1],data_ho
      +                          rario.data[3],data_horario.data[4]);
  1892  000BDA  0E74               	movlw	low _vet
  1893  000BDC  0100               	movlb	0	; () banked
  1894  000BDE  6F83               	movwf	sprintf@sp& (0+255),b
  1895  000BE0  0E00               	movlw	high _vet
  1896  000BE2  0100               	movlb	0	; () banked
  1897  000BE4  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  1898  000BE6  0E3C               	movlw	low STR_7
  1899  000BE8  0100               	movlb	0	; () banked
  1900  000BEA  6F85               	movwf	sprintf@f& (0+255),b
  1901  000BEC  0E08               	movlw	high STR_7
  1902  000BEE  0100               	movlb	0	; () banked
  1903  000BF0  6F86               	movwf	(sprintf@f+1)& (0+255),b
  1904  000BF2  C069  F087         	movff	_data_horario+9,?_sprintf+4
  1905  000BF6  0100               	movlb	0	; () banked
  1906  000BF8  6B88               	clrf	(?_sprintf+5)& (0+255),b
  1907  000BFA  C06A  F089         	movff	_data_horario+10,?_sprintf+6
  1908  000BFE  0100               	movlb	0	; () banked
  1909  000C00  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  1910  000C02  C06C  F08B         	movff	_data_horario+12,?_sprintf+8
  1911  000C06  0100               	movlb	0	; () banked
  1912  000C08  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  1913  000C0A  C06D  F08D         	movff	_data_horario+13,?_sprintf+10
  1914  000C0E  0100               	movlb	0	; () banked
  1915  000C10  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  1916  000C12  EC77  F006         	call	_sprintf	;wreg free
  1917                           
  1918                           ;main.c: 282: putrsXLCD(vet);
  1919  000C16  0E74               	movlw	low _vet
  1920  000C18  6E2D               	movwf	putrsXLCD@buffer,c
  1921  000C1A  0E00               	movlw	high _vet
  1922  000C1C  6E2E               	movwf	putrsXLCD@buffer+1,c
  1923  000C1E  EC94  F00A         	call	_putrsXLCD	;wreg free
  1924                           
  1925                           ;main.c: 283: putrsXLCD(converteAnoString(data_horario.ano));
  1926  000C22  C072  F02B         	movff	_data_horario+18,converteAnoString@ano
  1927  000C26  C073  F02C         	movff	_data_horario+19,converteAnoString@ano+1
  1928  000C2A  EC7B  F00C         	call	_converteAnoString	;wreg free
  1929  000C2E  C02B  F02D         	movff	?_converteAnoString,putrsXLCD@buffer
  1930  000C32  C02C  F02E         	movff	?_converteAnoString+1,putrsXLCD@buffer+1
  1931  000C36  EC94  F00A         	call	_putrsXLCD	;wreg free
  1932                           
  1933                           ;main.c: 284: acionaDespertador();
  1934  000C3A  EC61  F00C         	call	_acionaDespertador	;wreg free
  1935                           
  1936                           ;main.c: 285: if(flagDespertadorLigado){
  1937  000C3E  5039               	movf	_flagDespertadorLigado,w,c
  1938  000C40  B4D8               	btfsc	status,2,c
  1939  000C42  0012               	return	
  1940                           
  1941                           ;main.c: 286: PORTDbits.RD0 = 1;
  1942  000C44  8083               	bsf	3971,0,c	;volatile
  1943                           
  1944                           ;main.c: 287: tempoDespertador++;
  1945  000C46  2A36               	incf	_tempoDespertador,f,c
  1946                           
  1947                           ;main.c: 288: if(tempoDespertador > 5){
  1948  000C48  0E05               	movlw	5
  1949  000C4A  6436               	cpfsgt	_tempoDespertador,c
  1950  000C4C  0012               	return	
  1951                           
  1952                           ;main.c: 289: tempoDespertador = 0;
  1953  000C4E  0E00               	movlw	0
  1954  000C50  6E36               	movwf	_tempoDespertador,c
  1955                           
  1956                           ;main.c: 290: flagDespertadorLigado =0;
  1957  000C52  0E00               	movlw	0
  1958  000C54  6E39               	movwf	_flagDespertadorLigado,c
  1959                           
  1960                           ;main.c: 291: PORTDbits.RD0 = 0;
  1961  000C56  9083               	bcf	3971,0,c	;volatile
  1962                           
  1963                           ;main.c: 292: virouDia = 0;
  1964  000C58  0E00               	movlw	0
  1965  000C5A  6E48               	movwf	_virouDia,c
  1966                           
  1967                           ;main.c: 293: }
  1968                           ;main.c: 294: }
  1969                           ;main.c: 295: break;
  1970  000C5C  0012               	return	
  1971  000C5E                     l3595:
  1972                           
  1973                           ;main.c: 297: SetDDRamAddr(0x00);
  1974  000C5E  0E00               	movlw	0
  1975  000C60  EC17  F00B         	call	_SetDDRamAddr
  1976                           
  1977                           ;main.c: 298: putrsXLCD("     ALARME     ");
  1978  000C64  0E0B               	movlw	low STR_8
  1979  000C66  6E2D               	movwf	putrsXLCD@buffer,c
  1980  000C68  0E08               	movlw	high STR_8
  1981  000C6A  6E2E               	movwf	putrsXLCD@buffer+1,c
  1982  000C6C  EC94  F00A         	call	_putrsXLCD	;wreg free
  1983                           
  1984                           ;main.c: 299: SetDDRamAddr(0x40);
  1985  000C70  0E40               	movlw	64
  1986  000C72  EC17  F00B         	call	_SetDDRamAddr
  1987                           
  1988                           ;main.c: 300: putrsXLCD("     ");
  1989  000C76  0E51               	movlw	low (STR_11+1)
  1990  000C78  6E2D               	movwf	putrsXLCD@buffer,c
  1991  000C7A  0E08               	movlw	high (STR_11+1)
  1992  000C7C  6E2E               	movwf	putrsXLCD@buffer+1,c
  1993  000C7E  EC94  F00A         	call	_putrsXLCD	;wreg free
  1994                           
  1995                           ;main.c: 301: sprintf(vet,"%i%i:%i%i", horarioDespertador[0], horarioDespertador[1], hor
      +                          arioDespertador[3], horarioDespertador[4]);
  1996  000C82  0E74               	movlw	low _vet
  1997  000C84  0100               	movlb	0	; () banked
  1998  000C86  6F83               	movwf	sprintf@sp& (0+255),b
  1999  000C88  0E00               	movlw	high _vet
  2000  000C8A  0100               	movlb	0	; () banked
  2001  000C8C  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  2002  000C8E  0E32               	movlw	low (STR_5+5)
  2003  000C90  0100               	movlb	0	; () banked
  2004  000C92  6F85               	movwf	sprintf@f& (0+255),b
  2005  000C94  0E08               	movlw	high (STR_5+5)
  2006  000C96  0100               	movlb	0	; () banked
  2007  000C98  6F86               	movwf	(sprintf@f+1)& (0+255),b
  2008  000C9A  C02F  F087         	movff	_horarioDespertador,?_sprintf+4
  2009  000C9E  0100               	movlb	0	; () banked
  2010  000CA0  6B88               	clrf	(?_sprintf+5)& (0+255),b
  2011  000CA2  C030  F089         	movff	_horarioDespertador+1,?_sprintf+6
  2012  000CA6  0100               	movlb	0	; () banked
  2013  000CA8  6B8A               	clrf	(?_sprintf+7)& (0+255),b
  2014  000CAA  C032  F08B         	movff	_horarioDespertador+3,?_sprintf+8
  2015  000CAE  0100               	movlb	0	; () banked
  2016  000CB0  6B8C               	clrf	(?_sprintf+9)& (0+255),b
  2017  000CB2  C033  F08D         	movff	_horarioDespertador+4,?_sprintf+10
  2018  000CB6  0100               	movlb	0	; () banked
  2019  000CB8  6B8E               	clrf	(?_sprintf+11)& (0+255),b
  2020  000CBA  EC77  F006         	call	_sprintf	;wreg free
  2021                           
  2022                           ;main.c: 302: putrsXLCD(vet);
  2023  000CBE  0E74               	movlw	low _vet
  2024  000CC0  6E2D               	movwf	putrsXLCD@buffer,c
  2025  000CC2  0E00               	movlw	high _vet
  2026  000CC4  6E2E               	movwf	putrsXLCD@buffer+1,c
  2027  000CC6  EC94  F00A         	call	_putrsXLCD	;wreg free
  2028                           
  2029                           ;main.c: 303: putrsXLCD("      ");
  2030  000CCA  0E50               	movlw	low STR_11
  2031  000CCC  6E2D               	movwf	putrsXLCD@buffer,c
  2032  000CCE  0E08               	movlw	high STR_11
  2033  000CD0  6E2E               	movwf	putrsXLCD@buffer+1,c
  2034  000CD2  EC94  F00A         	call	_putrsXLCD	;wreg free
  2035                           
  2036                           ;main.c: 305: }
  2037                           
  2038                           ;main.c: 304: break;
  2039  000CD6  0012               	return	
  2040  000CD8                     l3609:
  2041  000CD8  5035               	movf	_tela_atual,w,c
  2042                           
  2043                           ; Switch size 1, requested type "space"
  2044                           ; Number of cases is 3, Range of values is 0 to 2
  2045                           ; switch strategies available:
  2046                           ; Name         Instructions Cycles
  2047                           ; simple_byte           10     6 (average)
  2048                           ;	Chosen strategy is simple_byte
  2049  000CDA  0A00               	xorlw	0	; case 0
  2050  000CDC  B4D8               	btfsc	status,2,c
  2051  000CDE  D726               	goto	l3559
  2052  000CE0  0A01               	xorlw	1	; case 1
  2053  000CE2  B4D8               	btfsc	status,2,c
  2054  000CE4  D73C               	goto	l3565
  2055  000CE6  0A03               	xorlw	3	; case 2
  2056  000CE8  A4D8               	btfss	status,2,c
  2057  000CEA  0012               	return	
  2058  000CEC  D7B8               	goto	l3595
  2059  000CEE                     __end_of_atualiza_Tela:
  2060                           	opt stack 0
  2061                           tblptru	equ	0xFF8
  2062                           tblptrh	equ	0xFF7
  2063                           tblptrl	equ	0xFF6
  2064                           tablat	equ	0xFF5
  2065                           intcon	equ	0xFF2
  2066                           postinc0	equ	0xFEE
  2067                           wreg	equ	0xFE8
  2068                           postdec1	equ	0xFE5
  2069                           fsr1l	equ	0xFE1
  2070                           postinc2	equ	0xFDE
  2071                           fsr2h	equ	0xFDA
  2072                           fsr2l	equ	0xFD9
  2073                           status	equ	0xFD8
  2074                           
  2075 ;; *************** function _putrsXLCD *****************
  2076 ;; Defined at:
  2077 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\putrxlcd.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  buffer          2   44[COMRAM] PTR const unsigned char 
  2080 ;;		 -> STR_11(7), STR_9(6), STR_8(17), STR_6(7), 
  2081 ;;		 -> vet(8), STR_4(7), versao(6), STR_3(9), 
  2082 ;;		 -> STR_2(17), converteAnoString@anoStr(4), 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2094 ;;      Params:         2       0       0       0       0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2097 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2098 ;;Total ram usage:        2 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    8
  2101 ;; This function calls:
  2102 ;;		_BusyXLCD
  2103 ;;		_WriteDataXLCD
  2104 ;; This function is called by:
  2105 ;;		_atualiza_Tela
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           	psect	text5
  2110  001528                     __ptext5:
  2111                           	opt stack 0
  2112  001528                     _putrsXLCD:
  2113                           	opt stack 20
  2114                           
  2115                           ;incstack = 0
  2116  001528  D019               	goto	l3329
  2117  00152A                     l3323:
  2118  00152A  EC28  F00C         	call	_BusyXLCD	;wreg free
  2119  00152E  0900               	iorlw	0
  2120  001530  A4D8               	btfss	status,2,c
  2121  001532  D7FB               	goto	l3323
  2122  001534  C02D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2123  001538  C02E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2124  00153C  6AF8               	clrf	tblptru,c
  2125  00153E  0E07               	movlw	(high __ramtop+-1)
  2126  001540  64F7               	cpfsgt	tblptrh,c
  2127  001542  D003               	bra	u2477
  2128  001544  0008               	tblrd		*
  2129  001546  50F5               	movf	tablat,w,c
  2130  001548  D005               	bra	u2470
  2131  00154A                     u2477:
  2132  00154A  CFF6 FFE1          	movff	tblptrl,fsr1l
  2133  00154E  CFF7 FFE2          	movff	tblptrh,fsr1h
  2134  001552  50E7               	movf	indf1,w,c
  2135  001554                     u2470:
  2136  001554  ECCD  F00B         	call	_WriteDataXLCD
  2137  001558  4A2D               	infsnz	putrsXLCD@buffer,f,c
  2138  00155A  2A2E               	incf	putrsXLCD@buffer+1,f,c
  2139  00155C                     l3329:
  2140  00155C  C02D  FFF6         	movff	putrsXLCD@buffer,tblptrl
  2141  001560  C02E  FFF7         	movff	putrsXLCD@buffer+1,tblptrh
  2142  001564  6AF8               	clrf	tblptru,c
  2143  001566  0E07               	movlw	(high __ramtop+-1)
  2144  001568  64F7               	cpfsgt	tblptrh,c
  2145  00156A  D003               	bra	u2487
  2146  00156C  0008               	tblrd		*
  2147  00156E  50F5               	movf	tablat,w,c
  2148  001570  D005               	bra	u2480
  2149  001572                     u2487:
  2150  001572  CFF6 FFE1          	movff	tblptrl,fsr1l
  2151  001576  CFF7 FFE2          	movff	tblptrh,fsr1h
  2152  00157A  50E7               	movf	indf1,w,c
  2153  00157C                     u2480:
  2154  00157C  0900               	iorlw	0
  2155  00157E  B4D8               	btfsc	status,2,c
  2156  001580  0012               	return	
  2157  001582  D7D3               	goto	l3323
  2158  001584                     __end_of_putrsXLCD:
  2159                           	opt stack 0
  2160                           tblptru	equ	0xFF8
  2161                           tblptrh	equ	0xFF7
  2162                           tblptrl	equ	0xFF6
  2163                           tablat	equ	0xFF5
  2164                           intcon	equ	0xFF2
  2165                           postinc0	equ	0xFEE
  2166                           wreg	equ	0xFE8
  2167                           indf1	equ	0xFE7
  2168                           postdec1	equ	0xFE5
  2169                           fsr1h	equ	0xFE2
  2170                           fsr1l	equ	0xFE1
  2171                           postinc2	equ	0xFDE
  2172                           fsr2h	equ	0xFDA
  2173                           fsr2l	equ	0xFD9
  2174                           status	equ	0xFD8
  2175                           
  2176 ;; *************** function _WriteDataXLCD *****************
  2177 ;; Defined at:
  2178 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\writdata.c"
  2179 ;; Parameters:    Size  Location     Type
  2180 ;;  data            1    wreg     unsigned char 
  2181 ;; Auto vars:     Size  Location     Type
  2182 ;;  data            1   23[COMRAM] unsigned char 
  2183 ;; Return value:  Size  Location     Type
  2184 ;;                  1    wreg      void 
  2185 ;; Registers used:
  2186 ;;		wreg, status,2, status,0, cstack
  2187 ;; Tracked objects:
  2188 ;;		On entry : 0/0
  2189 ;;		On exit  : 0/0
  2190 ;;		Unchanged: 0/0
  2191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2192 ;;      Params:         0       0       0       0       0       0       0       0       0
  2193 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2195 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2196 ;;Total ram usage:        1 bytes
  2197 ;; Hardware stack levels used:    1
  2198 ;; Hardware stack levels required when called:    7
  2199 ;; This function calls:
  2200 ;;		_DelayFor18TCY
  2201 ;; This function is called by:
  2202 ;;		_putrsXLCD
  2203 ;; This function uses a non-reentrant model
  2204 ;;
  2205                           
  2206                           	psect	text6
  2207  00179A                     __ptext6:
  2208                           	opt stack 0
  2209  00179A                     _WriteDataXLCD:
  2210                           	opt stack 20
  2211                           
  2212                           ;incstack = 0
  2213                           ;WriteDataXLCD@data stored from wreg
  2214  00179A  6E18               	movwf	WriteDataXLCD@data,c
  2215  00179C  0EF0               	movlw	240
  2216  00179E  1693               	andwf	3987,f,c	;volatile
  2217  0017A0  0EF0               	movlw	240
  2218  0017A2  1681               	andwf	3969,f,c	;volatile
  2219  0017A4  3818               	swapf	WriteDataXLCD@data,w,c
  2220  0017A6  0B0F               	andlw	15
  2221  0017A8  0B0F               	andlw	15
  2222  0017AA  1281               	iorwf	3969,f,c	;volatile
  2223  0017AC  8A8A               	bsf	3978,5,c	;volatile
  2224  0017AE  9C8A               	bcf	3978,6,c	;volatile
  2225  0017B0  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  2226  0017B4  888A               	bsf	3978,4,c	;volatile
  2227  0017B6  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  2228  0017BA  988A               	bcf	3978,4,c	;volatile
  2229  0017BC  0EF0               	movlw	240
  2230  0017BE  1681               	andwf	3969,f,c	;volatile
  2231  0017C0  5018               	movf	WriteDataXLCD@data,w,c
  2232  0017C2  0B0F               	andlw	15
  2233  0017C4  1281               	iorwf	3969,f,c	;volatile
  2234  0017C6  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  2235  0017CA  888A               	bsf	3978,4,c	;volatile
  2236  0017CC  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  2237  0017D0  988A               	bcf	3978,4,c	;volatile
  2238  0017D2  0E0F               	movlw	15
  2239  0017D4  1293               	iorwf	3987,f,c	;volatile
  2240  0017D6  0012               	return	
  2241  0017D8                     __end_of_WriteDataXLCD:
  2242                           	opt stack 0
  2243                           tblptru	equ	0xFF8
  2244                           tblptrh	equ	0xFF7
  2245                           tblptrl	equ	0xFF6
  2246                           tablat	equ	0xFF5
  2247                           intcon	equ	0xFF2
  2248                           postinc0	equ	0xFEE
  2249                           wreg	equ	0xFE8
  2250                           indf1	equ	0xFE7
  2251                           postdec1	equ	0xFE5
  2252                           fsr1h	equ	0xFE2
  2253                           fsr1l	equ	0xFE1
  2254                           postinc2	equ	0xFDE
  2255                           fsr2h	equ	0xFDA
  2256                           fsr2l	equ	0xFD9
  2257                           status	equ	0xFD8
  2258                           
  2259 ;; *************** function _converteAnoString *****************
  2260 ;; Defined at:
  2261 ;;		line 171 in file "main.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  ano             2   42[COMRAM] int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;  anoStr          4   16[BANK0 ] unsigned char [4]
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  2   42[COMRAM] PTR unsigned char 
  2268 ;; Registers used:
  2269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2275 ;;      Params:         2       0       0       0       0       0       0       0       0
  2276 ;;      Locals:         0       4       0       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2278 ;;      Totals:         2       4       0       0       0       0       0       0       0
  2279 ;;Total ram usage:        6 bytes
  2280 ;; Hardware stack levels used:    1
  2281 ;; Hardware stack levels required when called:    7
  2282 ;; This function calls:
  2283 ;;		_sprintf
  2284 ;; This function is called by:
  2285 ;;		_atualiza_Tela
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text7
  2290  0018F6                     __ptext7:
  2291                           	opt stack 0
  2292  0018F6                     _converteAnoString:
  2293                           	opt stack 21
  2294                           
  2295                           ;main.c: 172: char anoStr[4];
  2296                           ;main.c: 173: sprintf(anoStr,"%i",ano);
  2297                           
  2298                           ;incstack = 0
  2299  0018F6  0E93               	movlw	low converteAnoString@anoStr
  2300  0018F8  0100               	movlb	0	; () banked
  2301  0018FA  6F83               	movwf	sprintf@sp& (0+255),b
  2302  0018FC  0E00               	movlw	high converteAnoString@anoStr
  2303  0018FE  0100               	movlb	0	; () banked
  2304  001900  6F84               	movwf	(sprintf@sp+1)& (0+255),b
  2305  001902  0E39               	movlw	low (STR_5+12)
  2306  001904  0100               	movlb	0	; () banked
  2307  001906  6F85               	movwf	sprintf@f& (0+255),b
  2308  001908  0E08               	movlw	high (STR_5+12)
  2309  00190A  0100               	movlb	0	; () banked
  2310  00190C  6F86               	movwf	(sprintf@f+1)& (0+255),b
  2311  00190E  C02B  F087         	movff	converteAnoString@ano,?_sprintf+4
  2312  001912  C02C  F088         	movff	converteAnoString@ano+1,?_sprintf+5
  2313  001916  EC77  F006         	call	_sprintf	;wreg free
  2314                           
  2315                           ;main.c: 174: return anoStr;
  2316  00191A  0E93               	movlw	low converteAnoString@anoStr
  2317  00191C  6E2B               	movwf	?_converteAnoString,c
  2318  00191E  0E00               	movlw	high converteAnoString@anoStr
  2319  001920  6E2C               	movwf	?_converteAnoString+1,c
  2320  001922  0012               	return	
  2321  001924                     __end_of_converteAnoString:
  2322                           	opt stack 0
  2323                           tblptru	equ	0xFF8
  2324                           tblptrh	equ	0xFF7
  2325                           tblptrl	equ	0xFF6
  2326                           tablat	equ	0xFF5
  2327                           intcon	equ	0xFF2
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           indf1	equ	0xFE7
  2331                           postdec1	equ	0xFE5
  2332                           fsr1h	equ	0xFE2
  2333                           fsr1l	equ	0xFE1
  2334                           postinc2	equ	0xFDE
  2335                           fsr2h	equ	0xFDA
  2336                           fsr2l	equ	0xFD9
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _sprintf *****************
  2340 ;; Defined at:
  2341 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  sp              2    0[BANK0 ] PTR unsigned char 
  2344 ;;		 -> vet(8), converteAnoString@anoStr(4), 
  2345 ;;  f               2    2[BANK0 ] PTR const unsigned char 
  2346 ;;		 -> STR_10(10), STR_7(11), STR_5(15), STR_1(3), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  tmpval          4    0        struct .
  2349 ;;  cp              3    0        PTR const unsigned char 
  2350 ;;  val             2   39[COMRAM] unsigned int 
  2351 ;;  ap              2   35[COMRAM] PTR void [1]
  2352 ;;		 -> ?_sprintf(2), 
  2353 ;;  len             2    0        unsigned int 
  2354 ;;  c               1   41[COMRAM] char 
  2355 ;;  prec            1   38[COMRAM] char 
  2356 ;;  flag            1   37[COMRAM] unsigned char 
  2357 ;; Return value:  Size  Location     Type
  2358 ;;                  2    0[BANK0 ] int 
  2359 ;; Registers used:
  2360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2361 ;; Tracked objects:
  2362 ;;		On entry : 0/0
  2363 ;;		On exit  : 0/0
  2364 ;;		Unchanged: 0/0
  2365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2366 ;;      Params:         0      16       0       0       0       0       0       0       0
  2367 ;;      Locals:         7       0       0       0       0       0       0       0       0
  2368 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2369 ;;      Totals:         8      16       0       0       0       0       0       0       0
  2370 ;;Total ram usage:       24 bytes
  2371 ;; Hardware stack levels used:    1
  2372 ;; Hardware stack levels required when called:    6
  2373 ;; This function calls:
  2374 ;;		___lwdiv
  2375 ;;		___lwmod
  2376 ;; This function is called by:
  2377 ;;		_converteAnoString
  2378 ;;		_atualiza_Tela
  2379 ;; This function uses a non-reentrant model
  2380 ;;
  2381                           
  2382                           	psect	text8
  2383  000CEE                     __ptext8:
  2384                           	opt stack 0
  2385  000CEE                     _sprintf:
  2386                           	opt stack 22
  2387                           
  2388                           ;doprnt.c: 494: va_list ap;
  2389                           ;doprnt.c: 499: signed char c;
  2390                           ;doprnt.c: 506: signed char prec;
  2391                           ;doprnt.c: 508: unsigned char flag;
  2392                           ;doprnt.c: 523: union {
  2393                           ;doprnt.c: 524: unsigned long vd;
  2394                           ;doprnt.c: 525: double integ;
  2395                           ;doprnt.c: 526: } tmpval;
  2396                           ;doprnt.c: 528: unsigned int val;
  2397                           ;doprnt.c: 529: unsigned len;
  2398                           ;doprnt.c: 530: const char * cp;
  2399                           ;doprnt.c: 533: *ap = __va_start();
  2400                           
  2401                           ;incstack = 0
  2402  000CEE  0E87               	movlw	low (?_sprintf+4)
  2403  000CF0  6E24               	movwf	sprintf@ap,c
  2404  000CF2  0E00               	movlw	high (?_sprintf+4)
  2405  000CF4  6E25               	movwf	sprintf@ap+1,c
  2406                           
  2407                           ;doprnt.c: 536: while(c = *f++) {
  2408  000CF6  D090               	goto	l3151
  2409  000CF8                     l3099:
  2410                           
  2411                           ;doprnt.c: 538: if(c != '%')
  2412  000CF8  0E25               	movlw	37
  2413  000CFA  182A               	xorwf	sprintf@c,w,c
  2414  000CFC  B4D8               	btfsc	status,2,c
  2415  000CFE  D00A               	goto	l3105
  2416                           
  2417                           ;doprnt.c: 540: {
  2418                           ;doprnt.c: 541: ((*sp++ = (c)));
  2419  000D00  C083  FFD9         	movff	sprintf@sp,fsr2l
  2420  000D04  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  2421  000D08  C02A  FFDF         	movff	sprintf@c,indf2
  2422  000D0C  0100               	movlb	0	; () banked
  2423  000D0E  4B83               	infsnz	sprintf@sp& (0+255),f,b
  2424  000D10  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
  2425                           
  2426                           ;doprnt.c: 542: continue;
  2427  000D12  D082               	goto	l3151
  2428  000D14                     l3105:
  2429                           
  2430                           ;doprnt.c: 543: }
  2431                           ;doprnt.c: 548: flag = 0;
  2432  000D14  0E00               	movlw	0
  2433  000D16  6E26               	movwf	sprintf@flag,c
  2434                           
  2435                           ;doprnt.c: 822: }
  2436                           
  2437                           ;doprnt.c: 813: continue;
  2438                           
  2439                           ;doprnt.c: 802: default:
  2440                           
  2441                           ;doprnt.c: 698: case 'i':
  2442                           ;doprnt.c: 699: break;
  2443                           
  2444                           ;doprnt.c: 697: case 'd':
  2445                           
  2446                           ;doprnt.c: 638: goto alldone;
  2447                           
  2448                           ;doprnt.c: 637: case 0:
  2449                           
  2450                           ;doprnt.c: 635: switch(c = *f++) {
  2451  000D18  C085  FFF6         	movff	sprintf@f,tblptrl
  2452  000D1C  C086  FFF7         	movff	sprintf@f+1,tblptrh
  2453  000D20  0100               	movlb	0	; () banked
  2454  000D22  4B85               	infsnz	sprintf@f& (0+255),f,b
  2455  000D24  2B86               	incf	(sprintf@f+1)& (0+255),f,b
  2456  000D26                     	if	0	;tblptru may be non-zero
  2457  000D26                     	endif
  2458  000D26                     	if	0	;tblptru may be non-zero
  2459  000D26                     	endif
  2460  000D26  0008               	tblrd		*
  2461  000D28  CFF5 F02A          	movff	tablat,sprintf@c
  2462  000D2C  502A               	movf	sprintf@c,w,c
  2463                           
  2464                           ; Switch size 1, requested type "space"
  2465                           ; Number of cases is 3, Range of values is 0 to 105
  2466                           ; switch strategies available:
  2467                           ; Name         Instructions Cycles
  2468                           ; simple_byte           10     6 (average)
  2469                           ;	Chosen strategy is simple_byte
  2470  000D2E  0A00               	xorlw	0	; case 0
  2471  000D30  B4D8               	btfsc	status,2,c
  2472  000D32  D07F               	goto	l3153
  2473  000D34  0A64               	xorlw	100	; case 100
  2474  000D36  B4D8               	btfsc	status,2,c
  2475  000D38  D003               	goto	l3111
  2476  000D3A  0A0D               	xorlw	13	; case 105
  2477  000D3C  A4D8               	btfss	status,2,c
  2478  000D3E  D06C               	goto	l3151
  2479  000D40                     l3111:
  2480                           
  2481                           ;doprnt.c: 1253: {
  2482                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2483  000D40  C024  FFD9         	movff	sprintf@ap,fsr2l
  2484  000D44  C025  FFDA         	movff	sprintf@ap+1,fsr2h
  2485  000D48  CFDE F028          	movff	postinc2,sprintf@val
  2486  000D4C  CFDD F029          	movff	postdec2,sprintf@val+1
  2487  000D50  0E02               	movlw	2
  2488  000D52  2624               	addwf	sprintf@ap,f,c
  2489  000D54  0E00               	movlw	0
  2490  000D56  2225               	addwfc	sprintf@ap+1,f,c
  2491                           
  2492                           ;doprnt.c: 1261: if((int)val < 0) {
  2493  000D58  AE29               	btfss	sprintf@val+1,7,c
  2494  000D5A  D006               	goto	l3121
  2495                           
  2496                           ;doprnt.c: 1262: flag |= 0x03;
  2497  000D5C  0E03               	movlw	3
  2498  000D5E  1226               	iorwf	sprintf@flag,f,c
  2499                           
  2500                           ;doprnt.c: 1263: val = -val;
  2501  000D60  6C28               	negf	sprintf@val,c
  2502  000D62  1E29               	comf	sprintf@val+1,f,c
  2503  000D64  B0D8               	btfsc	status,0,c
  2504  000D66  2A29               	incf	sprintf@val+1,f,c
  2505  000D68                     l3121:
  2506                           
  2507                           ;doprnt.c: 1264: }
  2508                           ;doprnt.c: 1266: }
  2509                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2510  000D68  0E01               	movlw	1
  2511  000D6A  6E2A               	movwf	sprintf@c,c
  2512  000D6C                     l3123:
  2513  000D6C  0E05               	movlw	5
  2514  000D6E  182A               	xorwf	sprintf@c,w,c
  2515  000D70  B4D8               	btfsc	status,2,c
  2516  000D72  D012               	goto	l3135
  2517                           
  2518                           ;doprnt.c: 1306: if(val < dpowers[c])
  2519  000D74  502A               	movf	sprintf@c,w,c
  2520  000D76  0D02               	mullw	2
  2521  000D78  0E01               	movlw	low _dpowers
  2522  000D7A  24F3               	addwf	prodl,w,c
  2523  000D7C  6EF6               	movwf	tblptrl,c
  2524  000D7E  0E08               	movlw	high _dpowers
  2525  000D80  20F4               	addwfc	prodh,w,c
  2526  000D82  6EF7               	movwf	tblptrh,c
  2527  000D84                     	if	0	;There are less than 3 active tblptr bytes
  2528  000D84                     	endif
  2529  000D84  0009               	tblrd		*+
  2530  000D86  50F5               	movf	tablat,w,c
  2531  000D88  5C28               	subwf	sprintf@val,w,c
  2532  000D8A  0009               	tblrd		*+
  2533  000D8C  50F5               	movf	tablat,w,c
  2534  000D8E  5829               	subwfb	sprintf@val+1,w,c
  2535  000D90  A0D8               	btfss	status,0,c
  2536  000D92  D002               	goto	l3135
  2537                           
  2538                           ;doprnt.c: 1307: break;
  2539  000D94  2A2A               	incf	sprintf@c,f,c
  2540  000D96  D7EA               	goto	l3123
  2541  000D98                     l3135:
  2542                           
  2543                           ;doprnt.c: 1422: {
  2544                           ;doprnt.c: 1438: if(flag & 0x03)
  2545  000D98  C026  F023         	movff	sprintf@flag,??_sprintf
  2546  000D9C  0E03               	movlw	3
  2547  000D9E  1623               	andwf	??_sprintf,f,c
  2548  000DA0  B4D8               	btfsc	status,2,c
  2549  000DA2  D009               	goto	l3141
  2550                           
  2551                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  2552  000DA4  C083  FFD9         	movff	sprintf@sp,fsr2l
  2553  000DA8  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  2554  000DAC  0E2D               	movlw	45
  2555  000DAE  6EDF               	movwf	indf2,c
  2556  000DB0  0100               	movlb	0	; () banked
  2557  000DB2  4B83               	infsnz	sprintf@sp& (0+255),f,b
  2558  000DB4  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
  2559  000DB6                     l3141:
  2560                           
  2561                           ;doprnt.c: 1469: }
  2562                           ;doprnt.c: 1472: prec = c;
  2563  000DB6  C02A  F027         	movff	sprintf@c,sprintf@prec
  2564                           
  2565                           ;doprnt.c: 1474: while(prec--) {
  2566  000DBA  D02A               	goto	l3149
  2567  000DBC                     l3143:
  2568                           
  2569                           ;doprnt.c: 1478: {
  2570                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2571  000DBC  5027               	movf	sprintf@prec,w,c
  2572  000DBE  0D02               	mullw	2
  2573  000DC0  0E01               	movlw	low _dpowers
  2574  000DC2  24F3               	addwf	prodl,w,c
  2575  000DC4  6EF6               	movwf	tblptrl,c
  2576  000DC6  0E08               	movlw	high _dpowers
  2577  000DC8  20F4               	addwfc	prodh,w,c
  2578  000DCA  6EF7               	movwf	tblptrh,c
  2579  000DCC                     	if	0	;There are less than 3 active tblptr bytes
  2580  000DCC                     	endif
  2581  000DCC  0009               	tblrd		*+
  2582  000DCE  CFF5 F019          	movff	tablat,___lwdiv@divisor
  2583  000DD2  000A               	tblrd		*-
  2584  000DD4  CFF5 F01A          	movff	tablat,___lwdiv@divisor+1
  2585  000DD8  C028  F017         	movff	sprintf@val,___lwdiv@dividend
  2586  000DDC  C029  F018         	movff	sprintf@val+1,___lwdiv@dividend+1
  2587  000DE0  ECEE  F00A         	call	___lwdiv	;wreg free
  2588  000DE4  C017  F01E         	movff	?___lwdiv,___lwmod@dividend
  2589  000DE8  C018  F01F         	movff	?___lwdiv+1,___lwmod@dividend+1
  2590  000DEC  0E00               	movlw	0
  2591  000DEE  6E21               	movwf	___lwmod@divisor+1,c
  2592  000DF0  0E0A               	movlw	10
  2593  000DF2  6E20               	movwf	___lwmod@divisor,c
  2594  000DF4  EC8C  F00B         	call	___lwmod	;wreg free
  2595  000DF8  501E               	movf	?___lwmod,w,c
  2596  000DFA  0F30               	addlw	48
  2597  000DFC  6E2A               	movwf	sprintf@c,c
  2598                           
  2599                           ;doprnt.c: 1523: }
  2600                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2601  000DFE  C083  FFD9         	movff	sprintf@sp,fsr2l
  2602  000E02  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  2603  000E06  C02A  FFDF         	movff	sprintf@c,indf2
  2604  000E0A  0100               	movlb	0	; () banked
  2605  000E0C  4B83               	infsnz	sprintf@sp& (0+255),f,b
  2606  000E0E  2B84               	incf	(sprintf@sp+1)& (0+255),f,b
  2607  000E10                     l3149:
  2608  000E10  0627               	decf	sprintf@prec,f,c
  2609  000E12  2827               	incf	sprintf@prec,w,c
  2610  000E14  A4D8               	btfss	status,2,c
  2611  000E16  D7D2               	goto	l3143
  2612  000E18                     l3151:
  2613  000E18  C085  FFF6         	movff	sprintf@f,tblptrl
  2614  000E1C  C086  FFF7         	movff	sprintf@f+1,tblptrh
  2615  000E20  0100               	movlb	0	; () banked
  2616  000E22  4B85               	infsnz	sprintf@f& (0+255),f,b
  2617  000E24  2B86               	incf	(sprintf@f+1)& (0+255),f,b
  2618  000E26                     	if	0	;tblptru may be non-zero
  2619  000E26                     	endif
  2620  000E26                     	if	0	;tblptru may be non-zero
  2621  000E26                     	endif
  2622  000E26  0008               	tblrd		*
  2623  000E28  CFF5 F02A          	movff	tablat,sprintf@c
  2624  000E2C  502A               	movf	sprintf@c,w,c
  2625  000E2E  A4D8               	btfss	status,2,c
  2626  000E30  D763               	goto	l3099
  2627  000E32                     l3153:
  2628                           
  2629                           ;doprnt.c: 1538: *sp = 0;
  2630  000E32  C083  FFD9         	movff	sprintf@sp,fsr2l
  2631  000E36  C084  FFDA         	movff	sprintf@sp+1,fsr2h
  2632  000E3A  0E00               	movlw	0
  2633  000E3C  6EDF               	movwf	indf2,c
  2634  000E3E  0012               	return	
  2635  000E40                     __end_of_sprintf:
  2636                           	opt stack 0
  2637                           tblptru	equ	0xFF8
  2638                           tblptrh	equ	0xFF7
  2639                           tblptrl	equ	0xFF6
  2640                           tablat	equ	0xFF5
  2641                           prodh	equ	0xFF4
  2642                           prodl	equ	0xFF3
  2643                           intcon	equ	0xFF2
  2644                           postinc0	equ	0xFEE
  2645                           wreg	equ	0xFE8
  2646                           indf1	equ	0xFE7
  2647                           postdec1	equ	0xFE5
  2648                           fsr1h	equ	0xFE2
  2649                           fsr1l	equ	0xFE1
  2650                           indf2	equ	0xFDF
  2651                           postinc2	equ	0xFDE
  2652                           postdec2	equ	0xFDD
  2653                           fsr2h	equ	0xFDA
  2654                           fsr2l	equ	0xFD9
  2655                           status	equ	0xFD8
  2656                           
  2657 ;; *************** function ___lwmod *****************
  2658 ;; Defined at:
  2659 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  dividend        2   29[COMRAM] unsigned int 
  2662 ;;  divisor         2   31[COMRAM] unsigned int 
  2663 ;; Auto vars:     Size  Location     Type
  2664 ;;  counter         1   33[COMRAM] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2   29[COMRAM] unsigned int 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2674 ;;      Params:         4       0       0       0       0       0       0       0       0
  2675 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2676 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2677 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2678 ;;Total ram usage:        5 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    5
  2681 ;; This function calls:
  2682 ;;		Nothing
  2683 ;; This function is called by:
  2684 ;;		_sprintf
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           	psect	text9
  2689  001718                     __ptext9:
  2690                           	opt stack 0
  2691  001718                     ___lwmod:
  2692                           	opt stack 22
  2693                           
  2694                           ;incstack = 0
  2695  001718  5020               	movf	___lwmod@divisor,w,c
  2696  00171A  1021               	iorwf	___lwmod@divisor+1,w,c
  2697  00171C  B4D8               	btfsc	status,2,c
  2698  00171E  D018               	goto	l856
  2699  001720  0E01               	movlw	1
  2700  001722  6E22               	movwf	___lwmod@counter,c
  2701  001724  D004               	goto	l3059
  2702  001726                     l3057:
  2703  001726  90D8               	bcf	status,0,c
  2704  001728  3620               	rlcf	___lwmod@divisor,f,c
  2705  00172A  3621               	rlcf	___lwmod@divisor+1,f,c
  2706  00172C  2A22               	incf	___lwmod@counter,f,c
  2707  00172E                     l3059:
  2708  00172E  AE21               	btfss	___lwmod@divisor+1,7,c
  2709  001730  D7FA               	goto	l3057
  2710  001732                     l3061:
  2711  001732  5020               	movf	___lwmod@divisor,w,c
  2712  001734  5C1E               	subwf	___lwmod@dividend,w,c
  2713  001736  5021               	movf	___lwmod@divisor+1,w,c
  2714  001738  581F               	subwfb	___lwmod@dividend+1,w,c
  2715  00173A  A0D8               	btfss	status,0,c
  2716  00173C  D004               	goto	l3065
  2717  00173E  5020               	movf	___lwmod@divisor,w,c
  2718  001740  5E1E               	subwf	___lwmod@dividend,f,c
  2719  001742  5021               	movf	___lwmod@divisor+1,w,c
  2720  001744  5A1F               	subwfb	___lwmod@dividend+1,f,c
  2721  001746                     l3065:
  2722  001746  90D8               	bcf	status,0,c
  2723  001748  3221               	rrcf	___lwmod@divisor+1,f,c
  2724  00174A  3220               	rrcf	___lwmod@divisor,f,c
  2725  00174C  2E22               	decfsz	___lwmod@counter,f,c
  2726  00174E  D7F1               	goto	l3061
  2727  001750                     l856:
  2728  001750  C01E  F01E         	movff	___lwmod@dividend,?___lwmod
  2729  001754  C01F  F01F         	movff	___lwmod@dividend+1,?___lwmod+1
  2730  001758  0012               	return		;funcret
  2731  00175A                     __end_of___lwmod:
  2732                           	opt stack 0
  2733                           tblptru	equ	0xFF8
  2734                           tblptrh	equ	0xFF7
  2735                           tblptrl	equ	0xFF6
  2736                           tablat	equ	0xFF5
  2737                           prodh	equ	0xFF4
  2738                           prodl	equ	0xFF3
  2739                           intcon	equ	0xFF2
  2740                           postinc0	equ	0xFEE
  2741                           wreg	equ	0xFE8
  2742                           indf1	equ	0xFE7
  2743                           postdec1	equ	0xFE5
  2744                           fsr1h	equ	0xFE2
  2745                           fsr1l	equ	0xFE1
  2746                           indf2	equ	0xFDF
  2747                           postinc2	equ	0xFDE
  2748                           postdec2	equ	0xFDD
  2749                           fsr2h	equ	0xFDA
  2750                           fsr2l	equ	0xFD9
  2751                           status	equ	0xFD8
  2752                           
  2753 ;; *************** function ___lwdiv *****************
  2754 ;; Defined at:
  2755 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  2756 ;; Parameters:    Size  Location     Type
  2757 ;;  dividend        2   22[COMRAM] unsigned int 
  2758 ;;  divisor         2   24[COMRAM] unsigned int 
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;  quotient        2   27[COMRAM] unsigned int 
  2761 ;;  counter         1   26[COMRAM] unsigned char 
  2762 ;; Return value:  Size  Location     Type
  2763 ;;                  2   22[COMRAM] unsigned int 
  2764 ;; Registers used:
  2765 ;;		wreg, status,2, status,0
  2766 ;; Tracked objects:
  2767 ;;		On entry : 0/0
  2768 ;;		On exit  : 0/0
  2769 ;;		Unchanged: 0/0
  2770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2771 ;;      Params:         4       0       0       0       0       0       0       0       0
  2772 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2774 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2775 ;;Total ram usage:        7 bytes
  2776 ;; Hardware stack levels used:    1
  2777 ;; Hardware stack levels required when called:    5
  2778 ;; This function calls:
  2779 ;;		Nothing
  2780 ;; This function is called by:
  2781 ;;		_sprintf
  2782 ;; This function uses a non-reentrant model
  2783 ;;
  2784                           
  2785                           	psect	text10
  2786  0015DC                     __ptext10:
  2787                           	opt stack 0
  2788  0015DC                     ___lwdiv:
  2789                           	opt stack 22
  2790                           
  2791                           ;incstack = 0
  2792  0015DC  0E00               	movlw	0
  2793  0015DE  6E1D               	movwf	___lwdiv@quotient+1,c
  2794  0015E0  0E00               	movlw	0
  2795  0015E2  6E1C               	movwf	___lwdiv@quotient,c
  2796  0015E4  5019               	movf	___lwdiv@divisor,w,c
  2797  0015E6  101A               	iorwf	___lwdiv@divisor+1,w,c
  2798  0015E8  B4D8               	btfsc	status,2,c
  2799  0015EA  D01C               	goto	l846
  2800  0015EC  0E01               	movlw	1
  2801  0015EE  6E1B               	movwf	___lwdiv@counter,c
  2802  0015F0  D004               	goto	l3039
  2803  0015F2                     l3037:
  2804  0015F2  90D8               	bcf	status,0,c
  2805  0015F4  3619               	rlcf	___lwdiv@divisor,f,c
  2806  0015F6  361A               	rlcf	___lwdiv@divisor+1,f,c
  2807  0015F8  2A1B               	incf	___lwdiv@counter,f,c
  2808  0015FA                     l3039:
  2809  0015FA  AE1A               	btfss	___lwdiv@divisor+1,7,c
  2810  0015FC  D7FA               	goto	l3037
  2811  0015FE                     l3041:
  2812  0015FE  90D8               	bcf	status,0,c
  2813  001600  361C               	rlcf	___lwdiv@quotient,f,c
  2814  001602  361D               	rlcf	___lwdiv@quotient+1,f,c
  2815  001604  5019               	movf	___lwdiv@divisor,w,c
  2816  001606  5C17               	subwf	___lwdiv@dividend,w,c
  2817  001608  501A               	movf	___lwdiv@divisor+1,w,c
  2818  00160A  5818               	subwfb	___lwdiv@dividend+1,w,c
  2819  00160C  A0D8               	btfss	status,0,c
  2820  00160E  D005               	goto	l3049
  2821  001610  5019               	movf	___lwdiv@divisor,w,c
  2822  001612  5E17               	subwf	___lwdiv@dividend,f,c
  2823  001614  501A               	movf	___lwdiv@divisor+1,w,c
  2824  001616  5A18               	subwfb	___lwdiv@dividend+1,f,c
  2825  001618  801C               	bsf	___lwdiv@quotient,0,c
  2826  00161A                     l3049:
  2827  00161A  90D8               	bcf	status,0,c
  2828  00161C  321A               	rrcf	___lwdiv@divisor+1,f,c
  2829  00161E  3219               	rrcf	___lwdiv@divisor,f,c
  2830  001620  2E1B               	decfsz	___lwdiv@counter,f,c
  2831  001622  D7ED               	goto	l3041
  2832  001624                     l846:
  2833  001624  C01C  F017         	movff	___lwdiv@quotient,?___lwdiv
  2834  001628  C01D  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2835  00162C  0012               	return		;funcret
  2836  00162E                     __end_of___lwdiv:
  2837                           	opt stack 0
  2838                           tblptru	equ	0xFF8
  2839                           tblptrh	equ	0xFF7
  2840                           tblptrl	equ	0xFF6
  2841                           tablat	equ	0xFF5
  2842                           prodh	equ	0xFF4
  2843                           prodl	equ	0xFF3
  2844                           intcon	equ	0xFF2
  2845                           postinc0	equ	0xFEE
  2846                           wreg	equ	0xFE8
  2847                           indf1	equ	0xFE7
  2848                           postdec1	equ	0xFE5
  2849                           fsr1h	equ	0xFE2
  2850                           fsr1l	equ	0xFE1
  2851                           indf2	equ	0xFDF
  2852                           postinc2	equ	0xFDE
  2853                           postdec2	equ	0xFDD
  2854                           fsr2h	equ	0xFDA
  2855                           fsr2l	equ	0xFD9
  2856                           status	equ	0xFD8
  2857                           
  2858 ;; *************** function _acionaDespertador *****************
  2859 ;; Defined at:
  2860 ;;		line 248 in file "main.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    5
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_atualiza_Tela
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text11
  2889  0018C2                     __ptext11:
  2890                           	opt stack 0
  2891  0018C2                     _acionaDespertador:
  2892                           	opt stack 23
  2893                           
  2894                           ;main.c: 249: if(virouDia){
  2895                           
  2896                           ;incstack = 0
  2897  0018C2  5048               	movf	_virouDia,w,c
  2898  0018C4  B4D8               	btfsc	status,2,c
  2899  0018C6  0012               	return	
  2900                           
  2901                           ;main.c: 250: if((data_horario.horario[0] == horarioDespertador[0]) && (data_horario.hor
      +                          ario[1] == horarioDespertador[1]) && (data_horario.horario[3] == horarioDespertador[3]) 
      +                          && (data_horario.horario[4] == horarioDespertador[4])){
  2902  0018C8  502F               	movf	_horarioDespertador,w,c
  2903  0018CA  0100               	movlb	0	; () banked
  2904  0018CC  1960               	xorwf	_data_horario& (0+255),w,b
  2905  0018CE  A4D8               	btfss	status,2,c
  2906  0018D0  0012               	return	
  2907                           
  2908                           ; BSR set to: 0
  2909  0018D2  5030               	movf	_horarioDespertador+1,w,c
  2910  0018D4  0100               	movlb	0	; () banked
  2911  0018D6  1961               	xorwf	(_data_horario+1)& (0+255),w,b
  2912  0018D8  A4D8               	btfss	status,2,c
  2913  0018DA  0012               	return	
  2914                           
  2915                           ; BSR set to: 0
  2916  0018DC  5032               	movf	_horarioDespertador+3,w,c
  2917  0018DE  0100               	movlb	0	; () banked
  2918  0018E0  1963               	xorwf	(_data_horario+3)& (0+255),w,b
  2919  0018E2  A4D8               	btfss	status,2,c
  2920  0018E4  0012               	return	
  2921                           
  2922                           ; BSR set to: 0
  2923  0018E6  5033               	movf	_horarioDespertador+4,w,c
  2924  0018E8  0100               	movlb	0	; () banked
  2925  0018EA  1964               	xorwf	(_data_horario+4)& (0+255),w,b
  2926  0018EC  A4D8               	btfss	status,2,c
  2927  0018EE  0012               	return	
  2928                           
  2929                           ; BSR set to: 0
  2930                           ;main.c: 251: flagDespertadorLigado = 1;
  2931  0018F0  0E01               	movlw	1
  2932  0018F2  6E39               	movwf	_flagDespertadorLigado,c
  2933                           
  2934                           ; BSR set to: 0
  2935  0018F4  0012               	return	
  2936  0018F6                     __end_of_acionaDespertador:
  2937                           	opt stack 0
  2938                           tblptru	equ	0xFF8
  2939                           tblptrh	equ	0xFF7
  2940                           tblptrl	equ	0xFF6
  2941                           tablat	equ	0xFF5
  2942                           prodh	equ	0xFF4
  2943                           prodl	equ	0xFF3
  2944                           intcon	equ	0xFF2
  2945                           postinc0	equ	0xFEE
  2946                           wreg	equ	0xFE8
  2947                           indf1	equ	0xFE7
  2948                           postdec1	equ	0xFE5
  2949                           fsr1h	equ	0xFE2
  2950                           fsr1l	equ	0xFE1
  2951                           indf2	equ	0xFDF
  2952                           postinc2	equ	0xFDE
  2953                           postdec2	equ	0xFDD
  2954                           fsr2h	equ	0xFDA
  2955                           fsr2l	equ	0xFD9
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function _maquinaEstado *****************
  2959 ;; Defined at:
  2960 ;;		line 573 in file "main.c"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;		None
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;		None
  2965 ;; Return value:  Size  Location     Type
  2966 ;;                  1    wreg      void 
  2967 ;; Registers used:
  2968 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2969 ;; Tracked objects:
  2970 ;;		On entry : 0/0
  2971 ;;		On exit  : 0/0
  2972 ;;		Unchanged: 0/0
  2973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2974 ;;      Params:         0       0       0       0       0       0       0       0       0
  2975 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2976 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2977 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2978 ;;Total ram usage:        0 bytes
  2979 ;; Hardware stack levels used:    1
  2980 ;; Hardware stack levels required when called:   10
  2981 ;; This function calls:
  2982 ;;		_enviaByte
  2983 ;;		_trataComando
  2984 ;;		_tx_data
  2985 ;;		_verificaCRCBUFFCOM
  2986 ;; This function is called by:
  2987 ;;		_main
  2988 ;; This function uses a non-reentrant model
  2989 ;;
  2990                           
  2991                           	psect	text12
  2992  0016D2                     __ptext12:
  2993                           	opt stack 0
  2994  0016D2                     _maquinaEstado:
  2995                           	opt stack 20
  2996                           
  2997                           ;main.c: 575: switch(estado){
  2998                           
  2999                           ;incstack = 0
  3000  0016D2  D011               	goto	l3863
  3001  0016D4                     l3851:
  3002                           
  3003                           ;main.c: 578: verificaCRCBUFFCOM();
  3004  0016D4  EC31  F00A         	call	_verificaCRCBUFFCOM	;wreg free
  3005                           
  3006                           ;main.c: 580: break;
  3007  0016D8  0012               	return	
  3008  0016DA                     l3853:
  3009                           
  3010                           ;main.c: 584: trataComando();
  3011  0016DA  EC33  F004         	call	_trataComando	;wreg free
  3012                           
  3013                           ;main.c: 586: break;
  3014  0016DE  0012               	return	
  3015  0016E0                     l3855:
  3016                           
  3017                           ;main.c: 589: tx_data();
  3018  0016E0  EC45  F00C         	call	_tx_data	;wreg free
  3019                           
  3020                           ;main.c: 590: break;
  3021  0016E4  0012               	return	
  3022  0016E6                     l3857:
  3023                           
  3024                           ;main.c: 593: enviaByte(0x05);
  3025  0016E6  0E05               	movlw	5
  3026  0016E8  ECCA  F00C         	call	_enviaByte
  3027                           
  3028                           ;main.c: 595: break;
  3029  0016EC  0012               	return	
  3030  0016EE                     l3859:
  3031                           
  3032                           ;main.c: 598: enviaByte(0x0F);
  3033  0016EE  0E0F               	movlw	15
  3034  0016F0  ECCA  F00C         	call	_enviaByte
  3035                           
  3036                           ;main.c: 607: }
  3037                           
  3038                           ;main.c: 604: break;
  3039                           
  3040                           ;main.c: 602: default:
  3041                           
  3042                           ;main.c: 600: break;
  3043  0016F4  0012               	return	
  3044  0016F6                     l3863:
  3045  0016F6  503D               	movf	_estado,w,c
  3046                           
  3047                           ; Switch size 1, requested type "space"
  3048                           ; Number of cases is 5, Range of values is 1 to 5
  3049                           ; switch strategies available:
  3050                           ; Name         Instructions Cycles
  3051                           ; simple_byte           16     9 (average)
  3052                           ;	Chosen strategy is simple_byte
  3053  0016F8  0A01               	xorlw	1	; case 1
  3054  0016FA  B4D8               	btfsc	status,2,c
  3055  0016FC  D7EB               	goto	l3851
  3056  0016FE  0A03               	xorlw	3	; case 2
  3057  001700  B4D8               	btfsc	status,2,c
  3058  001702  D7EB               	goto	l3853
  3059  001704  0A01               	xorlw	1	; case 3
  3060  001706  B4D8               	btfsc	status,2,c
  3061  001708  D7EB               	goto	l3855
  3062  00170A  0A07               	xorlw	7	; case 4
  3063  00170C  B4D8               	btfsc	status,2,c
  3064  00170E  D7EB               	goto	l3857
  3065  001710  0A01               	xorlw	1	; case 5
  3066  001712  A4D8               	btfss	status,2,c
  3067  001714  0012               	return	
  3068  001716  D7EB               	goto	l3859
  3069  001718                     __end_of_maquinaEstado:
  3070                           	opt stack 0
  3071                           tblptru	equ	0xFF8
  3072                           tblptrh	equ	0xFF7
  3073                           tblptrl	equ	0xFF6
  3074                           tablat	equ	0xFF5
  3075                           prodh	equ	0xFF4
  3076                           prodl	equ	0xFF3
  3077                           intcon	equ	0xFF2
  3078                           postinc0	equ	0xFEE
  3079                           wreg	equ	0xFE8
  3080                           indf1	equ	0xFE7
  3081                           postdec1	equ	0xFE5
  3082                           fsr1h	equ	0xFE2
  3083                           fsr1l	equ	0xFE1
  3084                           indf2	equ	0xFDF
  3085                           postinc2	equ	0xFDE
  3086                           postdec2	equ	0xFDD
  3087                           fsr2h	equ	0xFDA
  3088                           fsr2l	equ	0xFD9
  3089                           status	equ	0xFD8
  3090                           
  3091 ;; *************** function _verificaCRCBUFFCOM *****************
  3092 ;; Defined at:
  3093 ;;		line 543 in file "main.c"
  3094 ;; Parameters:    Size  Location     Type
  3095 ;;		None
  3096 ;; Auto vars:     Size  Location     Type
  3097 ;;  crc             2   42[COMRAM] unsigned short 
  3098 ;;  crc2            2   39[COMRAM] unsigned short 
  3099 ;;  crc1            2   37[COMRAM] unsigned short 
  3100 ;;  CRC_OK          1   41[COMRAM] unsigned char 
  3101 ;; Return value:  Size  Location     Type
  3102 ;;                  1    wreg      void 
  3103 ;; Registers used:
  3104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3105 ;; Tracked objects:
  3106 ;;		On entry : 0/0
  3107 ;;		On exit  : 0/0
  3108 ;;		Unchanged: 0/0
  3109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3110 ;;      Params:         0       0       0       0       0       0       0       0       0
  3111 ;;      Locals:         7       0       0       0       0       0       0       0       0
  3112 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3113 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3114 ;;Total ram usage:        9 bytes
  3115 ;; Hardware stack levels used:    1
  3116 ;; Hardware stack levels required when called:    6
  3117 ;; This function calls:
  3118 ;;		_crc16
  3119 ;; This function is called by:
  3120 ;;		_maquinaEstado
  3121 ;; This function uses a non-reentrant model
  3122 ;;
  3123                           
  3124                           	psect	text13
  3125  001462                     __ptext13:
  3126                           	opt stack 0
  3127  001462                     _verificaCRCBUFFCOM:
  3128                           	opt stack 23
  3129                           
  3130                           ;main.c: 546: char CRC_OK =0;
  3131                           
  3132                           ;incstack = 0
  3133  001462  0E00               	movlw	0
  3134  001464  6E2A               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  3135                           
  3136                           ;main.c: 547: unsigned short crc, crc1, crc2;
  3137                           ;main.c: 549: crc = crc16(BUFFCOM,5);
  3138  001466  0E3E               	movlw	low _BUFFCOM
  3139  001468  6E17               	movwf	crc16@data_p,c
  3140  00146A  0E00               	movlw	high _BUFFCOM
  3141  00146C  6E18               	movwf	crc16@data_p+1,c
  3142  00146E  0E00               	movlw	0
  3143  001470  6E1A               	movwf	crc16@length+1,c
  3144  001472  0E05               	movlw	5
  3145  001474  6E19               	movwf	crc16@length,c
  3146  001476  EC46  F008         	call	_crc16	;wreg free
  3147  00147A  C017  F02B         	movff	?_crc16,verificaCRCBUFFCOM@crc
  3148  00147E  C018  F02C         	movff	?_crc16+1,verificaCRCBUFFCOM@crc+1
  3149                           
  3150                           ;main.c: 550: crc1 = crc >> 8;
  3151  001482  502C               	movf	verificaCRCBUFFCOM@crc+1,w,c
  3152  001484  6E26               	movwf	verificaCRCBUFFCOM@crc1,c
  3153  001486  6A27               	clrf	verificaCRCBUFFCOM@crc1+1,c
  3154                           
  3155                           ;main.c: 551: crc2 = crc & 0xFF;
  3156  001488  502B               	movf	verificaCRCBUFFCOM@crc,w,c
  3157  00148A  6E28               	movwf	verificaCRCBUFFCOM@crc2,c
  3158  00148C  6A29               	clrf	verificaCRCBUFFCOM@crc2+1,c
  3159                           
  3160                           ;main.c: 553: if(BUFFCOM[5] == crc1 && BUFFCOM[6] == crc2){
  3161  00148E  5043               	movf	_BUFFCOM+5,w,c
  3162  001490  6E24               	movwf	??_verificaCRCBUFFCOM& (0+255),c
  3163  001492  6A25               	clrf	(??_verificaCRCBUFFCOM+1)& (0+255),c
  3164  001494  5026               	movf	verificaCRCBUFFCOM@crc1,w,c
  3165  001496  1824               	xorwf	??_verificaCRCBUFFCOM,w,c
  3166  001498  E110               	bnz	l3711
  3167  00149A  5027               	movf	verificaCRCBUFFCOM@crc1+1,w,c
  3168  00149C  1825               	xorwf	??_verificaCRCBUFFCOM+1,w,c
  3169  00149E  A4D8               	btfss	status,2,c
  3170  0014A0  D00C               	goto	l3711
  3171  0014A2  5044               	movf	_BUFFCOM+6,w,c
  3172  0014A4  6E24               	movwf	??_verificaCRCBUFFCOM& (0+255),c
  3173  0014A6  6A25               	clrf	(??_verificaCRCBUFFCOM+1)& (0+255),c
  3174  0014A8  5028               	movf	verificaCRCBUFFCOM@crc2,w,c
  3175  0014AA  1824               	xorwf	??_verificaCRCBUFFCOM,w,c
  3176  0014AC  E106               	bnz	l3711
  3177  0014AE  5029               	movf	verificaCRCBUFFCOM@crc2+1,w,c
  3178  0014B0  1825               	xorwf	??_verificaCRCBUFFCOM+1,w,c
  3179  0014B2  A4D8               	btfss	status,2,c
  3180  0014B4  D002               	goto	l3711
  3181                           
  3182                           ;main.c: 554: CRC_OK = 1;
  3183  0014B6  0E01               	movlw	1
  3184  0014B8  6E2A               	movwf	verificaCRCBUFFCOM@CRC_OK,c
  3185  0014BA                     l3711:
  3186                           
  3187                           ;main.c: 555: }
  3188                           ;main.c: 560: if (CRC_OK == 1)
  3189  0014BA  042A               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
  3190  0014BC  A4D8               	btfss	status,2,c
  3191  0014BE  D003               	goto	l3715
  3192                           
  3193                           ;main.c: 561: {
  3194                           ;main.c: 562: estado = 4;
  3195  0014C0  0E04               	movlw	4
  3196  0014C2  6E3D               	movwf	_estado,c
  3197                           
  3198                           ;main.c: 563: }
  3199  0014C4  0012               	return	
  3200  0014C6                     l3715:
  3201                           
  3202                           ;main.c: 564: else{
  3203                           ;main.c: 567: estado = 5;
  3204  0014C6  0E05               	movlw	5
  3205  0014C8  6E3D               	movwf	_estado,c
  3206  0014CA  0012               	return	
  3207  0014CC                     __end_of_verificaCRCBUFFCOM:
  3208                           	opt stack 0
  3209                           tblptru	equ	0xFF8
  3210                           tblptrh	equ	0xFF7
  3211                           tblptrl	equ	0xFF6
  3212                           tablat	equ	0xFF5
  3213                           prodh	equ	0xFF4
  3214                           prodl	equ	0xFF3
  3215                           intcon	equ	0xFF2
  3216                           postinc0	equ	0xFEE
  3217                           wreg	equ	0xFE8
  3218                           indf1	equ	0xFE7
  3219                           postdec1	equ	0xFE5
  3220                           fsr1h	equ	0xFE2
  3221                           fsr1l	equ	0xFE1
  3222                           indf2	equ	0xFDF
  3223                           postinc2	equ	0xFDE
  3224                           postdec2	equ	0xFDD
  3225                           fsr2h	equ	0xFDA
  3226                           fsr2l	equ	0xFD9
  3227                           status	equ	0xFD8
  3228                           
  3229 ;; *************** function _tx_data *****************
  3230 ;; Defined at:
  3231 ;;		line 382 in file "main.c"
  3232 ;; Parameters:    Size  Location     Type
  3233 ;;		None
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  cont            2   22[COMRAM] int 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3245 ;;      Params:         0       0       0       0       0       0       0       0       0
  3246 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3248 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3249 ;;Total ram usage:        2 bytes
  3250 ;; Hardware stack levels used:    1
  3251 ;; Hardware stack levels required when called:    5
  3252 ;; This function calls:
  3253 ;;		Nothing
  3254 ;; This function is called by:
  3255 ;;		_maquinaEstado
  3256 ;; This function uses a non-reentrant model
  3257 ;;
  3258                           
  3259                           	psect	text14
  3260  00188A                     __ptext14:
  3261                           	opt stack 0
  3262  00188A                     _tx_data:
  3263                           	opt stack 24
  3264                           
  3265                           ;main.c: 384: int cont;
  3266                           ;main.c: 386: for(cont=0;cont<7;cont++)
  3267                           
  3268                           ;incstack = 0
  3269  00188A  0E00               	movlw	0
  3270  00188C  6E18               	movwf	tx_data@cont+1,c
  3271  00188E  0E00               	movlw	0
  3272  001890  6E17               	movwf	tx_data@cont,c
  3273  001892                     l3613:
  3274  001892  BE18               	btfsc	tx_data@cont+1,7,c
  3275  001894  D006               	goto	l210
  3276  001896  5018               	movf	tx_data@cont+1,w,c
  3277  001898  E111               	bnz	l3623
  3278  00189A  0E07               	movlw	7
  3279  00189C  5C17               	subwf	tx_data@cont,w,c
  3280  00189E  B0D8               	btfsc	status,0,c
  3281  0018A0  D00D               	goto	l3623
  3282  0018A2                     l210:
  3283  0018A2  A89E               	btfss	3998,4,c	;volatile
  3284  0018A4  D7FE               	goto	l210
  3285                           
  3286                           ;main.c: 389: TXREG = BUFFRESP[cont];
  3287  0018A6  0E7C               	movlw	low _BUFFRESP
  3288  0018A8  2417               	addwf	tx_data@cont,w,c
  3289  0018AA  6ED9               	movwf	fsr2l,c
  3290  0018AC  0E00               	movlw	high _BUFFRESP
  3291  0018AE  2018               	addwfc	tx_data@cont+1,w,c
  3292  0018B0  6EDA               	movwf	fsr2h,c
  3293  0018B2  50DF               	movf	indf2,w,c
  3294  0018B4  6EAD               	movwf	4013,c	;volatile
  3295  0018B6  4A17               	infsnz	tx_data@cont,f,c
  3296  0018B8  2A18               	incf	tx_data@cont+1,f,c
  3297  0018BA  D7EB               	goto	l3613
  3298  0018BC                     l3623:
  3299                           
  3300                           ;main.c: 390: }
  3301                           ;main.c: 392: estado = 0;
  3302  0018BC  0E00               	movlw	0
  3303  0018BE  6E3D               	movwf	_estado,c
  3304  0018C0  0012               	return		;funcret
  3305  0018C2                     __end_of_tx_data:
  3306                           	opt stack 0
  3307                           tblptru	equ	0xFF8
  3308                           tblptrh	equ	0xFF7
  3309                           tblptrl	equ	0xFF6
  3310                           tablat	equ	0xFF5
  3311                           prodh	equ	0xFF4
  3312                           prodl	equ	0xFF3
  3313                           intcon	equ	0xFF2
  3314                           postinc0	equ	0xFEE
  3315                           wreg	equ	0xFE8
  3316                           indf1	equ	0xFE7
  3317                           postdec1	equ	0xFE5
  3318                           fsr1h	equ	0xFE2
  3319                           fsr1l	equ	0xFE1
  3320                           indf2	equ	0xFDF
  3321                           postinc2	equ	0xFDE
  3322                           postdec2	equ	0xFDD
  3323                           fsr2h	equ	0xFDA
  3324                           fsr2l	equ	0xFD9
  3325                           status	equ	0xFD8
  3326                           
  3327 ;; *************** function _trataComando *****************
  3328 ;; Defined at:
  3329 ;;		line 421 in file "main.c"
  3330 ;; Parameters:    Size  Location     Type
  3331 ;;		None
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;		None
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  1    wreg      void 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/0
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    9
  3350 ;; This function calls:
  3351 ;;		___awdiv
  3352 ;;		___awmod
  3353 ;;		_atoi
  3354 ;;		_calculaCRCBUFFRESP
  3355 ;;		_memcpy
  3356 ;;		_printaDisplay
  3357 ;;		_strlen
  3358 ;; This function is called by:
  3359 ;;		_maquinaEstado
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text15
  3364  000866                     __ptext15:
  3365                           	opt stack 0
  3366  000866                     _trataComando:
  3367                           	opt stack 20
  3368                           
  3369                           ;main.c: 424: switch(BUFFCOM[0])
  3370                           
  3371                           ;incstack = 0
  3372  000866  D14B               	goto	l3693
  3373  000868                     l228:
  3374                           
  3375                           ;main.c: 428: BUFFRESP[0] = BUFFCOM[0];
  3376  000868  C03E  F07C         	movff	_BUFFCOM,_BUFFRESP
  3377                           
  3378                           ;main.c: 429: BUFFRESP[1] = BUFFCOM[1];
  3379  00086C  C03F  F07D         	movff	_BUFFCOM+1,_BUFFRESP+1
  3380                           
  3381                           ;main.c: 432: switch(BUFFCOM[1])
  3382  000870  D068               	goto	l3665
  3383  000872                     l230:
  3384                           
  3385                           ;main.c: 437: BUFFRESP[2] = versao[1];
  3386  000872  C0A6  F07E         	movff	_versao+1,_BUFFRESP+2
  3387                           
  3388                           ;main.c: 438: BUFFRESP[3] = versao[4];
  3389  000876  C0A9  F07F         	movff	_versao+4,_BUFFRESP+3
  3390  00087A  D060               	goto	l3661
  3391  00087C                     l232:
  3392                           
  3393                           ;main.c: 445: pegaHoraData[0] = data_horario.horario[0];
  3394  00087C  C060  F045         	movff	_data_horario,_pegaHoraData
  3395                           
  3396                           ;main.c: 446: pegaHoraData[1] = data_horario.horario[1];
  3397  000880  C061  F046         	movff	_data_horario+1,_pegaHoraData+1
  3398                           
  3399                           ;main.c: 447: BUFFRESP[2] = atoi(pegaHoraData);
  3400  000884  0E45               	movlw	low _pegaHoraData
  3401  000886  6E1D               	movwf	atoi@s,c
  3402  000888  0E00               	movlw	high _pegaHoraData
  3403  00088A  6E1E               	movwf	atoi@s+1,c
  3404  00088C  ECAF  F008         	call	_atoi	;wreg free
  3405  000890  501D               	movf	?_atoi,w,c
  3406  000892  0100               	movlb	0	; () banked
  3407  000894  6F7E               	movwf	(_BUFFRESP+2)& (0+255),b
  3408                           
  3409                           ; BSR set to: 0
  3410                           ;main.c: 448: pegaHoraData[0] = data_horario.horario[3];
  3411  000896  C063  F045         	movff	_data_horario+3,_pegaHoraData
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;main.c: 449: pegaHoraData[1] = data_horario.horario[4];
  3415  00089A  C064  F046         	movff	_data_horario+4,_pegaHoraData+1
  3416                           
  3417                           ;main.c: 450: BUFFRESP[3] = atoi(pegaHoraData);
  3418  00089E  0E45               	movlw	low _pegaHoraData
  3419  0008A0  6E1D               	movwf	atoi@s,c
  3420  0008A2  0E00               	movlw	high _pegaHoraData
  3421  0008A4  6E1E               	movwf	atoi@s+1,c
  3422  0008A6  ECAF  F008         	call	_atoi	;wreg free
  3423  0008AA  501D               	movf	?_atoi,w,c
  3424  0008AC  0100               	movlb	0	; () banked
  3425  0008AE  6F7F               	movwf	(_BUFFRESP+3)& (0+255),b
  3426                           
  3427                           ; BSR set to: 0
  3428                           ;main.c: 451: pegaHoraData[0] = data_horario.horario[6];
  3429  0008B0  C066  F045         	movff	_data_horario+6,_pegaHoraData
  3430                           
  3431                           ; BSR set to: 0
  3432                           ;main.c: 452: pegaHoraData[1] = data_horario.horario[7];
  3433  0008B4  C067  F046         	movff	_data_horario+7,_pegaHoraData+1
  3434                           
  3435                           ;main.c: 453: BUFFRESP[4] = atoi(pegaHoraData);
  3436  0008B8  0E45               	movlw	low _pegaHoraData
  3437  0008BA  6E1D               	movwf	atoi@s,c
  3438  0008BC  0E00               	movlw	high _pegaHoraData
  3439  0008BE  6E1E               	movwf	atoi@s+1,c
  3440  0008C0  ECAF  F008         	call	_atoi	;wreg free
  3441  0008C4  501D               	movf	?_atoi,w,c
  3442  0008C6  D01D               	goto	L1
  3443  0008C8                     l233:
  3444                           
  3445                           ;main.c: 457: pegaHoraData[0] = data_horario.data[0];
  3446  0008C8  C069  F045         	movff	_data_horario+9,_pegaHoraData
  3447                           
  3448                           ;main.c: 458: pegaHoraData[1] = data_horario.data[1];
  3449  0008CC  C06A  F046         	movff	_data_horario+10,_pegaHoraData+1
  3450                           
  3451                           ;main.c: 459: BUFFRESP[2] = atoi(pegaHoraData);
  3452  0008D0  0E45               	movlw	low _pegaHoraData
  3453  0008D2  6E1D               	movwf	atoi@s,c
  3454  0008D4  0E00               	movlw	high _pegaHoraData
  3455  0008D6  6E1E               	movwf	atoi@s+1,c
  3456  0008D8  ECAF  F008         	call	_atoi	;wreg free
  3457  0008DC  501D               	movf	?_atoi,w,c
  3458  0008DE  0100               	movlb	0	; () banked
  3459  0008E0  6F7E               	movwf	(_BUFFRESP+2)& (0+255),b
  3460                           
  3461                           ; BSR set to: 0
  3462                           ;main.c: 460: pegaHoraData[0] = data_horario.data[3];
  3463  0008E2  C06C  F045         	movff	_data_horario+12,_pegaHoraData
  3464                           
  3465                           ; BSR set to: 0
  3466                           ;main.c: 461: pegaHoraData[1] = data_horario.data[4];
  3467  0008E6  C06D  F046         	movff	_data_horario+13,_pegaHoraData+1
  3468                           
  3469                           ;main.c: 462: BUFFRESP[3] = atoi(pegaHoraData);
  3470  0008EA  0E45               	movlw	low _pegaHoraData
  3471  0008EC  6E1D               	movwf	atoi@s,c
  3472  0008EE  0E00               	movlw	high _pegaHoraData
  3473  0008F0  6E1E               	movwf	atoi@s+1,c
  3474  0008F2  ECAF  F008         	call	_atoi	;wreg free
  3475  0008F6  501D               	movf	?_atoi,w,c
  3476  0008F8  0100               	movlb	0	; () banked
  3477  0008FA  6F7F               	movwf	(_BUFFRESP+3)& (0+255),b
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;main.c: 463: BUFFRESP[4] = data_horario.ano - 2000;
  3481  0008FC  0100               	movlb	0	; () banked
  3482  0008FE  5172               	movf	(_data_horario+18)& (0+255),w,b
  3483  000900  0F30               	addlw	48
  3484  000902                     L1:
  3485  000902  0100               	movlb	0	; () banked
  3486  000904  6F80               	movwf	(_BUFFRESP+4)& (0+255),b
  3487                           
  3488                           ;main.c: 465: break;
  3489  000906  D102               	goto	l3695
  3490  000908                     l234:
  3491                           
  3492                           ;main.c: 467: pegaHoraData[0] = horarioDespertador[0];
  3493  000908  C02F  F045         	movff	_horarioDespertador,_pegaHoraData
  3494                           
  3495                           ;main.c: 468: pegaHoraData[1] = horarioDespertador[1];
  3496  00090C  C030  F046         	movff	_horarioDespertador+1,_pegaHoraData+1
  3497                           
  3498                           ;main.c: 469: BUFFRESP[2] = atoi(pegaHoraData);
  3499  000910  0E45               	movlw	low _pegaHoraData
  3500  000912  6E1D               	movwf	atoi@s,c
  3501  000914  0E00               	movlw	high _pegaHoraData
  3502  000916  6E1E               	movwf	atoi@s+1,c
  3503  000918  ECAF  F008         	call	_atoi	;wreg free
  3504  00091C  501D               	movf	?_atoi,w,c
  3505  00091E  0100               	movlb	0	; () banked
  3506  000920  6F7E               	movwf	(_BUFFRESP+2)& (0+255),b
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;main.c: 470: pegaHoraData[0] = horarioDespertador[3];
  3510  000922  C032  F045         	movff	_horarioDespertador+3,_pegaHoraData
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;main.c: 471: pegaHoraData[1] = horarioDespertador[4];
  3514  000926  C033  F046         	movff	_horarioDespertador+4,_pegaHoraData+1
  3515                           
  3516                           ;main.c: 472: BUFFRESP[3] = atoi(pegaHoraData);
  3517  00092A  0E45               	movlw	low _pegaHoraData
  3518  00092C  6E1D               	movwf	atoi@s,c
  3519  00092E  0E00               	movlw	high _pegaHoraData
  3520  000930  6E1E               	movwf	atoi@s+1,c
  3521  000932  ECAF  F008         	call	_atoi	;wreg free
  3522  000936  501D               	movf	?_atoi,w,c
  3523  000938  0100               	movlb	0	; () banked
  3524  00093A  6F7F               	movwf	(_BUFFRESP+3)& (0+255),b
  3525  00093C                     l3661:
  3526                           
  3527                           ; BSR set to: 0
  3528                           ;main.c: 473: BUFFRESP[4] = 0xFF;
  3529  00093C  0100               	movlb	0	; () banked
  3530  00093E  6980               	setf	(_BUFFRESP+4)& (0+255),b
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;main.c: 479: }
  3534                           
  3535                           ; BSR set to: 0
  3536                           ;main.c: 477: break;
  3537                           
  3538                           ;main.c: 476: default:
  3539                           
  3540                           ;main.c: 474: break;
  3541  000940  D0E5               	goto	l3695
  3542  000942                     l3665:
  3543  000942  503F               	movf	_BUFFCOM+1,w,c
  3544                           
  3545                           ; Switch size 1, requested type "space"
  3546                           ; Number of cases is 4, Range of values is 0 to 3
  3547                           ; switch strategies available:
  3548                           ; Name         Instructions Cycles
  3549                           ; simple_byte           13     7 (average)
  3550                           ;	Chosen strategy is simple_byte
  3551  000944  0A00               	xorlw	0	; case 0
  3552  000946  B4D8               	btfsc	status,2,c
  3553  000948  D794               	goto	l230
  3554  00094A  0A01               	xorlw	1	; case 1
  3555  00094C  B4D8               	btfsc	status,2,c
  3556  00094E  D796               	goto	l232
  3557  000950  0A03               	xorlw	3	; case 2
  3558  000952  B4D8               	btfsc	status,2,c
  3559  000954  D7B9               	goto	l233
  3560  000956  0A01               	xorlw	1	; case 3
  3561  000958  B4D8               	btfsc	status,2,c
  3562  00095A  D7D6               	goto	l234
  3563                           
  3564                           ;main.c: 481: break;
  3565  00095C  D0D7               	goto	l3695
  3566  00095E                     l3667:
  3567                           
  3568                           ;main.c: 488: memcpy(BUFFRESP,BUFFCOM,strlen(BUFFCOM));
  3569  00095E  0E7C               	movlw	low _BUFFRESP
  3570  000960  6E1D               	movwf	memcpy@d1,c
  3571  000962  0E00               	movlw	high _BUFFRESP
  3572  000964  6E1E               	movwf	memcpy@d1+1,c
  3573  000966  0E3E               	movlw	low _BUFFCOM
  3574  000968  6E1F               	movwf	memcpy@s1,c
  3575  00096A  0E00               	movlw	high _BUFFCOM
  3576  00096C  6E20               	movwf	memcpy@s1+1,c
  3577  00096E  0E3E               	movlw	low _BUFFCOM
  3578  000970  6E17               	movwf	strlen@s,c
  3579  000972  0E00               	movlw	high _BUFFCOM
  3580  000974  6E18               	movwf	strlen@s+1,c
  3581  000976  EC0B  F00C         	call	_strlen	;wreg free
  3582  00097A  C017  F021         	movff	?_strlen,memcpy@n
  3583  00097E  C018  F022         	movff	?_strlen+1,memcpy@n+1
  3584  000982  ECAD  F00B         	call	_memcpy	;wreg free
  3585                           
  3586                           ;main.c: 489: if(BUFFCOM[1] == (1+'0')){
  3587  000986  0E31               	movlw	49
  3588  000988  183F               	xorwf	_BUFFCOM+1,w,c
  3589  00098A  A4D8               	btfss	status,2,c
  3590  00098C  D0AA               	goto	l3689
  3591                           
  3592                           ;main.c: 490: printaDisplay();
  3593  00098E  EC14  F00D         	call	_printaDisplay	;wreg free
  3594                           
  3595                           ;main.c: 491: }
  3596                           ;main.c: 494: switch(BUFFCOM[1])
  3597  000992  D0A7               	goto	l3689
  3598  000994                     l3673:
  3599                           
  3600                           ;main.c: 499: versao[1] = BUFFCOM[2]+48;
  3601  000994  5040               	movf	_BUFFCOM+2,w,c
  3602  000996  0F30               	addlw	48
  3603  000998  0100               	movlb	0	; () banked
  3604  00099A  6FA6               	movwf	(_versao+1)& (0+255),b
  3605                           
  3606                           ;main.c: 500: versao[4] = BUFFCOM[3]+48;
  3607  00099C  5041               	movf	_BUFFCOM+3,w,c
  3608  00099E  0F30               	addlw	48
  3609  0009A0  0100               	movlb	0	; () banked
  3610  0009A2  6FA9               	movwf	(_versao+4)& (0+255),b
  3611                           
  3612                           ;main.c: 501: break;
  3613  0009A4  D0B3               	goto	l3695
  3614  0009A6                     l3675:
  3615                           
  3616                           ;main.c: 504: printaDisplay();
  3617  0009A6  EC14  F00D         	call	_printaDisplay	;wreg free
  3618                           
  3619                           ;main.c: 505: data_horario.data[0] = ((BUFFCOM[2]/10));
  3620  0009AA  C040  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  3621  0009AE  6A18               	clrf	___awdiv@dividend+1,c
  3622  0009B0  0E00               	movlw	0
  3623  0009B2  6E1A               	movwf	___awdiv@divisor+1,c
  3624  0009B4  0E0A               	movlw	10
  3625  0009B6  6E19               	movwf	___awdiv@divisor,c
  3626  0009B8  ECB7  F009         	call	___awdiv	;wreg free
  3627  0009BC  5017               	movf	?___awdiv,w,c
  3628  0009BE  0100               	movlb	0	; () banked
  3629  0009C0  6F69               	movwf	(_data_horario+9)& (0+255),b
  3630                           
  3631                           ;main.c: 506: data_horario.data[1] = ((BUFFCOM[2]%10));
  3632  0009C2  C040  F017         	movff	_BUFFCOM+2,___awmod@dividend
  3633  0009C6  6A18               	clrf	___awmod@dividend+1,c
  3634  0009C8  0E00               	movlw	0
  3635  0009CA  6E1A               	movwf	___awmod@divisor+1,c
  3636  0009CC  0E0A               	movlw	10
  3637  0009CE  6E19               	movwf	___awmod@divisor,c
  3638  0009D0  ECF9  F009         	call	___awmod	;wreg free
  3639  0009D4  5017               	movf	?___awmod,w,c
  3640  0009D6  0100               	movlb	0	; () banked
  3641  0009D8  6F6A               	movwf	(_data_horario+10)& (0+255),b
  3642                           
  3643                           ;main.c: 507: data_horario.data[3] = ((BUFFCOM[3]/10));
  3644  0009DA  C041  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  3645  0009DE  6A18               	clrf	___awdiv@dividend+1,c
  3646  0009E0  0E00               	movlw	0
  3647  0009E2  6E1A               	movwf	___awdiv@divisor+1,c
  3648  0009E4  0E0A               	movlw	10
  3649  0009E6  6E19               	movwf	___awdiv@divisor,c
  3650  0009E8  ECB7  F009         	call	___awdiv	;wreg free
  3651  0009EC  5017               	movf	?___awdiv,w,c
  3652  0009EE  0100               	movlb	0	; () banked
  3653  0009F0  6F6C               	movwf	(_data_horario+12)& (0+255),b
  3654                           
  3655                           ;main.c: 508: data_horario.data[4] = ((BUFFCOM[3]%10));
  3656  0009F2  C041  F017         	movff	_BUFFCOM+3,___awmod@dividend
  3657  0009F6  6A18               	clrf	___awmod@dividend+1,c
  3658  0009F8  0E00               	movlw	0
  3659  0009FA  6E1A               	movwf	___awmod@divisor+1,c
  3660  0009FC  0E0A               	movlw	10
  3661  0009FE  6E19               	movwf	___awmod@divisor,c
  3662  000A00  ECF9  F009         	call	___awmod	;wreg free
  3663  000A04  5017               	movf	?___awmod,w,c
  3664  000A06  0100               	movlb	0	; () banked
  3665  000A08  6F6D               	movwf	(_data_horario+13)& (0+255),b
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;main.c: 509: data_horario.ano = BUFFCOM[4] + 2000;
  3669  000A0A  0ED0               	movlw	208
  3670  000A0C  2442               	addwf	_BUFFCOM+4,w,c
  3671  000A0E  0100               	movlb	0	; () banked
  3672  000A10  6F72               	movwf	(_data_horario+18)& (0+255),b
  3673  000A12  0100               	movlb	0	; () banked
  3674  000A14  6B73               	clrf	(_data_horario+19)& (0+255),b
  3675  000A16  0E07               	movlw	7
  3676  000A18  2373               	addwfc	(_data_horario+19)& (0+255),f,b
  3677                           
  3678                           ; BSR set to: 0
  3679                           ;main.c: 510: data_horario.dias = BUFFCOM[2];
  3680  000A1A  C040  F070         	movff	_BUFFCOM+2,_data_horario+16
  3681                           
  3682                           ; BSR set to: 0
  3683                           ;main.c: 511: data_horario.mes_atual = (BUFFCOM[3]-1);
  3684  000A1E  0441               	decf	_BUFFCOM+3,w,c
  3685  000A20  0100               	movlb	0	; () banked
  3686  000A22  6F71               	movwf	(_data_horario+17)& (0+255),b
  3687                           
  3688                           ;main.c: 512: break;
  3689  000A24  D073               	goto	l3695
  3690  000A26                     l3683:
  3691                           
  3692                           ;main.c: 515: data_horario.horario[0] = ((BUFFCOM[2]/10));
  3693  000A26  C040  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  3694  000A2A  6A18               	clrf	___awdiv@dividend+1,c
  3695  000A2C  0E00               	movlw	0
  3696  000A2E  6E1A               	movwf	___awdiv@divisor+1,c
  3697  000A30  0E0A               	movlw	10
  3698  000A32  6E19               	movwf	___awdiv@divisor,c
  3699  000A34  ECB7  F009         	call	___awdiv	;wreg free
  3700  000A38  5017               	movf	?___awdiv,w,c
  3701  000A3A  0100               	movlb	0	; () banked
  3702  000A3C  6F60               	movwf	_data_horario& (0+255),b
  3703                           
  3704                           ;main.c: 516: data_horario.horario[1] = ((BUFFCOM[2]%10));
  3705  000A3E  C040  F017         	movff	_BUFFCOM+2,___awmod@dividend
  3706  000A42  6A18               	clrf	___awmod@dividend+1,c
  3707  000A44  0E00               	movlw	0
  3708  000A46  6E1A               	movwf	___awmod@divisor+1,c
  3709  000A48  0E0A               	movlw	10
  3710  000A4A  6E19               	movwf	___awmod@divisor,c
  3711  000A4C  ECF9  F009         	call	___awmod	;wreg free
  3712  000A50  5017               	movf	?___awmod,w,c
  3713  000A52  0100               	movlb	0	; () banked
  3714  000A54  6F61               	movwf	(_data_horario+1)& (0+255),b
  3715                           
  3716                           ;main.c: 517: data_horario.horario[3] = ((BUFFCOM[3]/10));
  3717  000A56  C041  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  3718  000A5A  6A18               	clrf	___awdiv@dividend+1,c
  3719  000A5C  0E00               	movlw	0
  3720  000A5E  6E1A               	movwf	___awdiv@divisor+1,c
  3721  000A60  0E0A               	movlw	10
  3722  000A62  6E19               	movwf	___awdiv@divisor,c
  3723  000A64  ECB7  F009         	call	___awdiv	;wreg free
  3724  000A68  5017               	movf	?___awdiv,w,c
  3725  000A6A  0100               	movlb	0	; () banked
  3726  000A6C  6F63               	movwf	(_data_horario+3)& (0+255),b
  3727                           
  3728                           ;main.c: 518: data_horario.horario[4] = ((BUFFCOM[3]%10));
  3729  000A6E  C041  F017         	movff	_BUFFCOM+3,___awmod@dividend
  3730  000A72  6A18               	clrf	___awmod@dividend+1,c
  3731  000A74  0E00               	movlw	0
  3732  000A76  6E1A               	movwf	___awmod@divisor+1,c
  3733  000A78  0E0A               	movlw	10
  3734  000A7A  6E19               	movwf	___awmod@divisor,c
  3735  000A7C  ECF9  F009         	call	___awmod	;wreg free
  3736  000A80  5017               	movf	?___awmod,w,c
  3737  000A82  0100               	movlb	0	; () banked
  3738  000A84  6F64               	movwf	(_data_horario+4)& (0+255),b
  3739                           
  3740                           ;main.c: 521: break;
  3741  000A86  D042               	goto	l3695
  3742  000A88                     l3685:
  3743                           
  3744                           ;main.c: 523: horarioDespertador[0] = ((BUFFCOM[2]/10));
  3745  000A88  C040  F017         	movff	_BUFFCOM+2,___awdiv@dividend
  3746  000A8C  6A18               	clrf	___awdiv@dividend+1,c
  3747  000A8E  0E00               	movlw	0
  3748  000A90  6E1A               	movwf	___awdiv@divisor+1,c
  3749  000A92  0E0A               	movlw	10
  3750  000A94  6E19               	movwf	___awdiv@divisor,c
  3751  000A96  ECB7  F009         	call	___awdiv	;wreg free
  3752  000A9A  5017               	movf	?___awdiv,w,c
  3753  000A9C  6E2F               	movwf	_horarioDespertador,c
  3754                           
  3755                           ;main.c: 524: horarioDespertador[1] = ((BUFFCOM[2]%10));
  3756  000A9E  C040  F017         	movff	_BUFFCOM+2,___awmod@dividend
  3757  000AA2  6A18               	clrf	___awmod@dividend+1,c
  3758  000AA4  0E00               	movlw	0
  3759  000AA6  6E1A               	movwf	___awmod@divisor+1,c
  3760  000AA8  0E0A               	movlw	10
  3761  000AAA  6E19               	movwf	___awmod@divisor,c
  3762  000AAC  ECF9  F009         	call	___awmod	;wreg free
  3763  000AB0  5017               	movf	?___awmod,w,c
  3764  000AB2  6E30               	movwf	_horarioDespertador+1,c
  3765                           
  3766                           ;main.c: 525: horarioDespertador[3] = ((BUFFCOM[3]/10));
  3767  000AB4  C041  F017         	movff	_BUFFCOM+3,___awdiv@dividend
  3768  000AB8  6A18               	clrf	___awdiv@dividend+1,c
  3769  000ABA  0E00               	movlw	0
  3770  000ABC  6E1A               	movwf	___awdiv@divisor+1,c
  3771  000ABE  0E0A               	movlw	10
  3772  000AC0  6E19               	movwf	___awdiv@divisor,c
  3773  000AC2  ECB7  F009         	call	___awdiv	;wreg free
  3774  000AC6  5017               	movf	?___awdiv,w,c
  3775  000AC8  6E32               	movwf	_horarioDespertador+3,c
  3776                           
  3777                           ;main.c: 526: horarioDespertador[4] = ((BUFFCOM[3]%10));
  3778  000ACA  C041  F017         	movff	_BUFFCOM+3,___awmod@dividend
  3779  000ACE  6A18               	clrf	___awmod@dividend+1,c
  3780  000AD0  0E00               	movlw	0
  3781  000AD2  6E1A               	movwf	___awmod@divisor+1,c
  3782  000AD4  0E0A               	movlw	10
  3783  000AD6  6E19               	movwf	___awmod@divisor,c
  3784  000AD8  ECF9  F009         	call	___awmod	;wreg free
  3785  000ADC  5017               	movf	?___awmod,w,c
  3786  000ADE  6E33               	movwf	_horarioDespertador+4,c
  3787                           
  3788                           ;main.c: 532: }
  3789                           
  3790                           ;main.c: 530: break;
  3791                           
  3792                           ;main.c: 529: default:
  3793                           
  3794                           ;main.c: 528: break;
  3795  000AE0  D015               	goto	l3695
  3796  000AE2                     l3689:
  3797  000AE2  503F               	movf	_BUFFCOM+1,w,c
  3798                           
  3799                           ; Switch size 1, requested type "space"
  3800                           ; Number of cases is 4, Range of values is 0 to 3
  3801                           ; switch strategies available:
  3802                           ; Name         Instructions Cycles
  3803                           ; simple_byte           13     7 (average)
  3804                           ;	Chosen strategy is simple_byte
  3805  000AE4  0A00               	xorlw	0	; case 0
  3806  000AE6  B4D8               	btfsc	status,2,c
  3807  000AE8  D755               	goto	l3673
  3808  000AEA  0A01               	xorlw	1	; case 1
  3809  000AEC  B4D8               	btfsc	status,2,c
  3810  000AEE  D75B               	goto	l3675
  3811  000AF0  0A03               	xorlw	3	; case 2
  3812  000AF2  B4D8               	btfsc	status,2,c
  3813  000AF4  D798               	goto	l3683
  3814  000AF6  0A01               	xorlw	1	; case 3
  3815  000AF8  B4D8               	btfsc	status,2,c
  3816  000AFA  D7C6               	goto	l3685
  3817                           
  3818                           ;main.c: 536: }
  3819                           
  3820                           ;main.c: 535: break;
  3821  000AFC  D007               	goto	l3695
  3822  000AFE                     l3693:
  3823  000AFE  503E               	movf	_BUFFCOM,w,c
  3824                           
  3825                           ; Switch size 1, requested type "space"
  3826                           ; Number of cases is 2, Range of values is 1 to 2
  3827                           ; switch strategies available:
  3828                           ; Name         Instructions Cycles
  3829                           ; simple_byte            7     4 (average)
  3830                           ;	Chosen strategy is simple_byte
  3831  000B00  0A01               	xorlw	1	; case 1
  3832  000B02  B4D8               	btfsc	status,2,c
  3833  000B04  D6B1               	goto	l228
  3834  000B06  0A03               	xorlw	3	; case 2
  3835  000B08  B4D8               	btfsc	status,2,c
  3836  000B0A  D729               	goto	l3667
  3837  000B0C                     l3695:
  3838                           
  3839                           ;main.c: 540: calculaCRCBUFFRESP();
  3840  000B0C  EC92  F00C         	call	_calculaCRCBUFFRESP	;wreg free
  3841  000B10  0012               	return		;funcret
  3842  000B12                     __end_of_trataComando:
  3843                           	opt stack 0
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           postinc0	equ	0xFEE
  3852                           wreg	equ	0xFE8
  3853                           indf1	equ	0xFE7
  3854                           postdec1	equ	0xFE5
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           indf2	equ	0xFDF
  3858                           postinc2	equ	0xFDE
  3859                           postdec2	equ	0xFDD
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function _strlen *****************
  3865 ;; Defined at:
  3866 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strlen.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  s               2   22[COMRAM] PTR const unsigned char 
  3869 ;;		 -> BUFFCOM(7), 
  3870 ;; Auto vars:     Size  Location     Type
  3871 ;;  cp              2   26[COMRAM] PTR const unsigned char 
  3872 ;;		 -> BUFFCOM(7), 
  3873 ;; Return value:  Size  Location     Type
  3874 ;;                  2   22[COMRAM] unsigned int 
  3875 ;; Registers used:
  3876 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3877 ;; Tracked objects:
  3878 ;;		On entry : 0/0
  3879 ;;		On exit  : 0/0
  3880 ;;		Unchanged: 0/0
  3881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3882 ;;      Params:         2       0       0       0       0       0       0       0       0
  3883 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3884 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3885 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3886 ;;Total ram usage:        6 bytes
  3887 ;; Hardware stack levels used:    1
  3888 ;; Hardware stack levels required when called:    5
  3889 ;; This function calls:
  3890 ;;		Nothing
  3891 ;; This function is called by:
  3892 ;;		_trataComando
  3893 ;; This function uses a non-reentrant model
  3894 ;;
  3895                           
  3896                           	psect	text16
  3897  001816                     __ptext16:
  3898                           	opt stack 0
  3899  001816                     _strlen:
  3900                           	opt stack 23
  3901                           
  3902                           ;incstack = 0
  3903  001816  C017  F01B         	movff	strlen@s,strlen@cp
  3904  00181A  C018  F01C         	movff	strlen@s+1,strlen@cp+1
  3905  00181E  D002               	goto	l3375
  3906  001820                     l3373:
  3907  001820  4A1B               	infsnz	strlen@cp,f,c
  3908  001822  2A1C               	incf	strlen@cp+1,f,c
  3909  001824                     l3375:
  3910  001824  C01B  FFD9         	movff	strlen@cp,fsr2l
  3911  001828  C01C  FFDA         	movff	strlen@cp+1,fsr2h
  3912  00182C  50DF               	movf	indf2,w,c
  3913  00182E  A4D8               	btfss	status,2,c
  3914  001830  D7F7               	goto	l3373
  3915  001832  C017  F019         	movff	strlen@s,??_strlen
  3916  001836  C018  F01A         	movff	strlen@s+1,??_strlen+1
  3917  00183A  1E19               	comf	??_strlen,f,c
  3918  00183C  1E1A               	comf	??_strlen+1,f,c
  3919  00183E  4A19               	infsnz	??_strlen,f,c
  3920  001840  2A1A               	incf	??_strlen+1,f,c
  3921  001842  501B               	movf	strlen@cp,w,c
  3922  001844  2419               	addwf	??_strlen,w,c
  3923  001846  6E17               	movwf	?_strlen,c
  3924  001848  501C               	movf	strlen@cp+1,w,c
  3925  00184A  201A               	addwfc	??_strlen+1,w,c
  3926  00184C  6E18               	movwf	?_strlen+1,c
  3927  00184E  0012               	return	
  3928  001850                     __end_of_strlen:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           tblptrh	equ	0xFF7
  3932                           tblptrl	equ	0xFF6
  3933                           tablat	equ	0xFF5
  3934                           prodh	equ	0xFF4
  3935                           prodl	equ	0xFF3
  3936                           intcon	equ	0xFF2
  3937                           postinc0	equ	0xFEE
  3938                           wreg	equ	0xFE8
  3939                           indf1	equ	0xFE7
  3940                           postdec1	equ	0xFE5
  3941                           fsr1h	equ	0xFE2
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           postinc2	equ	0xFDE
  3945                           postdec2	equ	0xFDD
  3946                           fsr2h	equ	0xFDA
  3947                           fsr2l	equ	0xFD9
  3948                           status	equ	0xFD8
  3949                           
  3950 ;; *************** function _printaDisplay *****************
  3951 ;; Defined at:
  3952 ;;		line 99 in file "main.c"
  3953 ;; Parameters:    Size  Location     Type
  3954 ;;		None
  3955 ;; Auto vars:     Size  Location     Type
  3956 ;;		None
  3957 ;; Return value:  Size  Location     Type
  3958 ;;                  1    wreg      void 
  3959 ;; Registers used:
  3960 ;;		wreg, status,2, status,0, cstack
  3961 ;; Tracked objects:
  3962 ;;		On entry : 0/0
  3963 ;;		On exit  : 0/0
  3964 ;;		Unchanged: 0/0
  3965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3966 ;;      Params:         0       0       0       0       0       0       0       0       0
  3967 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3969 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3970 ;;Total ram usage:        0 bytes
  3971 ;; Hardware stack levels used:    1
  3972 ;; Hardware stack levels required when called:    8
  3973 ;; This function calls:
  3974 ;;		_SetDDRamAddr
  3975 ;; This function is called by:
  3976 ;;		_trataComando
  3977 ;; This function uses a non-reentrant model
  3978 ;;
  3979                           
  3980                           	psect	text17
  3981  001A28                     __ptext17:
  3982                           	opt stack 0
  3983  001A28                     _printaDisplay:
  3984                           	opt stack 20
  3985                           
  3986                           ;main.c: 100: SetDDRamAddr(0x00);
  3987                           
  3988                           ;incstack = 0
  3989  001A28  0E00               	movlw	0
  3990  001A2A  EC17  F00B         	call	_SetDDRamAddr
  3991  001A2E  0012               	return		;funcret
  3992  001A30                     __end_of_printaDisplay:
  3993                           	opt stack 0
  3994                           tblptru	equ	0xFF8
  3995                           tblptrh	equ	0xFF7
  3996                           tblptrl	equ	0xFF6
  3997                           tablat	equ	0xFF5
  3998                           prodh	equ	0xFF4
  3999                           prodl	equ	0xFF3
  4000                           intcon	equ	0xFF2
  4001                           postinc0	equ	0xFEE
  4002                           wreg	equ	0xFE8
  4003                           indf1	equ	0xFE7
  4004                           postdec1	equ	0xFE5
  4005                           fsr1h	equ	0xFE2
  4006                           fsr1l	equ	0xFE1
  4007                           indf2	equ	0xFDF
  4008                           postinc2	equ	0xFDE
  4009                           postdec2	equ	0xFDD
  4010                           fsr2h	equ	0xFDA
  4011                           fsr2l	equ	0xFD9
  4012                           status	equ	0xFD8
  4013                           
  4014 ;; *************** function _memcpy *****************
  4015 ;; Defined at:
  4016 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\memcpy.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  d1              2   28[COMRAM] PTR void 
  4019 ;;		 -> BUFFRESP(7), 
  4020 ;;  s1              2   30[COMRAM] PTR const void 
  4021 ;;		 -> BUFFCOM(7), 
  4022 ;;  n               2   32[COMRAM] unsigned int 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  s               2   36[COMRAM] PTR const unsigned char 
  4025 ;;		 -> BUFFCOM(7), 
  4026 ;;  d               2   34[COMRAM] PTR unsigned char 
  4027 ;;		 -> BUFFRESP(7), 
  4028 ;; Return value:  Size  Location     Type
  4029 ;;                  2   28[COMRAM] PTR void 
  4030 ;; Registers used:
  4031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4032 ;; Tracked objects:
  4033 ;;		On entry : 0/0
  4034 ;;		On exit  : 0/0
  4035 ;;		Unchanged: 0/0
  4036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4037 ;;      Params:         6       0       0       0       0       0       0       0       0
  4038 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4039 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4040 ;;      Totals:        10       0       0       0       0       0       0       0       0
  4041 ;;Total ram usage:       10 bytes
  4042 ;; Hardware stack levels used:    1
  4043 ;; Hardware stack levels required when called:    5
  4044 ;; This function calls:
  4045 ;;		Nothing
  4046 ;; This function is called by:
  4047 ;;		_trataComando
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051                           	psect	text18
  4052  00175A                     __ptext18:
  4053                           	opt stack 0
  4054  00175A                     _memcpy:
  4055                           	opt stack 23
  4056                           
  4057                           ;incstack = 0
  4058  00175A  C01F  F025         	movff	memcpy@s1,memcpy@s
  4059  00175E  C020  F026         	movff	memcpy@s1+1,memcpy@s+1
  4060  001762  C01D  F023         	movff	memcpy@d1,memcpy@d
  4061  001766  C01E  F024         	movff	memcpy@d1+1,memcpy@d+1
  4062  00176A  D00E               	goto	l3389
  4063  00176C                     l3383:
  4064  00176C  C025  FFD9         	movff	memcpy@s,fsr2l
  4065  001770  C026  FFDA         	movff	memcpy@s+1,fsr2h
  4066  001774  C023  FFE1         	movff	memcpy@d,fsr1l
  4067  001778  C024  FFE2         	movff	memcpy@d+1,fsr1h
  4068  00177C  CFDF FFE7          	movff	indf2,indf1
  4069  001780  4A25               	infsnz	memcpy@s,f,c
  4070  001782  2A26               	incf	memcpy@s+1,f,c
  4071  001784  4A23               	infsnz	memcpy@d,f,c
  4072  001786  2A24               	incf	memcpy@d+1,f,c
  4073  001788                     l3389:
  4074  001788  0621               	decf	memcpy@n,f,c
  4075  00178A  A0D8               	btfss	status,0,c
  4076  00178C  0622               	decf	memcpy@n+1,f,c
  4077  00178E  2821               	incf	memcpy@n,w,c
  4078  001790  E1ED               	bnz	l3383
  4079  001792  2822               	incf	memcpy@n+1,w,c
  4080  001794  B4D8               	btfsc	status,2,c
  4081  001796  0012               	return	
  4082  001798  D7E9               	goto	l3383
  4083  00179A                     __end_of_memcpy:
  4084                           	opt stack 0
  4085                           tblptru	equ	0xFF8
  4086                           tblptrh	equ	0xFF7
  4087                           tblptrl	equ	0xFF6
  4088                           tablat	equ	0xFF5
  4089                           prodh	equ	0xFF4
  4090                           prodl	equ	0xFF3
  4091                           intcon	equ	0xFF2
  4092                           postinc0	equ	0xFEE
  4093                           wreg	equ	0xFE8
  4094                           indf1	equ	0xFE7
  4095                           postdec1	equ	0xFE5
  4096                           fsr1h	equ	0xFE2
  4097                           fsr1l	equ	0xFE1
  4098                           indf2	equ	0xFDF
  4099                           postinc2	equ	0xFDE
  4100                           postdec2	equ	0xFDD
  4101                           fsr2h	equ	0xFDA
  4102                           fsr2l	equ	0xFD9
  4103                           status	equ	0xFD8
  4104                           
  4105 ;; *************** function _calculaCRCBUFFRESP *****************
  4106 ;; Defined at:
  4107 ;;		line 409 in file "main.c"
  4108 ;; Parameters:    Size  Location     Type
  4109 ;;		None
  4110 ;; Auto vars:     Size  Location     Type
  4111 ;;  crc             2   35[COMRAM] unsigned short 
  4112 ;; Return value:  Size  Location     Type
  4113 ;;                  1    wreg      void 
  4114 ;; Registers used:
  4115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4116 ;; Tracked objects:
  4117 ;;		On entry : 0/0
  4118 ;;		On exit  : 0/0
  4119 ;;		Unchanged: 0/0
  4120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4121 ;;      Params:         0       0       0       0       0       0       0       0       0
  4122 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4123 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4124 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4125 ;;Total ram usage:        2 bytes
  4126 ;; Hardware stack levels used:    1
  4127 ;; Hardware stack levels required when called:    6
  4128 ;; This function calls:
  4129 ;;		_crc16
  4130 ;; This function is called by:
  4131 ;;		_trataComando
  4132 ;; This function uses a non-reentrant model
  4133 ;;
  4134                           
  4135                           	psect	text19
  4136  001924                     __ptext19:
  4137                           	opt stack 0
  4138  001924                     _calculaCRCBUFFRESP:
  4139                           	opt stack 22
  4140                           
  4141                           ;main.c: 411: unsigned short crc;
  4142                           ;main.c: 413: crc = crc16(BUFFRESP,5);
  4143                           
  4144                           ;incstack = 0
  4145  001924  0E7C               	movlw	low _BUFFRESP
  4146  001926  6E17               	movwf	crc16@data_p,c
  4147  001928  0E00               	movlw	high _BUFFRESP
  4148  00192A  6E18               	movwf	crc16@data_p+1,c
  4149  00192C  0E00               	movlw	0
  4150  00192E  6E1A               	movwf	crc16@length+1,c
  4151  001930  0E05               	movlw	5
  4152  001932  6E19               	movwf	crc16@length,c
  4153  001934  EC46  F008         	call	_crc16	;wreg free
  4154  001938  C017  F024         	movff	?_crc16,calculaCRCBUFFRESP@crc
  4155  00193C  C018  F025         	movff	?_crc16+1,calculaCRCBUFFRESP@crc+1
  4156                           
  4157                           ;main.c: 415: BUFFRESP[5] = crc >> 8;
  4158  001940  5025               	movf	calculaCRCBUFFRESP@crc+1,w,c
  4159  001942  0100               	movlb	0	; () banked
  4160  001944  6F81               	movwf	(_BUFFRESP+5)& (0+255),b
  4161                           
  4162                           ; BSR set to: 0
  4163                           ;main.c: 416: BUFFRESP[6] = crc & 0xFF;
  4164  001946  C024  F082         	movff	calculaCRCBUFFRESP@crc,_BUFFRESP+6
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;main.c: 418: estado = 3;
  4168  00194A  0E03               	movlw	3
  4169  00194C  6E3D               	movwf	_estado,c
  4170                           
  4171                           ; BSR set to: 0
  4172  00194E  0012               	return		;funcret
  4173  001950                     __end_of_calculaCRCBUFFRESP:
  4174                           	opt stack 0
  4175                           tblptru	equ	0xFF8
  4176                           tblptrh	equ	0xFF7
  4177                           tblptrl	equ	0xFF6
  4178                           tablat	equ	0xFF5
  4179                           prodh	equ	0xFF4
  4180                           prodl	equ	0xFF3
  4181                           intcon	equ	0xFF2
  4182                           postinc0	equ	0xFEE
  4183                           wreg	equ	0xFE8
  4184                           indf1	equ	0xFE7
  4185                           postdec1	equ	0xFE5
  4186                           fsr1h	equ	0xFE2
  4187                           fsr1l	equ	0xFE1
  4188                           indf2	equ	0xFDF
  4189                           postinc2	equ	0xFDE
  4190                           postdec2	equ	0xFDD
  4191                           fsr2h	equ	0xFDA
  4192                           fsr2l	equ	0xFD9
  4193                           status	equ	0xFD8
  4194                           
  4195 ;; *************** function _crc16 *****************
  4196 ;; Defined at:
  4197 ;;		line 354 in file "main.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  data_p          2   22[COMRAM] PTR unsigned char 
  4200 ;;		 -> BUFFRESP(7), BUFFCOM(7), 
  4201 ;;  length          2   24[COMRAM] unsigned short 
  4202 ;; Auto vars:     Size  Location     Type
  4203 ;;  crc             2   33[COMRAM] unsigned int 
  4204 ;;  data            2   31[COMRAM] unsigned int 
  4205 ;;  i               1   30[COMRAM] unsigned char 
  4206 ;; Return value:  Size  Location     Type
  4207 ;;                  2   22[COMRAM] unsigned short 
  4208 ;; Registers used:
  4209 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4210 ;; Tracked objects:
  4211 ;;		On entry : 0/0
  4212 ;;		On exit  : 0/0
  4213 ;;		Unchanged: 0/0
  4214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4215 ;;      Params:         4       0       0       0       0       0       0       0       0
  4216 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4217 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4218 ;;      Totals:        13       0       0       0       0       0       0       0       0
  4219 ;;Total ram usage:       13 bytes
  4220 ;; Hardware stack levels used:    1
  4221 ;; Hardware stack levels required when called:    5
  4222 ;; This function calls:
  4223 ;;		Nothing
  4224 ;; This function is called by:
  4225 ;;		_calculaCRCBUFFRESP
  4226 ;;		_verificaCRCBUFFCOM
  4227 ;; This function uses a non-reentrant model
  4228 ;;
  4229                           
  4230                           	psect	text20
  4231  00108C                     __ptext20:
  4232                           	opt stack 0
  4233  00108C                     _crc16:
  4234                           	opt stack 23
  4235                           
  4236                           ;main.c: 356: unsigned char i;
  4237                           ;main.c: 357: unsigned int data;
  4238                           ;main.c: 358: unsigned int crc = 0xffff;
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;incstack = 0
  4242  00108C  6822               	setf	crc16@crc,c
  4243  00108E  6823               	setf	crc16@crc+1,c
  4244                           
  4245                           ;main.c: 360: if (length == 0)
  4246  001090  5019               	movf	crc16@length,w,c
  4247  001092  101A               	iorwf	crc16@length+1,w,c
  4248  001094  A4D8               	btfss	status,2,c
  4249  001096  D005               	goto	l3201
  4250                           
  4251                           ;main.c: 361: return (~crc);
  4252  001098  1C22               	comf	crc16@crc,w,c
  4253  00109A  6E17               	movwf	?_crc16,c
  4254  00109C  1C23               	comf	crc16@crc+1,w,c
  4255  00109E  6E18               	movwf	?_crc16+1,c
  4256  0010A0  0012               	return	
  4257  0010A2                     l3201:
  4258                           
  4259                           ;main.c: 364: {
  4260                           ;main.c: 365: for (i=0, data=(unsigned int)0xff & *data_p++;
  4261  0010A2  0E00               	movlw	0
  4262  0010A4  6E1F               	movwf	crc16@i,c
  4263  0010A6  C017  FFD9         	movff	crc16@data_p,fsr2l
  4264  0010AA  C018  FFDA         	movff	crc16@data_p+1,fsr2h
  4265  0010AE  50DF               	movf	indf2,w,c
  4266  0010B0  6E1B               	movwf	??_crc16& (0+255),c
  4267  0010B2  501B               	movf	??_crc16,w,c
  4268  0010B4  6E20               	movwf	crc16@data,c
  4269  0010B6  6A21               	clrf	crc16@data+1,c
  4270  0010B8  4A17               	infsnz	crc16@data_p,f,c
  4271  0010BA  2A18               	incf	crc16@data_p+1,f,c
  4272  0010BC                     l3207:
  4273                           
  4274                           ;main.c: 366: i < 8;
  4275                           ;main.c: 367: i++, data >>= 1)
  4276  0010BC  0E07               	movlw	7
  4277  0010BE  641F               	cpfsgt	crc16@i,c
  4278  0010C0  D001               	goto	l3211
  4279  0010C2  D028               	goto	l3219
  4280  0010C4                     l3211:
  4281                           
  4282                           ;main.c: 368: {
  4283                           ;main.c: 369: if ((crc & 0x0001) ^ (data & 0x0001))
  4284  0010C4  0E01               	movlw	1
  4285  0010C6  1420               	andwf	crc16@data,w,c
  4286  0010C8  6E1B               	movwf	??_crc16& (0+255),c
  4287  0010CA  0E00               	movlw	0
  4288  0010CC  1421               	andwf	crc16@data+1,w,c
  4289  0010CE  6E1C               	movwf	(??_crc16+1)& (0+255),c
  4290  0010D0  0E01               	movlw	1
  4291  0010D2  1422               	andwf	crc16@crc,w,c
  4292  0010D4  6E1D               	movwf	(??_crc16+2)& (0+255),c
  4293  0010D6  0E00               	movlw	0
  4294  0010D8  1423               	andwf	crc16@crc+1,w,c
  4295  0010DA  6E1E               	movwf	(??_crc16+3)& (0+255),c
  4296  0010DC  501B               	movf	??_crc16,w,c
  4297  0010DE  1A1D               	xorwf	??_crc16+2,f,c
  4298  0010E0  501C               	movf	??_crc16+1,w,c
  4299  0010E2  1A1E               	xorwf	??_crc16+3,f,c
  4300  0010E4  501D               	movf	??_crc16+2,w,c
  4301  0010E6  101E               	iorwf	??_crc16+3,w,c
  4302  0010E8  B4D8               	btfsc	status,2,c
  4303  0010EA  D00C               	goto	l3215
  4304                           
  4305                           ;main.c: 370: crc = (crc >> 1) ^ 0x8408;
  4306  0010EC  90D8               	bcf	status,0,c
  4307  0010EE  3023               	rrcf	crc16@crc+1,w,c
  4308  0010F0  6E1C               	movwf	(??_crc16+1)& (0+255),c
  4309  0010F2  3022               	rrcf	crc16@crc,w,c
  4310  0010F4  6E1B               	movwf	??_crc16& (0+255),c
  4311  0010F6  0E08               	movlw	8
  4312  0010F8  181B               	xorwf	??_crc16,w,c
  4313  0010FA  6E22               	movwf	crc16@crc,c
  4314  0010FC  0E84               	movlw	132
  4315  0010FE  181C               	xorwf	??_crc16+1,w,c
  4316  001100  6E23               	movwf	crc16@crc+1,c
  4317  001102  D003               	goto	l204
  4318  001104                     l3215:
  4319                           
  4320                           ;main.c: 371: else crc >>= 1;
  4321  001104  90D8               	bcf	status,0,c
  4322  001106  3223               	rrcf	crc16@crc+1,f,c
  4323  001108  3222               	rrcf	crc16@crc,f,c
  4324  00110A                     l204:
  4325  00110A  2A1F               	incf	crc16@i,f,c
  4326  00110C  90D8               	bcf	status,0,c
  4327  00110E  3221               	rrcf	crc16@data+1,f,c
  4328  001110  3220               	rrcf	crc16@data,f,c
  4329  001112  D7D4               	goto	l3207
  4330  001114                     l3219:
  4331                           
  4332                           ;main.c: 372: }
  4333                           ;main.c: 373: } while (--length);
  4334  001114  0619               	decf	crc16@length,f,c
  4335  001116  A0D8               	btfss	status,0,c
  4336  001118  061A               	decf	crc16@length+1,f,c
  4337  00111A  5019               	movf	crc16@length,w,c
  4338  00111C  101A               	iorwf	crc16@length+1,w,c
  4339  00111E  A4D8               	btfss	status,2,c
  4340  001120  D7C0               	goto	l3201
  4341                           
  4342                           ;main.c: 375: crc = ~crc;
  4343  001122  1E22               	comf	crc16@crc,f,c
  4344  001124  1E23               	comf	crc16@crc+1,f,c
  4345                           
  4346                           ;main.c: 376: data = crc;
  4347  001126  C022  F020         	movff	crc16@crc,crc16@data
  4348  00112A  C023  F021         	movff	crc16@crc+1,crc16@data+1
  4349                           
  4350                           ;main.c: 377: crc = (crc << 8) | (data >> 8 & 0xff);
  4351  00112E  C020  F01B         	movff	crc16@data,??_crc16
  4352  001132  C021  F01C         	movff	crc16@data+1,??_crc16+1
  4353  001136  C01C  F01B         	movff	??_crc16+1,??_crc16
  4354  00113A  6A1C               	clrf	??_crc16+1,c
  4355  00113C  501B               	movf	??_crc16,w,c
  4356  00113E  C022  F01D         	movff	crc16@crc,??_crc16+2
  4357  001142  C023  F01E         	movff	crc16@crc+1,??_crc16+3
  4358  001146  C01D  F01E         	movff	??_crc16+2,??_crc16+3
  4359  00114A  6A1D               	clrf	??_crc16+2,c
  4360  00114C  101D               	iorwf	??_crc16+2,w,c
  4361  00114E  6E22               	movwf	crc16@crc,c
  4362  001150  501E               	movf	??_crc16+3,w,c
  4363  001152  6E23               	movwf	crc16@crc+1,c
  4364                           
  4365                           ;main.c: 379: return (crc);
  4366  001154  C022  F017         	movff	crc16@crc,?_crc16
  4367  001158  C023  F018         	movff	crc16@crc+1,?_crc16+1
  4368  00115C  0012               	return	
  4369  00115E                     __end_of_crc16:
  4370                           	opt stack 0
  4371                           tblptru	equ	0xFF8
  4372                           tblptrh	equ	0xFF7
  4373                           tblptrl	equ	0xFF6
  4374                           tablat	equ	0xFF5
  4375                           prodh	equ	0xFF4
  4376                           prodl	equ	0xFF3
  4377                           intcon	equ	0xFF2
  4378                           postinc0	equ	0xFEE
  4379                           wreg	equ	0xFE8
  4380                           indf1	equ	0xFE7
  4381                           postdec1	equ	0xFE5
  4382                           fsr1h	equ	0xFE2
  4383                           fsr1l	equ	0xFE1
  4384                           indf2	equ	0xFDF
  4385                           postinc2	equ	0xFDE
  4386                           postdec2	equ	0xFDD
  4387                           fsr2h	equ	0xFDA
  4388                           fsr2l	equ	0xFD9
  4389                           status	equ	0xFD8
  4390                           
  4391 ;; *************** function _atoi *****************
  4392 ;; Defined at:
  4393 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;  s               2   28[COMRAM] PTR const unsigned char 
  4396 ;;		 -> pegaHoraData(3), 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  a               2   33[COMRAM] int 
  4399 ;;  sign            1   32[COMRAM] unsigned char 
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2   28[COMRAM] int 
  4402 ;; Registers used:
  4403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4409 ;;      Params:         2       0       0       0       0       0       0       0       0
  4410 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4411 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4412 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4413 ;;Total ram usage:        7 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    6
  4416 ;; This function calls:
  4417 ;;		___wmul
  4418 ;;		_isdigit
  4419 ;; This function is called by:
  4420 ;;		_trataComando
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text21
  4425  00115E                     __ptext21:
  4426                           	opt stack 0
  4427  00115E                     _atoi:
  4428                           	opt stack 22
  4429                           
  4430                           ;incstack = 0
  4431  00115E  D002               	goto	l3347
  4432  001160                     l3345:
  4433  001160  4A1D               	infsnz	atoi@s,f,c
  4434  001162  2A1E               	incf	atoi@s+1,f,c
  4435  001164                     l3347:
  4436  001164  C01D  FFD9         	movff	atoi@s,fsr2l
  4437  001168  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4438  00116C  0E20               	movlw	32
  4439  00116E  18DE               	xorwf	postinc2,w,c
  4440  001170  B4D8               	btfsc	status,2,c
  4441  001172  D7F6               	goto	l3345
  4442  001174  C01D  FFD9         	movff	atoi@s,fsr2l
  4443  001178  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4444  00117C  0E09               	movlw	9
  4445  00117E  18DE               	xorwf	postinc2,w,c
  4446  001180  B4D8               	btfsc	status,2,c
  4447  001182  D7EE               	goto	l3345
  4448  001184  0E00               	movlw	0
  4449  001186  6E23               	movwf	atoi@a+1,c
  4450  001188  0E00               	movlw	0
  4451  00118A  6E22               	movwf	atoi@a,c
  4452  00118C  0E00               	movlw	0
  4453  00118E  6E21               	movwf	atoi@sign,c
  4454  001190  C01D  FFD9         	movff	atoi@s,fsr2l
  4455  001194  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4456  001198  0E2D               	movlw	45
  4457  00119A  18DE               	xorwf	postinc2,w,c
  4458  00119C  A4D8               	btfss	status,2,c
  4459  00119E  D002               	goto	l3357
  4460  0011A0  2A21               	incf	atoi@sign,f,c
  4461  0011A2  D024               	goto	l3363
  4462  0011A4                     l3357:
  4463  0011A4  C01D  FFD9         	movff	atoi@s,fsr2l
  4464  0011A8  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4465  0011AC  0E2B               	movlw	43
  4466  0011AE  18DE               	xorwf	postinc2,w,c
  4467  0011B0  A4D8               	btfss	status,2,c
  4468  0011B2  D01E               	goto	l3365
  4469  0011B4  D01B               	goto	l3363
  4470  0011B6                     l3361:
  4471  0011B6  C022  F017         	movff	atoi@a,___wmul@multiplier
  4472  0011BA  C023  F018         	movff	atoi@a+1,___wmul@multiplier+1
  4473  0011BE  0E00               	movlw	0
  4474  0011C0  6E1A               	movwf	___wmul@multiplicand+1,c
  4475  0011C2  0E0A               	movlw	10
  4476  0011C4  6E19               	movwf	___wmul@multiplicand,c
  4477  0011C6  ECA8  F00C         	call	___wmul	;wreg free
  4478  0011CA  C01D  FFD9         	movff	atoi@s,fsr2l
  4479  0011CE  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4480  0011D2  50DF               	movf	indf2,w,c
  4481  0011D4  6E1F               	movwf	??_atoi& (0+255),c
  4482  0011D6  6A20               	clrf	(??_atoi+1)& (0+255),c
  4483  0011D8  5017               	movf	?___wmul,w,c
  4484  0011DA  261F               	addwf	??_atoi,f,c
  4485  0011DC  5018               	movf	?___wmul+1,w,c
  4486  0011DE  2220               	addwfc	??_atoi+1,f,c
  4487  0011E0  0ED0               	movlw	208
  4488  0011E2  241F               	addwf	??_atoi,w,c
  4489  0011E4  6E22               	movwf	atoi@a,c
  4490  0011E6  0EFF               	movlw	255
  4491  0011E8  2020               	addwfc	??_atoi+1,w,c
  4492  0011EA  6E23               	movwf	atoi@a+1,c
  4493  0011EC                     l3363:
  4494  0011EC  4A1D               	infsnz	atoi@s,f,c
  4495  0011EE  2A1E               	incf	atoi@s+1,f,c
  4496  0011F0                     l3365:
  4497  0011F0  C01D  FFD9         	movff	atoi@s,fsr2l
  4498  0011F4  C01E  FFDA         	movff	atoi@s+1,fsr2h
  4499  0011F8  50DF               	movf	indf2,w,c
  4500  0011FA  ECBB  F00C         	call	_isdigit
  4501  0011FE  B0D8               	btfsc	status,0,c
  4502  001200  D7DA               	goto	l3361
  4503  001202  5021               	movf	atoi@sign,w,c
  4504  001204  B4D8               	btfsc	status,2,c
  4505  001206  D00D               	goto	l575
  4506  001208  C022  F01F         	movff	atoi@a,??_atoi
  4507  00120C  C023  F020         	movff	atoi@a+1,??_atoi+1
  4508  001210  1E1F               	comf	??_atoi,f,c
  4509  001212  1E20               	comf	??_atoi+1,f,c
  4510  001214  4A1F               	infsnz	??_atoi,f,c
  4511  001216  2A20               	incf	??_atoi+1,f,c
  4512  001218  C01F  F01D         	movff	??_atoi,?_atoi
  4513  00121C  C020  F01E         	movff	??_atoi+1,?_atoi+1
  4514  001220  0012               	return	
  4515  001222                     l575:
  4516  001222  C022  F01D         	movff	atoi@a,?_atoi
  4517  001226  C023  F01E         	movff	atoi@a+1,?_atoi+1
  4518  00122A  0012               	return		;funcret
  4519  00122C                     __end_of_atoi:
  4520                           	opt stack 0
  4521                           tblptru	equ	0xFF8
  4522                           tblptrh	equ	0xFF7
  4523                           tblptrl	equ	0xFF6
  4524                           tablat	equ	0xFF5
  4525                           prodh	equ	0xFF4
  4526                           prodl	equ	0xFF3
  4527                           intcon	equ	0xFF2
  4528                           postinc0	equ	0xFEE
  4529                           wreg	equ	0xFE8
  4530                           indf1	equ	0xFE7
  4531                           postdec1	equ	0xFE5
  4532                           fsr1h	equ	0xFE2
  4533                           fsr1l	equ	0xFE1
  4534                           indf2	equ	0xFDF
  4535                           postinc2	equ	0xFDE
  4536                           postdec2	equ	0xFDD
  4537                           fsr2h	equ	0xFDA
  4538                           fsr2l	equ	0xFD9
  4539                           status	equ	0xFD8
  4540                           
  4541 ;; *************** function _isdigit *****************
  4542 ;; Defined at:
  4543 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
  4544 ;; Parameters:    Size  Location     Type
  4545 ;;  c               1    wreg     unsigned char 
  4546 ;; Auto vars:     Size  Location     Type
  4547 ;;  c               1   24[COMRAM] unsigned char 
  4548 ;; Return value:  Size  Location     Type
  4549 ;;		None               void
  4550 ;; Registers used:
  4551 ;;		wreg, status,2, status,0
  4552 ;; Tracked objects:
  4553 ;;		On entry : 0/0
  4554 ;;		On exit  : 0/0
  4555 ;;		Unchanged: 0/0
  4556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4557 ;;      Params:         0       0       0       0       0       0       0       0       0
  4558 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4559 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4560 ;;      Totals:         3       0       0       0       0       0       0       0       0
  4561 ;;Total ram usage:        3 bytes
  4562 ;; Hardware stack levels used:    1
  4563 ;; Hardware stack levels required when called:    5
  4564 ;; This function calls:
  4565 ;;		Nothing
  4566 ;; This function is called by:
  4567 ;;		_atoi
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571                           	psect	text22
  4572  001976                     __ptext22:
  4573                           	opt stack 0
  4574  001976                     _isdigit:
  4575                           	opt stack 22
  4576                           
  4577                           ;incstack = 0
  4578                           ;isdigit@c stored from wreg
  4579  001976  6E19               	movwf	isdigit@c,c
  4580  001978  0E00               	movlw	0
  4581  00197A  6E18               	movwf	_isdigit$1102,c
  4582  00197C  0E3A               	movlw	58
  4583  00197E  6019               	cpfslt	isdigit@c,c
  4584  001980  D005               	goto	l3269
  4585  001982  0E2F               	movlw	47
  4586  001984  6419               	cpfsgt	isdigit@c,c
  4587  001986  D002               	goto	l3269
  4588  001988  0E01               	movlw	1
  4589  00198A  6E18               	movwf	_isdigit$1102,c
  4590  00198C                     l3269:
  4591  00198C  C018  F017         	movff	_isdigit$1102,??_isdigit
  4592  001990  3017               	rrcf	??_isdigit,w,c
  4593  001992  0012               	return	
  4594  001994                     __end_of_isdigit:
  4595                           	opt stack 0
  4596                           tblptru	equ	0xFF8
  4597                           tblptrh	equ	0xFF7
  4598                           tblptrl	equ	0xFF6
  4599                           tablat	equ	0xFF5
  4600                           prodh	equ	0xFF4
  4601                           prodl	equ	0xFF3
  4602                           intcon	equ	0xFF2
  4603                           postinc0	equ	0xFEE
  4604                           wreg	equ	0xFE8
  4605                           indf1	equ	0xFE7
  4606                           postdec1	equ	0xFE5
  4607                           fsr1h	equ	0xFE2
  4608                           fsr1l	equ	0xFE1
  4609                           indf2	equ	0xFDF
  4610                           postinc2	equ	0xFDE
  4611                           postdec2	equ	0xFDD
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function ___wmul *****************
  4617 ;; Defined at:
  4618 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;  multiplier      2   22[COMRAM] unsigned int 
  4621 ;;  multiplicand    2   24[COMRAM] unsigned int 
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;  product         2   26[COMRAM] unsigned int 
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  2   22[COMRAM] unsigned int 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, prodl, prodh
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4633 ;;      Params:         4       0       0       0       0       0       0       0       0
  4634 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4636 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4637 ;;Total ram usage:        6 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    5
  4640 ;; This function calls:
  4641 ;;		Nothing
  4642 ;; This function is called by:
  4643 ;;		_atoi
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text23
  4648  001950                     __ptext23:
  4649                           	opt stack 0
  4650  001950                     ___wmul:
  4651                           	opt stack 22
  4652                           
  4653                           ;incstack = 0
  4654  001950  5017               	movf	___wmul@multiplier,w,c
  4655  001952  0219               	mulwf	___wmul@multiplicand,c
  4656  001954  CFF3 F01B          	movff	prodl,___wmul@product
  4657  001958  CFF4 F01C          	movff	prodh,___wmul@product+1
  4658  00195C  5017               	movf	___wmul@multiplier,w,c
  4659  00195E  021A               	mulwf	___wmul@multiplicand+1,c
  4660  001960  50F3               	movf	prodl,w,c
  4661  001962  261C               	addwf	___wmul@product+1,f,c
  4662  001964  5018               	movf	___wmul@multiplier+1,w,c
  4663  001966  0219               	mulwf	___wmul@multiplicand,c
  4664  001968  50F3               	movf	prodl,w,c
  4665  00196A  261C               	addwf	___wmul@product+1,f,c
  4666  00196C  C01B  F017         	movff	___wmul@product,?___wmul
  4667  001970  C01C  F018         	movff	___wmul@product+1,?___wmul+1
  4668  001974  0012               	return	
  4669  001976                     __end_of___wmul:
  4670                           	opt stack 0
  4671                           tblptru	equ	0xFF8
  4672                           tblptrh	equ	0xFF7
  4673                           tblptrl	equ	0xFF6
  4674                           tablat	equ	0xFF5
  4675                           prodh	equ	0xFF4
  4676                           prodl	equ	0xFF3
  4677                           intcon	equ	0xFF2
  4678                           postinc0	equ	0xFEE
  4679                           wreg	equ	0xFE8
  4680                           indf1	equ	0xFE7
  4681                           postdec1	equ	0xFE5
  4682                           fsr1h	equ	0xFE2
  4683                           fsr1l	equ	0xFE1
  4684                           indf2	equ	0xFDF
  4685                           postinc2	equ	0xFDE
  4686                           postdec2	equ	0xFDD
  4687                           fsr2h	equ	0xFDA
  4688                           fsr2l	equ	0xFD9
  4689                           status	equ	0xFD8
  4690                           
  4691 ;; *************** function ___awmod *****************
  4692 ;; Defined at:
  4693 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  4694 ;; Parameters:    Size  Location     Type
  4695 ;;  dividend        2   22[COMRAM] int 
  4696 ;;  divisor         2   24[COMRAM] int 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  sign            1   27[COMRAM] unsigned char 
  4699 ;;  counter         1   26[COMRAM] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  2   22[COMRAM] int 
  4702 ;; Registers used:
  4703 ;;		wreg, status,2, status,0
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4709 ;;      Params:         4       0       0       0       0       0       0       0       0
  4710 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4711 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4712 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4713 ;;Total ram usage:        6 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:    5
  4716 ;; This function calls:
  4717 ;;		Nothing
  4718 ;; This function is called by:
  4719 ;;		_verificaAnoBissexto
  4720 ;;		_trataComando
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text24
  4725  0013F2                     __ptext24:
  4726                           	opt stack 0
  4727  0013F2                     ___awmod:
  4728                           	opt stack 23
  4729                           
  4730                           ;incstack = 0
  4731  0013F2  0E00               	movlw	0
  4732  0013F4  6E1C               	movwf	___awmod@sign,c
  4733  0013F6  AE18               	btfss	___awmod@dividend+1,7,c
  4734  0013F8  D006               	goto	l3443
  4735  0013FA  6C17               	negf	___awmod@dividend,c
  4736  0013FC  1E18               	comf	___awmod@dividend+1,f,c
  4737  0013FE  B0D8               	btfsc	status,0,c
  4738  001400  2A18               	incf	___awmod@dividend+1,f,c
  4739  001402  0E01               	movlw	1
  4740  001404  6E1C               	movwf	___awmod@sign,c
  4741  001406                     l3443:
  4742  001406  AE1A               	btfss	___awmod@divisor+1,7,c
  4743  001408  D004               	goto	l3447
  4744  00140A  6C19               	negf	___awmod@divisor,c
  4745  00140C  1E1A               	comf	___awmod@divisor+1,f,c
  4746  00140E  B0D8               	btfsc	status,0,c
  4747  001410  2A1A               	incf	___awmod@divisor+1,f,c
  4748  001412                     l3447:
  4749  001412  5019               	movf	___awmod@divisor,w,c
  4750  001414  101A               	iorwf	___awmod@divisor+1,w,c
  4751  001416  B4D8               	btfsc	status,2,c
  4752  001418  D018               	goto	l3463
  4753  00141A  0E01               	movlw	1
  4754  00141C  6E1B               	movwf	___awmod@counter,c
  4755  00141E  D004               	goto	l3453
  4756  001420                     l3451:
  4757  001420  90D8               	bcf	status,0,c
  4758  001422  3619               	rlcf	___awmod@divisor,f,c
  4759  001424  361A               	rlcf	___awmod@divisor+1,f,c
  4760  001426  2A1B               	incf	___awmod@counter,f,c
  4761  001428                     l3453:
  4762  001428  AE1A               	btfss	___awmod@divisor+1,7,c
  4763  00142A  D7FA               	goto	l3451
  4764  00142C                     l3455:
  4765  00142C  5019               	movf	___awmod@divisor,w,c
  4766  00142E  5C17               	subwf	___awmod@dividend,w,c
  4767  001430  501A               	movf	___awmod@divisor+1,w,c
  4768  001432  5818               	subwfb	___awmod@dividend+1,w,c
  4769  001434  A0D8               	btfss	status,0,c
  4770  001436  D004               	goto	l3459
  4771  001438  5019               	movf	___awmod@divisor,w,c
  4772  00143A  5E17               	subwf	___awmod@dividend,f,c
  4773  00143C  501A               	movf	___awmod@divisor+1,w,c
  4774  00143E  5A18               	subwfb	___awmod@dividend+1,f,c
  4775  001440                     l3459:
  4776  001440  90D8               	bcf	status,0,c
  4777  001442  321A               	rrcf	___awmod@divisor+1,f,c
  4778  001444  3219               	rrcf	___awmod@divisor,f,c
  4779  001446  2E1B               	decfsz	___awmod@counter,f,c
  4780  001448  D7F1               	goto	l3455
  4781  00144A                     l3463:
  4782  00144A  501C               	movf	___awmod@sign,w,c
  4783  00144C  B4D8               	btfsc	status,2,c
  4784  00144E  D004               	goto	l3467
  4785  001450  6C17               	negf	___awmod@dividend,c
  4786  001452  1E18               	comf	___awmod@dividend+1,f,c
  4787  001454  B0D8               	btfsc	status,0,c
  4788  001456  2A18               	incf	___awmod@dividend+1,f,c
  4789  001458                     l3467:
  4790  001458  C017  F017         	movff	___awmod@dividend,?___awmod
  4791  00145C  C018  F018         	movff	___awmod@dividend+1,?___awmod+1
  4792  001460  0012               	return	
  4793  001462                     __end_of___awmod:
  4794                           	opt stack 0
  4795                           tblptru	equ	0xFF8
  4796                           tblptrh	equ	0xFF7
  4797                           tblptrl	equ	0xFF6
  4798                           tablat	equ	0xFF5
  4799                           prodh	equ	0xFF4
  4800                           prodl	equ	0xFF3
  4801                           intcon	equ	0xFF2
  4802                           postinc0	equ	0xFEE
  4803                           wreg	equ	0xFE8
  4804                           indf1	equ	0xFE7
  4805                           postdec1	equ	0xFE5
  4806                           fsr1h	equ	0xFE2
  4807                           fsr1l	equ	0xFE1
  4808                           indf2	equ	0xFDF
  4809                           postinc2	equ	0xFDE
  4810                           postdec2	equ	0xFDD
  4811                           fsr2h	equ	0xFDA
  4812                           fsr2l	equ	0xFD9
  4813                           status	equ	0xFD8
  4814                           
  4815 ;; *************** function ___awdiv *****************
  4816 ;; Defined at:
  4817 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
  4818 ;; Parameters:    Size  Location     Type
  4819 ;;  dividend        2   22[COMRAM] int 
  4820 ;;  divisor         2   24[COMRAM] int 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  quotient        2   28[COMRAM] int 
  4823 ;;  sign            1   27[COMRAM] unsigned char 
  4824 ;;  counter         1   26[COMRAM] unsigned char 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2   22[COMRAM] int 
  4827 ;; Registers used:
  4828 ;;		wreg, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4834 ;;      Params:         4       0       0       0       0       0       0       0       0
  4835 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4836 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4837 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4838 ;;Total ram usage:        8 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:    5
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_trataComando
  4845 ;; This function uses a non-reentrant model
  4846 ;;
  4847                           
  4848                           	psect	text25
  4849  00136E                     __ptext25:
  4850                           	opt stack 0
  4851  00136E                     ___awdiv:
  4852                           	opt stack 23
  4853                           
  4854                           ;incstack = 0
  4855  00136E  0E00               	movlw	0
  4856  001370  6E1C               	movwf	___awdiv@sign,c
  4857  001372  AE1A               	btfss	___awdiv@divisor+1,7,c
  4858  001374  D006               	goto	l3399
  4859  001376  6C19               	negf	___awdiv@divisor,c
  4860  001378  1E1A               	comf	___awdiv@divisor+1,f,c
  4861  00137A  B0D8               	btfsc	status,0,c
  4862  00137C  2A1A               	incf	___awdiv@divisor+1,f,c
  4863  00137E  0E01               	movlw	1
  4864  001380  6E1C               	movwf	___awdiv@sign,c
  4865  001382                     l3399:
  4866  001382  AE18               	btfss	___awdiv@dividend+1,7,c
  4867  001384  D006               	goto	l3405
  4868  001386  6C17               	negf	___awdiv@dividend,c
  4869  001388  1E18               	comf	___awdiv@dividend+1,f,c
  4870  00138A  B0D8               	btfsc	status,0,c
  4871  00138C  2A18               	incf	___awdiv@dividend+1,f,c
  4872  00138E  0E01               	movlw	1
  4873  001390  1A1C               	xorwf	___awdiv@sign,f,c
  4874  001392                     l3405:
  4875  001392  0E00               	movlw	0
  4876  001394  6E1E               	movwf	___awdiv@quotient+1,c
  4877  001396  0E00               	movlw	0
  4878  001398  6E1D               	movwf	___awdiv@quotient,c
  4879  00139A  5019               	movf	___awdiv@divisor,w,c
  4880  00139C  101A               	iorwf	___awdiv@divisor+1,w,c
  4881  00139E  B4D8               	btfsc	status,2,c
  4882  0013A0  D01C               	goto	l3427
  4883  0013A2  0E01               	movlw	1
  4884  0013A4  6E1B               	movwf	___awdiv@counter,c
  4885  0013A6  D004               	goto	l3413
  4886  0013A8                     l3411:
  4887  0013A8  90D8               	bcf	status,0,c
  4888  0013AA  3619               	rlcf	___awdiv@divisor,f,c
  4889  0013AC  361A               	rlcf	___awdiv@divisor+1,f,c
  4890  0013AE  2A1B               	incf	___awdiv@counter,f,c
  4891  0013B0                     l3413:
  4892  0013B0  AE1A               	btfss	___awdiv@divisor+1,7,c
  4893  0013B2  D7FA               	goto	l3411
  4894  0013B4                     l3415:
  4895  0013B4  90D8               	bcf	status,0,c
  4896  0013B6  361D               	rlcf	___awdiv@quotient,f,c
  4897  0013B8  361E               	rlcf	___awdiv@quotient+1,f,c
  4898  0013BA  5019               	movf	___awdiv@divisor,w,c
  4899  0013BC  5C17               	subwf	___awdiv@dividend,w,c
  4900  0013BE  501A               	movf	___awdiv@divisor+1,w,c
  4901  0013C0  5818               	subwfb	___awdiv@dividend+1,w,c
  4902  0013C2  A0D8               	btfss	status,0,c
  4903  0013C4  D005               	goto	l3423
  4904  0013C6  5019               	movf	___awdiv@divisor,w,c
  4905  0013C8  5E17               	subwf	___awdiv@dividend,f,c
  4906  0013CA  501A               	movf	___awdiv@divisor+1,w,c
  4907  0013CC  5A18               	subwfb	___awdiv@dividend+1,f,c
  4908  0013CE  801D               	bsf	___awdiv@quotient,0,c
  4909  0013D0                     l3423:
  4910  0013D0  90D8               	bcf	status,0,c
  4911  0013D2  321A               	rrcf	___awdiv@divisor+1,f,c
  4912  0013D4  3219               	rrcf	___awdiv@divisor,f,c
  4913  0013D6  2E1B               	decfsz	___awdiv@counter,f,c
  4914  0013D8  D7ED               	goto	l3415
  4915  0013DA                     l3427:
  4916  0013DA  501C               	movf	___awdiv@sign,w,c
  4917  0013DC  B4D8               	btfsc	status,2,c
  4918  0013DE  D004               	goto	l3431
  4919  0013E0  6C1D               	negf	___awdiv@quotient,c
  4920  0013E2  1E1E               	comf	___awdiv@quotient+1,f,c
  4921  0013E4  B0D8               	btfsc	status,0,c
  4922  0013E6  2A1E               	incf	___awdiv@quotient+1,f,c
  4923  0013E8                     l3431:
  4924  0013E8  C01D  F017         	movff	___awdiv@quotient,?___awdiv
  4925  0013EC  C01E  F018         	movff	___awdiv@quotient+1,?___awdiv+1
  4926  0013F0  0012               	return	
  4927  0013F2                     __end_of___awdiv:
  4928                           	opt stack 0
  4929                           tblptru	equ	0xFF8
  4930                           tblptrh	equ	0xFF7
  4931                           tblptrl	equ	0xFF6
  4932                           tablat	equ	0xFF5
  4933                           prodh	equ	0xFF4
  4934                           prodl	equ	0xFF3
  4935                           intcon	equ	0xFF2
  4936                           postinc0	equ	0xFEE
  4937                           wreg	equ	0xFE8
  4938                           indf1	equ	0xFE7
  4939                           postdec1	equ	0xFE5
  4940                           fsr1h	equ	0xFE2
  4941                           fsr1l	equ	0xFE1
  4942                           indf2	equ	0xFDF
  4943                           postinc2	equ	0xFDE
  4944                           postdec2	equ	0xFDD
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function _enviaByte *****************
  4950 ;; Defined at:
  4951 ;;		line 395 in file "main.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  BYTE            1    wreg     unsigned char 
  4954 ;; Auto vars:     Size  Location     Type
  4955 ;;  BYTE            1   22[COMRAM] unsigned char 
  4956 ;; Return value:  Size  Location     Type
  4957 ;;                  1    wreg      void 
  4958 ;; Registers used:
  4959 ;;		wreg, status,2, status,0
  4960 ;; Tracked objects:
  4961 ;;		On entry : 0/0
  4962 ;;		On exit  : 0/0
  4963 ;;		Unchanged: 0/0
  4964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4965 ;;      Params:         0       0       0       0       0       0       0       0       0
  4966 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4967 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4968 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4969 ;;Total ram usage:        1 bytes
  4970 ;; Hardware stack levels used:    1
  4971 ;; Hardware stack levels required when called:    5
  4972 ;; This function calls:
  4973 ;;		Nothing
  4974 ;; This function is called by:
  4975 ;;		_maquinaEstado
  4976 ;; This function uses a non-reentrant model
  4977 ;;
  4978                           
  4979                           	psect	text26
  4980  001994                     __ptext26:
  4981                           	opt stack 0
  4982  001994                     _enviaByte:
  4983                           	opt stack 24
  4984                           
  4985                           ;incstack = 0
  4986                           ;enviaByte@BYTE stored from wreg
  4987  001994  6E17               	movwf	enviaByte@BYTE,c
  4988  001996                     l216:
  4989  001996  A89E               	btfss	3998,4,c	;volatile
  4990  001998  D7FE               	goto	l216
  4991                           
  4992                           ;main.c: 399: TXREG = BYTE;
  4993  00199A  C017  FFAD         	movff	enviaByte@BYTE,4013	;volatile
  4994                           
  4995                           ;main.c: 401: if(BYTE==0x05){
  4996  00199E  0E05               	movlw	5
  4997  0019A0  1817               	xorwf	enviaByte@BYTE,w,c
  4998  0019A2  A4D8               	btfss	status,2,c
  4999  0019A4  D003               	goto	l3633
  5000                           
  5001                           ;main.c: 402: estado = 2;
  5002  0019A6  0E02               	movlw	2
  5003  0019A8  6E3D               	movwf	_estado,c
  5004                           
  5005                           ;main.c: 403: }
  5006  0019AA  0012               	return	
  5007  0019AC                     l3633:
  5008                           
  5009                           ;main.c: 404: else{
  5010                           ;main.c: 405: estado = 0;
  5011  0019AC  0E00               	movlw	0
  5012  0019AE  6E3D               	movwf	_estado,c
  5013  0019B0  0012               	return	
  5014  0019B2                     __end_of_enviaByte:
  5015                           	opt stack 0
  5016                           tblptru	equ	0xFF8
  5017                           tblptrh	equ	0xFF7
  5018                           tblptrl	equ	0xFF6
  5019                           tablat	equ	0xFF5
  5020                           prodh	equ	0xFF4
  5021                           prodl	equ	0xFF3
  5022                           intcon	equ	0xFF2
  5023                           postinc0	equ	0xFEE
  5024                           wreg	equ	0xFE8
  5025                           indf1	equ	0xFE7
  5026                           postdec1	equ	0xFE5
  5027                           fsr1h	equ	0xFE2
  5028                           fsr1l	equ	0xFE1
  5029                           indf2	equ	0xFDF
  5030                           postinc2	equ	0xFDE
  5031                           postdec2	equ	0xFDD
  5032                           fsr2h	equ	0xFDA
  5033                           fsr2l	equ	0xFD9
  5034                           status	equ	0xFD8
  5035                           
  5036 ;; *************** function _init_XLCD *****************
  5037 ;; Defined at:
  5038 ;;		line 241 in file "main.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;		None
  5041 ;; Auto vars:     Size  Location     Type
  5042 ;;		None
  5043 ;; Return value:  Size  Location     Type
  5044 ;;                  1    wreg      void 
  5045 ;; Registers used:
  5046 ;;		wreg, status,2, status,0, cstack
  5047 ;; Tracked objects:
  5048 ;;		On entry : 0/0
  5049 ;;		On exit  : 0/0
  5050 ;;		Unchanged: 0/0
  5051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5052 ;;      Params:         0       0       0       0       0       0       0       0       0
  5053 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5054 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5055 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5056 ;;Total ram usage:        0 bytes
  5057 ;; Hardware stack levels used:    1
  5058 ;; Hardware stack levels required when called:    9
  5059 ;; This function calls:
  5060 ;;		_BusyXLCD
  5061 ;;		_OpenXLCD
  5062 ;;		_WriteCmdXLCD
  5063 ;; This function is called by:
  5064 ;;		_main
  5065 ;; This function uses a non-reentrant model
  5066 ;;
  5067                           
  5068                           	psect	text27
  5069  0019B2                     __ptext27:
  5070                           	opt stack 0
  5071  0019B2                     _init_XLCD:
  5072                           	opt stack 21
  5073                           
  5074                           ;main.c: 242: OpenXLCD(0b00101100&0b00111000);
  5075                           
  5076                           ;incstack = 0
  5077  0019B2  0E28               	movlw	40
  5078  0019B4  EC16  F009         	call	_OpenXLCD
  5079  0019B8                     l3795:
  5080  0019B8  EC28  F00C         	call	_BusyXLCD	;wreg free
  5081  0019BC  0900               	iorlw	0
  5082  0019BE  A4D8               	btfss	status,2,c
  5083  0019C0  D7FB               	goto	l3795
  5084                           
  5085                           ;main.c: 244: WriteCmdXLCD(0x06);
  5086  0019C2  0E06               	movlw	6
  5087  0019C4  ECEC  F00B         	call	_WriteCmdXLCD
  5088                           
  5089                           ;main.c: 245: WriteCmdXLCD(0x0C);
  5090  0019C8  0E0C               	movlw	12
  5091  0019CA  ECEC  F00B         	call	_WriteCmdXLCD
  5092  0019CE  0012               	return		;funcret
  5093  0019D0                     __end_of_init_XLCD:
  5094                           	opt stack 0
  5095                           tblptru	equ	0xFF8
  5096                           tblptrh	equ	0xFF7
  5097                           tblptrl	equ	0xFF6
  5098                           tablat	equ	0xFF5
  5099                           prodh	equ	0xFF4
  5100                           prodl	equ	0xFF3
  5101                           intcon	equ	0xFF2
  5102                           postinc0	equ	0xFEE
  5103                           wreg	equ	0xFE8
  5104                           indf1	equ	0xFE7
  5105                           postdec1	equ	0xFE5
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115 ;; *************** function _OpenXLCD *****************
  5116 ;; Defined at:
  5117 ;;		line 19 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\openxlcd.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  lcdtype         1    wreg     unsigned char 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  lcdtype         1   27[COMRAM] unsigned char 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;                  1    wreg      void 
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0, cstack
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5131 ;;      Params:         0       0       0       0       0       0       0       0       0
  5132 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5133 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5134 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5135 ;;Total ram usage:        1 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:    8
  5138 ;; This function calls:
  5139 ;;		_BusyXLCD
  5140 ;;		_Delay10KTCYx
  5141 ;;		_DelayPORXLCD
  5142 ;;		_SetDDRamAddr
  5143 ;;		_WriteCmdXLCD
  5144 ;; This function is called by:
  5145 ;;		_init_XLCD
  5146 ;; This function uses a non-reentrant model
  5147 ;;
  5148                           
  5149                           	psect	text28
  5150  00122C                     __ptext28:
  5151                           	opt stack 0
  5152  00122C                     _OpenXLCD:
  5153                           	opt stack 21
  5154                           
  5155                           ;incstack = 0
  5156                           ;OpenXLCD@lcdtype stored from wreg
  5157  00122C  6E1C               	movwf	OpenXLCD@lcdtype,c
  5158  00122E  0EF0               	movlw	240
  5159  001230  1681               	andwf	3969,f,c	;volatile
  5160  001232  0EF0               	movlw	240
  5161  001234  1693               	andwf	3987,f,c	;volatile
  5162  001236  9C93               	bcf	3987,6,c	;volatile
  5163  001238  9A93               	bcf	3987,5,c	;volatile
  5164  00123A  9893               	bcf	3987,4,c	;volatile
  5165  00123C  9C8A               	bcf	3978,6,c	;volatile
  5166  00123E  9A8A               	bcf	3978,5,c	;volatile
  5167  001240  988A               	bcf	3978,4,c	;volatile
  5168  001242  EC18  F00D         	call	_DelayPORXLCD	;wreg free
  5169  001246  0E30               	movlw	48
  5170  001248  ECEC  F00B         	call	_WriteCmdXLCD
  5171  00124C  0E05               	movlw	5
  5172  00124E  ECE8  F00C         	call	_Delay10KTCYx
  5173  001252  0E30               	movlw	48
  5174  001254  ECEC  F00B         	call	_WriteCmdXLCD
  5175  001258  0E01               	movlw	1
  5176  00125A  ECE8  F00C         	call	_Delay10KTCYx
  5177  00125E  0E32               	movlw	50
  5178  001260  ECEC  F00B         	call	_WriteCmdXLCD
  5179  001264                     l3523:
  5180  001264  EC28  F00C         	call	_BusyXLCD	;wreg free
  5181  001268  0900               	iorlw	0
  5182  00126A  A4D8               	btfss	status,2,c
  5183  00126C  D7FB               	goto	l3523
  5184  00126E                     l3525:
  5185  00126E  EC28  F00C         	call	_BusyXLCD	;wreg free
  5186  001272  0900               	iorlw	0
  5187  001274  A4D8               	btfss	status,2,c
  5188  001276  D7FB               	goto	l3525
  5189  001278  501C               	movf	OpenXLCD@lcdtype,w,c
  5190  00127A  ECEC  F00B         	call	_WriteCmdXLCD
  5191  00127E                     l3529:
  5192  00127E  EC28  F00C         	call	_BusyXLCD	;wreg free
  5193  001282  0900               	iorlw	0
  5194  001284  A4D8               	btfss	status,2,c
  5195  001286  D7FB               	goto	l3529
  5196  001288  0E08               	movlw	8
  5197  00128A  ECEC  F00B         	call	_WriteCmdXLCD
  5198  00128E                     l3533:
  5199  00128E  EC28  F00C         	call	_BusyXLCD	;wreg free
  5200  001292  0900               	iorlw	0
  5201  001294  A4D8               	btfss	status,2,c
  5202  001296  D7FB               	goto	l3533
  5203  001298  0E0F               	movlw	15
  5204  00129A  ECEC  F00B         	call	_WriteCmdXLCD
  5205  00129E                     l3537:
  5206  00129E  EC28  F00C         	call	_BusyXLCD	;wreg free
  5207  0012A2  0900               	iorlw	0
  5208  0012A4  A4D8               	btfss	status,2,c
  5209  0012A6  D7FB               	goto	l3537
  5210  0012A8  0E01               	movlw	1
  5211  0012AA  ECEC  F00B         	call	_WriteCmdXLCD
  5212  0012AE                     l3541:
  5213  0012AE  EC28  F00C         	call	_BusyXLCD	;wreg free
  5214  0012B2  0900               	iorlw	0
  5215  0012B4  A4D8               	btfss	status,2,c
  5216  0012B6  D7FB               	goto	l3541
  5217  0012B8  0E04               	movlw	4
  5218  0012BA  ECEC  F00B         	call	_WriteCmdXLCD
  5219  0012BE                     l3545:
  5220  0012BE  EC28  F00C         	call	_BusyXLCD	;wreg free
  5221  0012C2  0900               	iorlw	0
  5222  0012C4  A4D8               	btfss	status,2,c
  5223  0012C6  D7FB               	goto	l3545
  5224  0012C8  0E80               	movlw	128
  5225  0012CA  EC17  F00B         	call	_SetDDRamAddr
  5226  0012CE  0012               	return	
  5227  0012D0                     __end_of_OpenXLCD:
  5228                           	opt stack 0
  5229                           tblptru	equ	0xFF8
  5230                           tblptrh	equ	0xFF7
  5231                           tblptrl	equ	0xFF6
  5232                           tablat	equ	0xFF5
  5233                           prodh	equ	0xFF4
  5234                           prodl	equ	0xFF3
  5235                           intcon	equ	0xFF2
  5236                           postinc0	equ	0xFEE
  5237                           wreg	equ	0xFE8
  5238                           indf1	equ	0xFE7
  5239                           postdec1	equ	0xFE5
  5240                           fsr1h	equ	0xFE2
  5241                           fsr1l	equ	0xFE1
  5242                           indf2	equ	0xFDF
  5243                           postinc2	equ	0xFDE
  5244                           postdec2	equ	0xFDD
  5245                           fsr2h	equ	0xFDA
  5246                           fsr2l	equ	0xFD9
  5247                           status	equ	0xFD8
  5248                           
  5249 ;; *************** function _WriteCmdXLCD *****************
  5250 ;; Defined at:
  5251 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\wcmdxlcd.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;  cmd             1    wreg     unsigned char 
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;  cmd             1   23[COMRAM] unsigned char 
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		wreg, status,2, status,0, cstack
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5265 ;;      Params:         0       0       0       0       0       0       0       0       0
  5266 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5268 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5269 ;;Total ram usage:        1 bytes
  5270 ;; Hardware stack levels used:    1
  5271 ;; Hardware stack levels required when called:    7
  5272 ;; This function calls:
  5273 ;;		_DelayFor18TCY
  5274 ;; This function is called by:
  5275 ;;		_init_XLCD
  5276 ;;		_OpenXLCD
  5277 ;; This function uses a non-reentrant model
  5278 ;;
  5279                           
  5280                           	psect	text29
  5281  0017D8                     __ptext29:
  5282                           	opt stack 0
  5283  0017D8                     _WriteCmdXLCD:
  5284                           	opt stack 22
  5285                           
  5286                           ;incstack = 0
  5287                           ;WriteCmdXLCD@cmd stored from wreg
  5288  0017D8  6E18               	movwf	WriteCmdXLCD@cmd,c
  5289  0017DA  0EF0               	movlw	240
  5290  0017DC  1693               	andwf	3987,f,c	;volatile
  5291  0017DE  0EF0               	movlw	240
  5292  0017E0  1681               	andwf	3969,f,c	;volatile
  5293  0017E2  3818               	swapf	WriteCmdXLCD@cmd,w,c
  5294  0017E4  0B0F               	andlw	15
  5295  0017E6  0B0F               	andlw	15
  5296  0017E8  1281               	iorwf	3969,f,c	;volatile
  5297  0017EA  9C8A               	bcf	3978,6,c	;volatile
  5298  0017EC  9A8A               	bcf	3978,5,c	;volatile
  5299  0017EE  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5300  0017F2  888A               	bsf	3978,4,c	;volatile
  5301  0017F4  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5302  0017F8  988A               	bcf	3978,4,c	;volatile
  5303  0017FA  0EF0               	movlw	240
  5304  0017FC  1681               	andwf	3969,f,c	;volatile
  5305  0017FE  5018               	movf	WriteCmdXLCD@cmd,w,c
  5306  001800  0B0F               	andlw	15
  5307  001802  1281               	iorwf	3969,f,c	;volatile
  5308  001804  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5309  001808  888A               	bsf	3978,4,c	;volatile
  5310  00180A  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5311  00180E  988A               	bcf	3978,4,c	;volatile
  5312  001810  0E0F               	movlw	15
  5313  001812  1293               	iorwf	3987,f,c	;volatile
  5314  001814  0012               	return	
  5315  001816                     __end_of_WriteCmdXLCD:
  5316                           	opt stack 0
  5317                           tblptru	equ	0xFF8
  5318                           tblptrh	equ	0xFF7
  5319                           tblptrl	equ	0xFF6
  5320                           tablat	equ	0xFF5
  5321                           prodh	equ	0xFF4
  5322                           prodl	equ	0xFF3
  5323                           intcon	equ	0xFF2
  5324                           postinc0	equ	0xFEE
  5325                           wreg	equ	0xFE8
  5326                           indf1	equ	0xFE7
  5327                           postdec1	equ	0xFE5
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _SetDDRamAddr *****************
  5338 ;; Defined at:
  5339 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  DDaddr          1    wreg     unsigned char 
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;  DDaddr          1   26[COMRAM] unsigned char 
  5344 ;; Return value:  Size  Location     Type
  5345 ;;                  1    wreg      void 
  5346 ;; Registers used:
  5347 ;;		wreg, status,2, status,0, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5353 ;;      Params:         0       0       0       0       0       0       0       0       0
  5354 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5355 ;;      Temps:          3       0       0       0       0       0       0       0       0
  5356 ;;      Totals:         4       0       0       0       0       0       0       0       0
  5357 ;;Total ram usage:        4 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    7
  5360 ;; This function calls:
  5361 ;;		_DelayFor18TCY
  5362 ;; This function is called by:
  5363 ;;		_printaDisplay
  5364 ;;		_atualiza_Tela
  5365 ;;		_OpenXLCD
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	text30
  5370  00162E                     __ptext30:
  5371                           	opt stack 0
  5372  00162E                     _SetDDRamAddr:
  5373                           	opt stack 21
  5374                           
  5375                           ;incstack = 0
  5376                           ;SetDDRamAddr@DDaddr stored from wreg
  5377  00162E  6E1B               	movwf	SetDDRamAddr@DDaddr,c
  5378  001630  0EF0               	movlw	240
  5379  001632  1693               	andwf	3987,f,c	;volatile
  5380  001634  0EF0               	movlw	240
  5381  001636  1681               	andwf	3969,f,c	;volatile
  5382  001638  501B               	movf	SetDDRamAddr@DDaddr,w,c
  5383  00163A  6E18               	movwf	??_SetDDRamAddr& (0+255),c
  5384  00163C  6A19               	clrf	(??_SetDDRamAddr+1)& (0+255),c
  5385  00163E  8E18               	bsf	??_SetDDRamAddr,7,c
  5386  001640  0E04               	movlw	4
  5387  001642  6E1A               	movwf	(??_SetDDRamAddr+2)& (0+255),c
  5388  001644                     u2245:
  5389  001644  3419               	rlcf	??_SetDDRamAddr+1,w,c
  5390  001646  3219               	rrcf	??_SetDDRamAddr+1,f,c
  5391  001648  3218               	rrcf	??_SetDDRamAddr,f,c
  5392  00164A  2E1A               	decfsz	(??_SetDDRamAddr+2)& (0+255),f,c
  5393  00164C  D7FB               	goto	u2245
  5394  00164E  5018               	movf	??_SetDDRamAddr,w,c
  5395  001650  0B0F               	andlw	15
  5396  001652  1281               	iorwf	3969,f,c	;volatile
  5397  001654  9C8A               	bcf	3978,6,c	;volatile
  5398  001656  9A8A               	bcf	3978,5,c	;volatile
  5399  001658  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5400  00165C  888A               	bsf	3978,4,c	;volatile
  5401  00165E  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5402  001662  988A               	bcf	3978,4,c	;volatile
  5403  001664  0EF0               	movlw	240
  5404  001666  1681               	andwf	3969,f,c	;volatile
  5405  001668  501B               	movf	SetDDRamAddr@DDaddr,w,c
  5406  00166A  0B0F               	andlw	15
  5407  00166C  1281               	iorwf	3969,f,c	;volatile
  5408  00166E  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5409  001672  888A               	bsf	3978,4,c	;volatile
  5410  001674  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5411  001678  988A               	bcf	3978,4,c	;volatile
  5412  00167A  0E0F               	movlw	15
  5413  00167C  1293               	iorwf	3987,f,c	;volatile
  5414  00167E  0012               	return	
  5415  001680                     __end_of_SetDDRamAddr:
  5416                           	opt stack 0
  5417                           tblptru	equ	0xFF8
  5418                           tblptrh	equ	0xFF7
  5419                           tblptrl	equ	0xFF6
  5420                           tablat	equ	0xFF5
  5421                           prodh	equ	0xFF4
  5422                           prodl	equ	0xFF3
  5423                           intcon	equ	0xFF2
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           indf1	equ	0xFE7
  5427                           postdec1	equ	0xFE5
  5428                           fsr1h	equ	0xFE2
  5429                           fsr1l	equ	0xFE1
  5430                           indf2	equ	0xFDF
  5431                           postinc2	equ	0xFDE
  5432                           postdec2	equ	0xFDD
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function _DelayPORXLCD *****************
  5438 ;; Defined at:
  5439 ;;		line 78 in file "main.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;		None
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;		None
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  1    wreg      void 
  5446 ;; Registers used:
  5447 ;;		wreg, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0
  5454 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5456 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5457 ;;Total ram usage:        0 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    6
  5460 ;; This function calls:
  5461 ;;		_Delay1KTCYx
  5462 ;; This function is called by:
  5463 ;;		_OpenXLCD
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text31
  5468  001A30                     __ptext31:
  5469                           	opt stack 0
  5470  001A30                     _DelayPORXLCD:
  5471                           	opt stack 22
  5472                           
  5473                           ;main.c: 79: Delay1KTCYx(180);
  5474                           
  5475                           ;incstack = 0
  5476  001A30  0EB4               	movlw	180
  5477  001A32  ECFC  F00C         	call	_Delay1KTCYx
  5478  001A36  0012               	return	
  5479  001A38                     __end_of_DelayPORXLCD:
  5480                           	opt stack 0
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           prodh	equ	0xFF4
  5486                           prodl	equ	0xFF3
  5487                           intcon	equ	0xFF2
  5488                           postinc0	equ	0xFEE
  5489                           wreg	equ	0xFE8
  5490                           indf1	equ	0xFE7
  5491                           postdec1	equ	0xFE5
  5492                           fsr1h	equ	0xFE2
  5493                           fsr1l	equ	0xFE1
  5494                           indf2	equ	0xFDF
  5495                           postinc2	equ	0xFDE
  5496                           postdec2	equ	0xFDD
  5497                           fsr2h	equ	0xFDA
  5498                           fsr2l	equ	0xFD9
  5499                           status	equ	0xFD8
  5500                           
  5501 ;; *************** function _Delay1KTCYx *****************
  5502 ;; Defined at:
  5503 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d1ktcyx.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  unit            1    wreg     unsigned char 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;  unit            1   22[COMRAM] unsigned char 
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  1    wreg      void 
  5510 ;; Registers used:
  5511 ;;		wreg
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5517 ;;      Params:         0       0       0       0       0       0       0       0       0
  5518 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5520 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5521 ;;Total ram usage:        1 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; Hardware stack levels required when called:    5
  5524 ;; This function calls:
  5525 ;;		Nothing
  5526 ;; This function is called by:
  5527 ;;		_DelayPORXLCD
  5528 ;;		_DelayXLCD
  5529 ;; This function uses a non-reentrant model
  5530 ;;
  5531                           
  5532                           	psect	text32
  5533  0019F8                     __ptext32:
  5534                           	opt stack 0
  5535  0019F8                     _Delay1KTCYx:
  5536                           	opt stack 22
  5537                           
  5538                           ;incstack = 0
  5539                           ;Delay1KTCYx@unit stored from wreg
  5540  0019F8  6E17               	movwf	Delay1KTCYx@unit,c
  5541  0019FA  0EC8               	movlw	200
  5542  0019FC                     u3207:
  5543  0019FC  D000               	nop2	
  5544  0019FE  2EE8               	decfsz	wreg,f,c
  5545  001A00  D7FD               	bra	u3207
  5546  001A02  2E17               	decfsz	Delay1KTCYx@unit,f,c
  5547  001A04  D7FA               	goto	l3069
  5548  001A06  0012               	return	
  5549  001A08                     __end_of_Delay1KTCYx:
  5550                           	opt stack 0
  5551                           tblptru	equ	0xFF8
  5552                           tblptrh	equ	0xFF7
  5553                           tblptrl	equ	0xFF6
  5554                           tablat	equ	0xFF5
  5555                           prodh	equ	0xFF4
  5556                           prodl	equ	0xFF3
  5557                           intcon	equ	0xFF2
  5558                           postinc0	equ	0xFEE
  5559                           wreg	equ	0xFE8
  5560                           indf1	equ	0xFE7
  5561                           postdec1	equ	0xFE5
  5562                           fsr1h	equ	0xFE2
  5563                           fsr1l	equ	0xFE1
  5564                           indf2	equ	0xFDF
  5565                           postinc2	equ	0xFDE
  5566                           postdec2	equ	0xFDD
  5567                           fsr2h	equ	0xFDA
  5568                           fsr2l	equ	0xFD9
  5569                           status	equ	0xFD8
  5570                           
  5571 ;; *************** function _Delay10KTCYx *****************
  5572 ;; Defined at:
  5573 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10ktcyx.c"
  5574 ;; Parameters:    Size  Location     Type
  5575 ;;  unit            1    wreg     unsigned char 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  unit            1   23[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  1    wreg      void 
  5580 ;; Registers used:
  5581 ;;		wreg
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5587 ;;      Params:         0       0       0       0       0       0       0       0       0
  5588 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5589 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5590 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5591 ;;Total ram usage:        2 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; Hardware stack levels required when called:    5
  5594 ;; This function calls:
  5595 ;;		Nothing
  5596 ;; This function is called by:
  5597 ;;		_setaDespertador
  5598 ;;		_main
  5599 ;;		_OpenXLCD
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           	psect	text33
  5604  0019D0                     __ptext33:
  5605                           	opt stack 0
  5606  0019D0                     _Delay10KTCYx:
  5607                           	opt stack 24
  5608                           
  5609                           ;incstack = 0
  5610                           ;Delay10KTCYx@unit stored from wreg
  5611  0019D0  6E18               	movwf	Delay10KTCYx@unit,c
  5612  0019D2  0E0D               	movlw	13
  5613  0019D4  6E17               	movwf	??_Delay10KTCYx& (0+255),c
  5614  0019D6  0EFC               	movlw	252
  5615  0019D8                     u3217:
  5616  0019D8  2EE8               	decfsz	wreg,f,c
  5617  0019DA  D7FE               	bra	u3217
  5618  0019DC  2E17               	decfsz	??_Delay10KTCYx& (0+255),f,c
  5619  0019DE  D7FC               	bra	u3217
  5620  0019E0  2E18               	decfsz	Delay10KTCYx@unit,f,c
  5621  0019E2  D7F7               	goto	l3331
  5622  0019E4  0012               	return	
  5623  0019E6                     __end_of_Delay10KTCYx:
  5624                           	opt stack 0
  5625                           tblptru	equ	0xFF8
  5626                           tblptrh	equ	0xFF7
  5627                           tblptrl	equ	0xFF6
  5628                           tablat	equ	0xFF5
  5629                           prodh	equ	0xFF4
  5630                           prodl	equ	0xFF3
  5631                           intcon	equ	0xFF2
  5632                           postinc0	equ	0xFEE
  5633                           wreg	equ	0xFE8
  5634                           indf1	equ	0xFE7
  5635                           postdec1	equ	0xFE5
  5636                           fsr1h	equ	0xFE2
  5637                           fsr1l	equ	0xFE1
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _BusyXLCD *****************
  5646 ;; Defined at:
  5647 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\busyxlcd.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;		None
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      unsigned char 
  5654 ;; Registers used:
  5655 ;;		wreg, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5661 ;;      Params:         0       0       0       0       0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5664 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5665 ;;Total ram usage:        0 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    7
  5668 ;; This function calls:
  5669 ;;		_DelayFor18TCY
  5670 ;; This function is called by:
  5671 ;;		_init_XLCD
  5672 ;;		_OpenXLCD
  5673 ;;		_putrsXLCD
  5674 ;; This function uses a non-reentrant model
  5675 ;;
  5676                           
  5677                           	psect	text34
  5678  001850                     __ptext34:
  5679                           	opt stack 0
  5680  001850                     _BusyXLCD:
  5681                           	opt stack 20
  5682                           
  5683                           ;incstack = 0
  5684  001850  8C8A               	bsf	3978,6,c	;volatile
  5685  001852  9A8A               	bcf	3978,5,c	;volatile
  5686  001854  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5687  001858  888A               	bsf	3978,4,c	;volatile
  5688  00185A  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5689  00185E  A681               	btfss	3969,3,c	;volatile
  5690  001860  D00A               	goto	l312
  5691  001862  988A               	bcf	3978,4,c	;volatile
  5692  001864  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5693  001868  888A               	bsf	3978,4,c	;volatile
  5694  00186A  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5695  00186E  988A               	bcf	3978,4,c	;volatile
  5696  001870  9C8A               	bcf	3978,6,c	;volatile
  5697  001872  0E01               	movlw	1
  5698  001874  0012               	return	
  5699  001876                     l312:
  5700  001876  988A               	bcf	3978,4,c	;volatile
  5701  001878  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5702  00187C  888A               	bsf	3978,4,c	;volatile
  5703  00187E  EC1C  F00D         	call	_DelayFor18TCY	;wreg free
  5704  001882  988A               	bcf	3978,4,c	;volatile
  5705  001884  9C8A               	bcf	3978,6,c	;volatile
  5706  001886  0E00               	movlw	0
  5707  001888  0012               	return	
  5708  00188A                     __end_of_BusyXLCD:
  5709                           	opt stack 0
  5710                           tblptru	equ	0xFF8
  5711                           tblptrh	equ	0xFF7
  5712                           tblptrl	equ	0xFF6
  5713                           tablat	equ	0xFF5
  5714                           prodh	equ	0xFF4
  5715                           prodl	equ	0xFF3
  5716                           intcon	equ	0xFF2
  5717                           postinc0	equ	0xFEE
  5718                           wreg	equ	0xFE8
  5719                           indf1	equ	0xFE7
  5720                           postdec1	equ	0xFE5
  5721                           fsr1h	equ	0xFE2
  5722                           fsr1l	equ	0xFE1
  5723                           indf2	equ	0xFDF
  5724                           postinc2	equ	0xFDE
  5725                           postdec2	equ	0xFDD
  5726                           fsr2h	equ	0xFDA
  5727                           fsr2l	equ	0xFD9
  5728                           status	equ	0xFD8
  5729                           
  5730 ;; *************** function _DelayFor18TCY *****************
  5731 ;; Defined at:
  5732 ;;		line 74 in file "main.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/0
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:    6
  5753 ;; This function calls:
  5754 ;;		_Delay10TCYx
  5755 ;; This function is called by:
  5756 ;;		_BusyXLCD
  5757 ;;		_SetDDRamAddr
  5758 ;;		_WriteCmdXLCD
  5759 ;;		_WriteDataXLCD
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text35
  5764  001A38                     __ptext35:
  5765                           	opt stack 0
  5766  001A38                     _DelayFor18TCY:
  5767                           	opt stack 20
  5768                           
  5769                           ;main.c: 75: Delay10TCYx(120);
  5770                           
  5771                           ;incstack = 0
  5772  001A38  0E78               	movlw	120
  5773  001A3A  EC04  F00D         	call	_Delay10TCYx
  5774  001A3E  0012               	return		;funcret
  5775  001A40                     __end_of_DelayFor18TCY:
  5776                           	opt stack 0
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           postinc0	equ	0xFEE
  5785                           wreg	equ	0xFE8
  5786                           indf1	equ	0xFE7
  5787                           postdec1	equ	0xFE5
  5788                           fsr1h	equ	0xFE2
  5789                           fsr1l	equ	0xFE1
  5790                           indf2	equ	0xFDF
  5791                           postinc2	equ	0xFDE
  5792                           postdec2	equ	0xFDD
  5793                           fsr2h	equ	0xFDA
  5794                           fsr2l	equ	0xFD9
  5795                           status	equ	0xFD8
  5796                           
  5797 ;; *************** function _Delay10TCYx *****************
  5798 ;; Defined at:
  5799 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  5800 ;; Parameters:    Size  Location     Type
  5801 ;;  unit            1    wreg     unsigned char 
  5802 ;; Auto vars:     Size  Location     Type
  5803 ;;  unit            1   22[COMRAM] unsigned char 
  5804 ;; Return value:  Size  Location     Type
  5805 ;;                  1    wreg      void 
  5806 ;; Registers used:
  5807 ;;		wreg
  5808 ;; Tracked objects:
  5809 ;;		On entry : 0/0
  5810 ;;		On exit  : 0/0
  5811 ;;		Unchanged: 0/0
  5812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5813 ;;      Params:         0       0       0       0       0       0       0       0       0
  5814 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5816 ;;      Totals:         1       0       0       0       0       0       0       0       0
  5817 ;;Total ram usage:        1 bytes
  5818 ;; Hardware stack levels used:    1
  5819 ;; Hardware stack levels required when called:    5
  5820 ;; This function calls:
  5821 ;;		Nothing
  5822 ;; This function is called by:
  5823 ;;		_DelayFor18TCY
  5824 ;; This function uses a non-reentrant model
  5825 ;;
  5826                           
  5827                           	psect	text36
  5828  001A08                     __ptext36:
  5829                           	opt stack 0
  5830  001A08                     _Delay10TCYx:
  5831                           	opt stack 20
  5832                           
  5833                           ;incstack = 0
  5834                           ;Delay10TCYx@unit stored from wreg
  5835  001A08  6E17               	movwf	Delay10TCYx@unit,c
  5836  001A0A  0E03               	movlw	3
  5837  001A0C                     u3227:
  5838  001A0C  2EE8               	decfsz	wreg,f,c
  5839  001A0E  D7FE               	bra	u3227
  5840  001A10  F000               	nop	
  5841  001A12  2E17               	decfsz	Delay10TCYx@unit,f,c
  5842  001A14  D7FA               	goto	l3025
  5843  001A16  0012               	return	
  5844  001A18                     __end_of_Delay10TCYx:
  5845                           	opt stack 0
  5846                           tblptru	equ	0xFF8
  5847                           tblptrh	equ	0xFF7
  5848                           tblptrl	equ	0xFF6
  5849                           tablat	equ	0xFF5
  5850                           prodh	equ	0xFF4
  5851                           prodl	equ	0xFF3
  5852                           intcon	equ	0xFF2
  5853                           postinc0	equ	0xFEE
  5854                           wreg	equ	0xFE8
  5855                           indf1	equ	0xFE7
  5856                           postdec1	equ	0xFE5
  5857                           fsr1h	equ	0xFE2
  5858                           fsr1l	equ	0xFE1
  5859                           indf2	equ	0xFDF
  5860                           postinc2	equ	0xFDE
  5861                           postdec2	equ	0xFDD
  5862                           fsr2h	equ	0xFDA
  5863                           fsr2l	equ	0xFD9
  5864                           status	equ	0xFD8
  5865                           
  5866 ;; *************** function _pic_isr *****************
  5867 ;; Defined at:
  5868 ;;		line 104 in file "main.c"
  5869 ;; Parameters:    Size  Location     Type
  5870 ;;		None
  5871 ;; Auto vars:     Size  Location     Type
  5872 ;;		None
  5873 ;; Return value:  Size  Location     Type
  5874 ;;                  1    wreg      void 
  5875 ;; Registers used:
  5876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5877 ;; Tracked objects:
  5878 ;;		On entry : 0/0
  5879 ;;		On exit  : 0/0
  5880 ;;		Unchanged: 0/0
  5881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5882 ;;      Params:         0       0       0       0       0       0       0       0       0
  5883 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5884 ;;      Temps:         17       0       0       0       0       0       0       0       0
  5885 ;;      Totals:        17       0       0       0       0       0       0       0       0
  5886 ;;Total ram usage:       17 bytes
  5887 ;; Hardware stack levels used:    1
  5888 ;; Hardware stack levels required when called:    4
  5889 ;; This function calls:
  5890 ;;		i1_printaDisplay
  5891 ;; This function is called by:
  5892 ;;		Interrupt level 1
  5893 ;; This function uses a non-reentrant model
  5894 ;;
  5895                           
  5896                           	psect	intcodelo
  5897  000018                     __pintcodelo:
  5898                           	opt stack 0
  5899  000018                     _pic_isr:
  5900                           	opt stack 20
  5901                           
  5902                           ;incstack = 0
  5903  000018  8049               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  5904  00001A  CFD8 F006          	movff	status,??_pic_isr
  5905  00001E  CFE8 F007          	movff	wreg,??_pic_isr+1
  5906  000022  CFE0 F008          	movff	bsr,??_pic_isr+2
  5907  000026  CFFA F009          	movff	pclath,??_pic_isr+3
  5908  00002A  CFFB F00A          	movff	pclatu,??_pic_isr+4
  5909  00002E  CFE9 F00B          	movff	fsr0l,??_pic_isr+5
  5910  000032  CFEA F00C          	movff	fsr0h,??_pic_isr+6
  5911  000036  CFE1 F00D          	movff	fsr1l,??_pic_isr+7
  5912  00003A  CFE2 F00E          	movff	fsr1h,??_pic_isr+8
  5913  00003E  CFD9 F00F          	movff	fsr2l,??_pic_isr+9
  5914  000042  CFDA F010          	movff	fsr2h,??_pic_isr+10
  5915  000046  CFF3 F011          	movff	prodl,??_pic_isr+11
  5916  00004A  CFF4 F012          	movff	prodh,??_pic_isr+12
  5917  00004E  CFF6 F013          	movff	tblptrl,??_pic_isr+13
  5918  000052  CFF7 F014          	movff	tblptrh,??_pic_isr+14
  5919  000056  CFF8 F015          	movff	tblptru,??_pic_isr+15
  5920  00005A  CFF5 F016          	movff	tablat,??_pic_isr+16
  5921                           
  5922                           ;main.c: 108: if(TMR0IF){
  5923  00005E  A4F2               	btfss	intcon,2,c	;volatile
  5924  000060  D00D               	goto	i1l2935
  5925                           
  5926                           ;main.c: 110: cont++;
  5927  000062  2A3A               	incf	_cont,f,c
  5928                           
  5929                           ;main.c: 111: if(cont > 1){
  5930  000064  0E01               	movlw	1
  5931  000066  643A               	cpfsgt	_cont,c
  5932  000068  D004               	goto	i1l124
  5933                           
  5934                           ;main.c: 112: flagSegundo = 1;
  5935  00006A  0E01               	movlw	1
  5936  00006C  6E3B               	movwf	_flagSegundo,c
  5937                           
  5938                           ;main.c: 113: cont = 0;
  5939  00006E  0E00               	movlw	0
  5940  000070  6E3A               	movwf	_cont,c
  5941  000072                     i1l124:
  5942                           
  5943                           ;main.c: 114: }
  5944                           ;main.c: 117: TMR0 = 26474;
  5945  000072  0E67               	movlw	103
  5946  000074  6ED7               	movwf	4055,c	;volatile
  5947  000076  0E6A               	movlw	106
  5948  000078  6ED6               	movwf	4054,c	;volatile
  5949                           
  5950                           ;main.c: 118: INTCONbits.TMR0IF = 0;
  5951  00007A  94F2               	bcf	intcon,2,c	;volatile
  5952  00007C                     i1l2935:
  5953                           
  5954                           ;main.c: 119: }
  5955                           ;main.c: 122: if(PIR1bits.RCIF == 1)
  5956  00007C  AA9E               	btfss	3998,5,c	;volatile
  5957  00007E  D017               	goto	i1l130
  5958  000080                     i1l126:
  5959  000080  AA9E               	btfss	3998,5,c	;volatile
  5960  000082  D7FE               	goto	i1l126
  5961                           
  5962                           ;main.c: 127: BUFFCOM[i]= RCREG;
  5963  000084  503C               	movf	_i,w,c
  5964  000086  0D01               	mullw	1
  5965  000088  0E3E               	movlw	low _BUFFCOM
  5966  00008A  24F3               	addwf	prodl,w,c
  5967  00008C  6ED9               	movwf	fsr2l,c
  5968  00008E  0E00               	movlw	high _BUFFCOM
  5969  000090  20F4               	addwfc	prodh,w,c
  5970  000092  6EDA               	movwf	fsr2h,c
  5971  000094  CFAE FFDF          	movff	4014,indf2	;volatile
  5972                           
  5973                           ;main.c: 129: i++;
  5974  000098  2A3C               	incf	_i,f,c
  5975                           
  5976                           ;main.c: 131: if(i>6)
  5977  00009A  0E06               	movlw	6
  5978  00009C  643C               	cpfsgt	_i,c
  5979  00009E  D007               	goto	i1l130
  5980                           
  5981                           ;main.c: 132: {
  5982                           ;main.c: 133: printaDisplay();
  5983  0000A0  EC20  F00D         	call	i1_printaDisplay	;wreg free
  5984                           
  5985                           ;main.c: 134: PIR1bits.RCIF = 0;
  5986  0000A4  9A9E               	bcf	3998,5,c	;volatile
  5987                           
  5988                           ;main.c: 135: i=0;
  5989  0000A6  0E00               	movlw	0
  5990  0000A8  6E3C               	movwf	_i,c
  5991                           
  5992                           ;main.c: 136: estado = 1;
  5993  0000AA  0E01               	movlw	1
  5994  0000AC  6E3D               	movwf	_estado,c
  5995  0000AE                     i1l130:
  5996  0000AE  C016  FFF5         	movff	??_pic_isr+16,tablat
  5997  0000B2  C015  FFF8         	movff	??_pic_isr+15,tblptru
  5998  0000B6  C014  FFF7         	movff	??_pic_isr+14,tblptrh
  5999  0000BA  C013  FFF6         	movff	??_pic_isr+13,tblptrl
  6000  0000BE  C012  FFF4         	movff	??_pic_isr+12,prodh
  6001  0000C2  C011  FFF3         	movff	??_pic_isr+11,prodl
  6002  0000C6  C010  FFDA         	movff	??_pic_isr+10,fsr2h
  6003  0000CA  C00F  FFD9         	movff	??_pic_isr+9,fsr2l
  6004  0000CE  C00E  FFE2         	movff	??_pic_isr+8,fsr1h
  6005  0000D2  C00D  FFE1         	movff	??_pic_isr+7,fsr1l
  6006  0000D6  C00C  FFEA         	movff	??_pic_isr+6,fsr0h
  6007  0000DA  C00B  FFE9         	movff	??_pic_isr+5,fsr0l
  6008  0000DE  C00A  FFFB         	movff	??_pic_isr+4,pclatu
  6009  0000E2  C009  FFFA         	movff	??_pic_isr+3,pclath
  6010  0000E6  C008  FFE0         	movff	??_pic_isr+2,bsr
  6011  0000EA  C007  FFE8         	movff	??_pic_isr+1,wreg
  6012  0000EE  C006  FFD8         	movff	??_pic_isr,status
  6013  0000F2  9049               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  6014  0000F4  0010               	retfie	
  6015  0000F6                     __end_of_pic_isr:
  6016                           	opt stack 0
  6017                           pclatu	equ	0xFFB
  6018                           pclath	equ	0xFFA
  6019                           tblptru	equ	0xFF8
  6020                           tblptrh	equ	0xFF7
  6021                           tblptrl	equ	0xFF6
  6022                           tablat	equ	0xFF5
  6023                           prodh	equ	0xFF4
  6024                           prodl	equ	0xFF3
  6025                           intcon	equ	0xFF2
  6026                           postinc0	equ	0xFEE
  6027                           fsr0h	equ	0xFEA
  6028                           fsr0l	equ	0xFE9
  6029                           wreg	equ	0xFE8
  6030                           indf1	equ	0xFE7
  6031                           postdec1	equ	0xFE5
  6032                           fsr1h	equ	0xFE2
  6033                           fsr1l	equ	0xFE1
  6034                           bsr	equ	0xFE0
  6035                           indf2	equ	0xFDF
  6036                           postinc2	equ	0xFDE
  6037                           postdec2	equ	0xFDD
  6038                           fsr2h	equ	0xFDA
  6039                           fsr2l	equ	0xFD9
  6040                           status	equ	0xFD8
  6041                           
  6042 ;; *************** function i1_printaDisplay *****************
  6043 ;; Defined at:
  6044 ;;		line 99 in file "main.c"
  6045 ;; Parameters:    Size  Location     Type
  6046 ;;		None
  6047 ;; Auto vars:     Size  Location     Type
  6048 ;;		None
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  1    wreg      void 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0, cstack
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6058 ;;      Params:         0       0       0       0       0       0       0       0       0
  6059 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6060 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6061 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6062 ;;Total ram usage:        0 bytes
  6063 ;; Hardware stack levels used:    1
  6064 ;; Hardware stack levels required when called:    3
  6065 ;; This function calls:
  6066 ;;		i1_SetDDRamAddr
  6067 ;; This function is called by:
  6068 ;;		_pic_isr
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text38
  6073  001A40                     __ptext38:
  6074                           	opt stack 0
  6075  001A40                     i1_printaDisplay:
  6076                           	opt stack 20
  6077                           
  6078                           ;main.c: 100: SetDDRamAddr(0x00);
  6079                           
  6080                           ;incstack = 0
  6081  001A40  0E00               	movlw	0
  6082  001A42  EC40  F00B         	call	i1_SetDDRamAddr
  6083  001A46  0012               	return		;funcret
  6084  001A48                     __end_ofi1_printaDisplay:
  6085                           	opt stack 0
  6086                           pclatu	equ	0xFFB
  6087                           pclath	equ	0xFFA
  6088                           tblptru	equ	0xFF8
  6089                           tblptrh	equ	0xFF7
  6090                           tblptrl	equ	0xFF6
  6091                           tablat	equ	0xFF5
  6092                           prodh	equ	0xFF4
  6093                           prodl	equ	0xFF3
  6094                           intcon	equ	0xFF2
  6095                           postinc0	equ	0xFEE
  6096                           fsr0h	equ	0xFEA
  6097                           fsr0l	equ	0xFE9
  6098                           wreg	equ	0xFE8
  6099                           indf1	equ	0xFE7
  6100                           postdec1	equ	0xFE5
  6101                           fsr1h	equ	0xFE2
  6102                           fsr1l	equ	0xFE1
  6103                           bsr	equ	0xFE0
  6104                           indf2	equ	0xFDF
  6105                           postinc2	equ	0xFDE
  6106                           postdec2	equ	0xFDD
  6107                           fsr2h	equ	0xFDA
  6108                           fsr2l	equ	0xFD9
  6109                           status	equ	0xFD8
  6110                           
  6111 ;; *************** function i1_SetDDRamAddr *****************
  6112 ;; Defined at:
  6113 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\plib\XLCD\setddram.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  DDaddr          1    wreg     unsigned char 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  DDaddr          1    4[COMRAM] unsigned char 
  6118 ;; Return value:  Size  Location     Type
  6119 ;;                  1    wreg      void 
  6120 ;; Registers used:
  6121 ;;		wreg, status,2, status,0, cstack
  6122 ;; Tracked objects:
  6123 ;;		On entry : 0/0
  6124 ;;		On exit  : 0/0
  6125 ;;		Unchanged: 0/0
  6126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6127 ;;      Params:         0       0       0       0       0       0       0       0       0
  6128 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6129 ;;      Temps:          3       0       0       0       0       0       0       0       0
  6130 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6131 ;;Total ram usage:        4 bytes
  6132 ;; Hardware stack levels used:    1
  6133 ;; Hardware stack levels required when called:    2
  6134 ;; This function calls:
  6135 ;;		i1_DelayFor18TCY
  6136 ;; This function is called by:
  6137 ;;		i1_printaDisplay
  6138 ;; This function uses a non-reentrant model
  6139 ;;
  6140                           
  6141                           	psect	text39
  6142  001680                     __ptext39:
  6143                           	opt stack 0
  6144  001680                     i1_SetDDRamAddr:
  6145                           	opt stack 20
  6146                           
  6147                           ;incstack = 0
  6148                           ;i1SetDDRamAddr@DDaddr stored from wreg
  6149  001680  6E05               	movwf	i1SetDDRamAddr@DDaddr,c
  6150  001682  0EF0               	movlw	240
  6151  001684  1693               	andwf	3987,f,c	;volatile
  6152  001686  0EF0               	movlw	240
  6153  001688  1681               	andwf	3969,f,c	;volatile
  6154  00168A  5005               	movf	i1SetDDRamAddr@DDaddr,w,c
  6155  00168C  6E02               	movwf	??i1_SetDDRamAddr& (0+255),c
  6156  00168E  6A03               	clrf	(??i1_SetDDRamAddr+1)& (0+255),c
  6157  001690  8E02               	bsf	??i1_SetDDRamAddr,7,c
  6158  001692  0E04               	movlw	4
  6159  001694  6E04               	movwf	(??i1_SetDDRamAddr+2)& (0+255),c
  6160  001696                     i1u185_25:
  6161  001696  3403               	rlcf	??i1_SetDDRamAddr+1,w,c
  6162  001698  3203               	rrcf	??i1_SetDDRamAddr+1,f,c
  6163  00169A  3202               	rrcf	??i1_SetDDRamAddr,f,c
  6164  00169C  2E04               	decfsz	(??i1_SetDDRamAddr+2)& (0+255),f,c
  6165  00169E  D7FB               	goto	i1u185_25
  6166  0016A0  5002               	movf	??i1_SetDDRamAddr,w,c
  6167  0016A2  0B0F               	andlw	15
  6168  0016A4  1281               	iorwf	3969,f,c	;volatile
  6169  0016A6  9C8A               	bcf	3978,6,c	;volatile
  6170  0016A8  9A8A               	bcf	3978,5,c	;volatile
  6171  0016AA  EC24  F00D         	call	i1_DelayFor18TCY	;wreg free
  6172  0016AE  888A               	bsf	3978,4,c	;volatile
  6173  0016B0  EC24  F00D         	call	i1_DelayFor18TCY	;wreg free
  6174  0016B4  988A               	bcf	3978,4,c	;volatile
  6175  0016B6  0EF0               	movlw	240
  6176  0016B8  1681               	andwf	3969,f,c	;volatile
  6177  0016BA  5005               	movf	i1SetDDRamAddr@DDaddr,w,c
  6178  0016BC  0B0F               	andlw	15
  6179  0016BE  1281               	iorwf	3969,f,c	;volatile
  6180  0016C0  EC24  F00D         	call	i1_DelayFor18TCY	;wreg free
  6181  0016C4  888A               	bsf	3978,4,c	;volatile
  6182  0016C6  EC24  F00D         	call	i1_DelayFor18TCY	;wreg free
  6183  0016CA  988A               	bcf	3978,4,c	;volatile
  6184  0016CC  0E0F               	movlw	15
  6185  0016CE  1293               	iorwf	3987,f,c	;volatile
  6186  0016D0  0012               	return	
  6187  0016D2                     __end_ofi1_SetDDRamAddr:
  6188                           	opt stack 0
  6189                           pclatu	equ	0xFFB
  6190                           pclath	equ	0xFFA
  6191                           tblptru	equ	0xFF8
  6192                           tblptrh	equ	0xFF7
  6193                           tblptrl	equ	0xFF6
  6194                           tablat	equ	0xFF5
  6195                           prodh	equ	0xFF4
  6196                           prodl	equ	0xFF3
  6197                           intcon	equ	0xFF2
  6198                           postinc0	equ	0xFEE
  6199                           fsr0h	equ	0xFEA
  6200                           fsr0l	equ	0xFE9
  6201                           wreg	equ	0xFE8
  6202                           indf1	equ	0xFE7
  6203                           postdec1	equ	0xFE5
  6204                           fsr1h	equ	0xFE2
  6205                           fsr1l	equ	0xFE1
  6206                           bsr	equ	0xFE0
  6207                           indf2	equ	0xFDF
  6208                           postinc2	equ	0xFDE
  6209                           postdec2	equ	0xFDD
  6210                           fsr2h	equ	0xFDA
  6211                           fsr2l	equ	0xFD9
  6212                           status	equ	0xFD8
  6213                           
  6214 ;; *************** function i1_DelayFor18TCY *****************
  6215 ;; Defined at:
  6216 ;;		line 74 in file "main.c"
  6217 ;; Parameters:    Size  Location     Type
  6218 ;;		None
  6219 ;; Auto vars:     Size  Location     Type
  6220 ;;		None
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  1    wreg      void 
  6223 ;; Registers used:
  6224 ;;		wreg, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6230 ;;      Params:         0       0       0       0       0       0       0       0       0
  6231 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6233 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6234 ;;Total ram usage:        0 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    1
  6237 ;; This function calls:
  6238 ;;		i1_Delay10TCYx
  6239 ;; This function is called by:
  6240 ;;		i1_SetDDRamAddr
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text40
  6245  001A48                     __ptext40:
  6246                           	opt stack 0
  6247  001A48                     i1_DelayFor18TCY:
  6248                           	opt stack 20
  6249                           
  6250                           ;main.c: 75: Delay10TCYx(120);
  6251                           
  6252                           ;incstack = 0
  6253  001A48  0E78               	movlw	120
  6254  001A4A  EC0C  F00D         	call	i1_Delay10TCYx
  6255  001A4E  0012               	return		;funcret
  6256  001A50                     __end_ofi1_DelayFor18TCY:
  6257                           	opt stack 0
  6258                           pclatu	equ	0xFFB
  6259                           pclath	equ	0xFFA
  6260                           tblptru	equ	0xFF8
  6261                           tblptrh	equ	0xFF7
  6262                           tblptrl	equ	0xFF6
  6263                           tablat	equ	0xFF5
  6264                           prodh	equ	0xFF4
  6265                           prodl	equ	0xFF3
  6266                           intcon	equ	0xFF2
  6267                           postinc0	equ	0xFEE
  6268                           fsr0h	equ	0xFEA
  6269                           fsr0l	equ	0xFE9
  6270                           wreg	equ	0xFE8
  6271                           indf1	equ	0xFE7
  6272                           postdec1	equ	0xFE5
  6273                           fsr1h	equ	0xFE2
  6274                           fsr1l	equ	0xFE1
  6275                           bsr	equ	0xFE0
  6276                           indf2	equ	0xFDF
  6277                           postinc2	equ	0xFDE
  6278                           postdec2	equ	0xFDD
  6279                           fsr2h	equ	0xFDA
  6280                           fsr2l	equ	0xFD9
  6281                           status	equ	0xFD8
  6282                           
  6283 ;; *************** function i1_Delay10TCYx *****************
  6284 ;; Defined at:
  6285 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\pic18\d10tcyx.c"
  6286 ;; Parameters:    Size  Location     Type
  6287 ;;  unit            1    wreg     unsigned char 
  6288 ;; Auto vars:     Size  Location     Type
  6289 ;;  unit            1    0[COMRAM] unsigned char 
  6290 ;; Return value:  Size  Location     Type
  6291 ;;                  1    wreg      void 
  6292 ;; Registers used:
  6293 ;;		wreg
  6294 ;; Tracked objects:
  6295 ;;		On entry : 0/0
  6296 ;;		On exit  : 0/0
  6297 ;;		Unchanged: 0/0
  6298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6299 ;;      Params:         0       0       0       0       0       0       0       0       0
  6300 ;;      Locals:         1       0       0       0       0       0       0       0       0
  6301 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6302 ;;      Totals:         1       0       0       0       0       0       0       0       0
  6303 ;;Total ram usage:        1 bytes
  6304 ;; Hardware stack levels used:    1
  6305 ;; This function calls:
  6306 ;;		Nothing
  6307 ;; This function is called by:
  6308 ;;		i1_DelayFor18TCY
  6309 ;; This function uses a non-reentrant model
  6310 ;;
  6311                           
  6312                           	psect	text41
  6313  001A18                     __ptext41:
  6314                           	opt stack 0
  6315  001A18                     i1_Delay10TCYx:
  6316                           	opt stack 20
  6317                           
  6318                           ;incstack = 0
  6319                           ;i1Delay10TCYx@unit stored from wreg
  6320  001A18  6E01               	movwf	i1Delay10TCYx@unit,c
  6321  001A1A  0E03               	movlw	3
  6322  001A1C                     i1u323_27:
  6323  001A1C  2EE8               	decfsz	wreg,f,c
  6324  001A1E  D7FE               	bra	i1u323_27
  6325  001A20  F000               	nop	
  6326  001A22  2E01               	decfsz	i1Delay10TCYx@unit,f,c
  6327  001A24  D7FA               	goto	i1l2297
  6328  001A26  0012               	return	
  6329  001A28                     __end_ofi1_Delay10TCYx:
  6330                           	opt stack 0
  6331                           pclatu	equ	0xFFB
  6332                           pclath	equ	0xFFA
  6333                           tblptru	equ	0xFF8
  6334                           tblptrh	equ	0xFF7
  6335                           tblptrl	equ	0xFF6
  6336                           tablat	equ	0xFF5
  6337                           prodh	equ	0xFF4
  6338                           prodl	equ	0xFF3
  6339                           intcon	equ	0xFF2
  6340                           postinc0	equ	0xFEE
  6341                           fsr0h	equ	0xFEA
  6342                           fsr0l	equ	0xFE9
  6343                           wreg	equ	0xFE8
  6344                           indf1	equ	0xFE7
  6345                           postdec1	equ	0xFE5
  6346                           fsr1h	equ	0xFE2
  6347                           fsr1l	equ	0xFE1
  6348                           bsr	equ	0xFE0
  6349                           indf2	equ	0xFDF
  6350                           postinc2	equ	0xFDE
  6351                           postdec2	equ	0xFDD
  6352                           fsr2h	equ	0xFDA
  6353                           fsr2l	equ	0xFD9
  6354                           status	equ	0xFD8
  6355                           pclatu	equ	0xFFB
  6356                           pclath	equ	0xFFA
  6357                           tblptru	equ	0xFF8
  6358                           tblptrh	equ	0xFF7
  6359                           tblptrl	equ	0xFF6
  6360                           tablat	equ	0xFF5
  6361                           prodh	equ	0xFF4
  6362                           prodl	equ	0xFF3
  6363                           intcon	equ	0xFF2
  6364                           postinc0	equ	0xFEE
  6365                           fsr0h	equ	0xFEA
  6366                           fsr0l	equ	0xFE9
  6367                           wreg	equ	0xFE8
  6368                           indf1	equ	0xFE7
  6369                           postdec1	equ	0xFE5
  6370                           fsr1h	equ	0xFE2
  6371                           fsr1l	equ	0xFE1
  6372                           bsr	equ	0xFE0
  6373                           indf2	equ	0xFDF
  6374                           postinc2	equ	0xFDE
  6375                           postdec2	equ	0xFDD
  6376                           fsr2h	equ	0xFDA
  6377                           fsr2l	equ	0xFD9
  6378                           status	equ	0xFD8
  6379                           
  6380                           	psect	rparam
  6381  0000                     pclatu	equ	0xFFB
  6382                           pclath	equ	0xFFA
  6383                           tblptru	equ	0xFF8
  6384                           tblptrh	equ	0xFF7
  6385                           tblptrl	equ	0xFF6
  6386                           tablat	equ	0xFF5
  6387                           prodh	equ	0xFF4
  6388                           prodl	equ	0xFF3
  6389                           intcon	equ	0xFF2
  6390                           postinc0	equ	0xFEE
  6391                           fsr0h	equ	0xFEA
  6392                           fsr0l	equ	0xFE9
  6393                           wreg	equ	0xFE8
  6394                           indf1	equ	0xFE7
  6395                           postdec1	equ	0xFE5
  6396                           fsr1h	equ	0xFE2
  6397                           fsr1l	equ	0xFE1
  6398                           bsr	equ	0xFE0
  6399                           indf2	equ	0xFDF
  6400                           postinc2	equ	0xFDE
  6401                           postdec2	equ	0xFDD
  6402                           fsr2h	equ	0xFDA
  6403                           fsr2l	equ	0xFD9
  6404                           status	equ	0xFD8
  6405                           
  6406                           	psect	temp
  6407  000049                     btemp:
  6408                           	opt stack 0
  6409  000049                     	ds	1
  6410  0000                     int$flags	set	btemp
  6411                           pclatu	equ	0xFFB
  6412                           pclath	equ	0xFFA
  6413                           tblptru	equ	0xFF8
  6414                           tblptrh	equ	0xFF7
  6415                           tblptrl	equ	0xFF6
  6416                           tablat	equ	0xFF5
  6417                           prodh	equ	0xFF4
  6418                           prodl	equ	0xFF3
  6419                           intcon	equ	0xFF2
  6420                           postinc0	equ	0xFEE
  6421                           fsr0h	equ	0xFEA
  6422                           fsr0l	equ	0xFE9
  6423                           wreg	equ	0xFE8
  6424                           indf1	equ	0xFE7
  6425                           postdec1	equ	0xFE5
  6426                           fsr1h	equ	0xFE2
  6427                           fsr1l	equ	0xFE1
  6428                           bsr	equ	0xFE0
  6429                           indf2	equ	0xFDF
  6430                           postinc2	equ	0xFDE
  6431                           postdec2	equ	0xFDD
  6432                           fsr2h	equ	0xFDA
  6433                           fsr2l	equ	0xFD9
  6434                           status	equ	0xFD8


Data Sizes:
    Strings     90
    Constant    10
    Data        19
    BSS         60
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      72
    BANK0           160     22      75
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@d1	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), 

    memcpy@s1	PTR const void  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 7
		 -> BUFFCOM(COMRAM[7]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 3
		 -> pegaHoraData(COMRAM[3]), 

    putrsXLCD@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_11(CODE[7]), STR_9(CODE[6]), STR_8(CODE[17]), STR_6(CODE[7]), 
		 -> vet(BANK0[8]), STR_4(CODE[7]), versao(BANK0[6]), STR_3(CODE[9]), 
		 -> STR_2(CODE[17]), converteAnoString@anoStr(BANK0[4]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_10(CODE[10]), STR_7(CODE[11]), STR_5(CODE[15]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 8
		 -> vet(BANK0[8]), converteAnoString@anoStr(BANK0[4]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sp__memcpy	PTR void  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), 

    crc16@data_p	PTR unsigned char  size(2) Largest target is 7
		 -> BUFFRESP(BANK0[7]), BUFFCOM(COMRAM[7]), 

    sp__converteAnoString	PTR unsigned char  size(2) Largest target is 4
		 -> converteAnoString@anoStr(BANK0[4]), 


Critical Paths under _main in COMRAM

    _trata_relogio_data->_verificaAnoBissexto
    _verificaAnoBissexto->___awmod
    _atualiza_Tela->_putrsXLCD
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _maquinaEstado->_verificaCRCBUFFCOM
    _verificaCRCBUFFCOM->_crc16
    _trataComando->_memcpy
    _printaDisplay->_SetDDRamAddr
    _memcpy->_strlen
    _calculaCRCBUFFRESP->_crc16
    _atoi->___wmul
    _init_XLCD->_OpenXLCD
    _OpenXLCD->_SetDDRamAddr
    _DelayPORXLCD->_Delay1KTCYx
    _DelayFor18TCY->_Delay10TCYx

Critical Paths under _pic_isr in COMRAM

    i1_printaDisplay->i1_SetDDRamAddr
    i1_DelayFor18TCY->i1_Delay10TCYx

Critical Paths under _main in BANK0

    _main->_atualiza_Tela
    _setaDespertador->_atualiza_Tela
    _atualiza_Tela->_converteAnoString
    _putrsXLCD->_converteAnoString
    _converteAnoString->_sprintf

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   20688
                                             21 BANK0      1     1      0
                       _Delay10KTCYx
                      _atualiza_Tela
                          _init_XLCD
                      _maquinaEstado
                    _setaDespertador
                 _trata_relogio_data
 ---------------------------------------------------------------------------------
 (1) _trata_relogio_data                                   5     5      0    1835
                                             32 COMRAM     5     5      0
                _verificaAnoBissexto
 ---------------------------------------------------------------------------------
 (2) _verificaAnoBissexto                                  4     2      2    1835
                                             28 COMRAM     4     2      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setaDespertador                                      0     0      0    5654
                       _Delay10KTCYx
                      _atualiza_Tela
 ---------------------------------------------------------------------------------
 (2) _atualiza_Tela                                        1     1      0    5623
                                             20 BANK0      1     1      0
                       _SetDDRamAddr
                  _acionaDespertador
                  _converteAnoString
                          _putrsXLCD
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _putrsXLCD                                            2     0      2    1113
                                             44 COMRAM     2     0      2
                           _BusyXLCD
                      _WriteDataXLCD
                  _converteAnoString (ARG)
 ---------------------------------------------------------------------------------
 (4) _WriteDataXLCD                                        1     1      0      93
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _converteAnoString                                    6     4      2    2293
                                             42 COMRAM     2     0      2
                                             16 BANK0      4     4      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             33    17     16    2093
                                             34 COMRAM     8     8      0
                                              0 BANK0     16     0     16
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                             29 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     395
                                             22 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _acionaDespertador                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0    7043
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   9     9      0     945
                                             35 COMRAM     9     9      0
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      99
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         0     0      0    5937
                            ___awdiv
                            ___awmod
                               _atoi
                 _calculaCRCBUFFRESP
                             _memcpy
                      _printaDisplay
                             _strlen
 ---------------------------------------------------------------------------------
 (3) _strlen                                               6     4      2     207
                                             22 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _printaDisplay                                        0     0      0      93
                       _SetDDRamAddr
 ---------------------------------------------------------------------------------
 (3) _memcpy                                              10     4      6     405
                                             28 COMRAM    10     4      6
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   2     2      0     840
                                             35 COMRAM     2     2      0
                              _crc16
 ---------------------------------------------------------------------------------
 (3) _crc16                                               13     9      4     775
                                             22 COMRAM    13     9      4
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 7     5      2    1358
                                             28 COMRAM     7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             22 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1665
                                             22 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1369
                                             22 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      62
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_XLCD                                            0     0      0     434
                           _BusyXLCD
                           _OpenXLCD
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _OpenXLCD                                             1     1      0     310
                                             27 COMRAM     1     1      0
                           _BusyXLCD
                       _Delay10KTCYx
                       _DelayPORXLCD
                       _SetDDRamAddr
                       _WriteCmdXLCD
 ---------------------------------------------------------------------------------
 (2) _WriteCmdXLCD                                         1     1      0      93
                                             23 COMRAM     1     1      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _SetDDRamAddr                                         4     4      0      93
                                             23 COMRAM     4     4      0
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (3) _DelayPORXLCD                                         0     0      0      31
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (4) _Delay1KTCYx                                          1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Delay10KTCYx                                         2     2      0      31
                                             22 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (4) _BusyXLCD                                             0     0      0      31
                      _DelayFor18TCY
 ---------------------------------------------------------------------------------
 (5) _DelayFor18TCY                                        0     0      0      31
                        _Delay10TCYx
 ---------------------------------------------------------------------------------
 (6) _Delay10TCYx                                          1     1      0      31
                                             22 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _pic_isr                                             17    17      0      66
                                              5 COMRAM    17    17      0
                    i1_printaDisplay
 ---------------------------------------------------------------------------------
 (8) i1_printaDisplay                                      0     0      0      66
                     i1_SetDDRamAddr
 ---------------------------------------------------------------------------------
 (9) i1_SetDDRamAddr                                       4     4      0      66
                                              1 COMRAM     4     4      0
                    i1_DelayFor18TCY
 ---------------------------------------------------------------------------------
 (10) i1_DelayFor18TCY                                     0     0      0      22
                      i1_Delay10TCYx
 ---------------------------------------------------------------------------------
 (11) i1_Delay10TCYx                                       1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Delay10KTCYx
   _atualiza_Tela
     _SetDDRamAddr
       _DelayFor18TCY
         _Delay10TCYx
     _acionaDespertador
     _converteAnoString
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putrsXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _WriteDataXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _converteAnoString (ARG)
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _init_XLCD
     _BusyXLCD
       _DelayFor18TCY
         _Delay10TCYx
     _OpenXLCD
       _BusyXLCD
         _DelayFor18TCY
           _Delay10TCYx
       _Delay10KTCYx
       _DelayPORXLCD
         _Delay1KTCYx
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _WriteCmdXLCD
         _DelayFor18TCY
           _Delay10TCYx
     _WriteCmdXLCD
       _DelayFor18TCY
         _Delay10TCYx
   _maquinaEstado
     _enviaByte
     _trataComando
       ___awdiv
       ___awmod
       _atoi
         ___wmul
         _isdigit
       _calculaCRCBUFFRESP
         _crc16
       _memcpy
         _strlen (ARG)
       _printaDisplay
         _SetDDRamAddr
           _DelayFor18TCY
             _Delay10TCYx
       _strlen
     _tx_data
     _verificaCRCBUFFCOM
       _crc16
   _setaDespertador
     _Delay10KTCYx
     _atualiza_Tela
       _SetDDRamAddr
         _DelayFor18TCY
           _Delay10TCYx
       _acionaDespertador
       _converteAnoString
         _sprintf
           ___lwdiv
           ___lwmod
             ___lwdiv (ARG)
       _putrsXLCD
         _BusyXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _WriteDataXLCD
           _DelayFor18TCY
             _Delay10TCYx
         _converteAnoString (ARG)
           _sprintf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
   _trata_relogio_data
     _verificaAnoBissexto
       ___awmod

 _pic_isr (ROOT)
   i1_printaDisplay
     i1_SetDDRamAddr
       i1_DelayFor18TCY
         i1_Delay10TCYx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     16      4B       5       46.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      48       1       76.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      93      20        0.0%
DATA                 0      0      93       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 13 17:38:19 2018

            ??i1_SetDDRamAddr 0002                             _i 003C             i1Delay10TCYx@unit 0001  
                ___awdiv@sign 001C                            bsr 000FE0           ___wmul@multiplicand 0019  
                         l210 18A2                           l204 110A                           l230 0872  
                         l312 1876                           l216 1996                           l232 087C  
                         l233 08C8                           l234 0908                           l228 0868  
                         l575 1222                           l846 1624                           l856 1750  
                         _vet 0074         __size_of_WriteCmdXLCD 003E                  ___awmod@sign 001C  
                         prod 000FF3                           wreg 000FE8                  __CFG_WDT$OFF 000000  
                        l3111 0D40                          l3025 1A0A                          l3201 10A2  
                        l3041 15FE                          l3121 0D68                          l3105 0D14  
                        l3211 10C4                          l3123 0D6C                          l3037 15F2  
                        l3061 1732                          l3141 0DB6                          l3215 1104  
                        l3207 10BC                          l3039 15FA                          l3143 0DBC  
                        l3135 0D98                          l3151 0E18                          l3049 161A  
                        l3065 1746                          l3057 1726                          l3153 0E32  
                        l3331 19D2                          l3411 13A8                          l3219 1114  
                        l3059 172E                          l3323 152A                          l3069 19FA  
                        l3413 13B0                          l3405 1392                          l3149 0E10  
                        l3431 13E8                          l3423 13D0                          l3415 13B4  
                        l3361 11B6                          l3345 1160                          l3329 155C  
                        l3523 1264                          l3427 13DA                          l3451 1420  
                        l3443 1406                          l3363 11EC                          l3347 1164  
                        l3099 0CF8                          l3541 12AE                          l3533 128E  
                        l3525 126E                          l3453 1428                          l3269 198C  
                        l3365 11F0                          l3357 11A4                          l3373 1820  
                        l3613 1892                          l3455 142C                          l3463 144A  
                        l3447 1412                          l3383 176C                          l3375 1824  
                        l3623 18BC                          l3711 14BA                          l3545 12BE  
                        l3537 129E                          l3529 127E                          l3633 19AC  
                        l3609 0CD8                          l3481 1500                          l3467 1458  
                        l3459 1440                          l3715 14C6                          l3389 1788  
                        l3661 093C                          l3565 0B5E                          l3821 1318  
                        l3813 12FA                          l3493 1524                          l3399 1382  
                        l3559 0B2C                          l3823 1320                          l3751 0EA2  
                        l3673 0994                          l3665 0942                          l3825 1326  
                        l3489 1520                          l3683 0A26                          l3675 09A6  
                        l3667 095E                          l3851 16D4                          l3595 0C5E  
                        l3843 1356                          l3819 1310                          l3915 1030  
                        l3685 0A88                          l3693 0AFE                          l3853 16DA  
                        l3845 135E                          l3837 1340                          l3781 0F2E  
                        l3925 1056                          l3695 0B0C                          l3855 16E0  
                        l3863 16F6                          l3847 1366                          l3791 0F68  
                        l3767 0EDA                          l3927 1060                          l3689 0AE2  
                        l3857 16E6                          l3937 107E                          l3929 106A  
                        l3795 19B8                          l3859 16EE   __end_of_verificaAnoBissexto 1528  
                        STR_1 0839                          STR_2 081C                          STR_3 0847  
                        STR_4 0857                          STR_5 082D                          STR_6 085E  
                        STR_7 083C                          STR_8 080B                          STR_9 0851  
                        u2245 1644                          u3207 19FC                          u3217 19D8  
                        u3227 1A0C                          u2470 1554                          u2480 157C  
                        u2477 154A                          u2487 1572                          _PEIE 007F96  
                        _RCIE 007CED                          _RCIF 007CF5                          _RCIP 007CFD  
                        _TMR0 000FD6               i1_printaDisplay 1A40                          _TXIF 007CF4  
                        _atoi 115E                          _cont 003A                          _main 0F70  
                        fsr0h 000FEA                          fsr1h 000FE2                          fsr2h 000FDA  
                        fsr0l 000FE9                          indf1 000FE7                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0049  
      __size_of_WriteDataXLCD 003E                          prodh 000FF4                          prodl 000FF3  
                        start 00F6        verificaCRCBUFFCOM@crc1 0026        verificaCRCBUFFCOM@crc2 0028  
                ___param_bank 000000                 _atualiza_Tela 0B12                   _Delay10TCYx 1A08  
       _flagDespertadorLigado 0039                  _WriteCmdXLCD 17D8                   _Delay1KTCYx 19F8  
                       ?_atoi 001D                 ?_SetDDRamAddr 0001                         ?_main 0001  
             __end_of___awdiv 13F2                         STR_10 0832                         STR_11 0850  
          _verificaCRCBUFFCOM 1462               __end_of___awmod 1462               ??_printaDisplay 001C  
             ___awdiv@divisor 0019               __end_of___lwdiv 162E                         i1l130 00AE  
                       i1l124 0072                         i1l126 0080               __end_of___lwmod 175A  
             ___awdiv@counter 001B                         _RCREG 000FAE                         _RCSTA 000FAB  
                       _SPBRG 000FAF                         _PORTB 000F81                         _TRISB 000F93  
                       _TRISD 000F95                         _TXREG 000FAD         __size_of_Delay10KTCYx 0016  
                       _TXSTA 000FAC                         _crc16 108C           ?_verificaCRCBUFFCOM 0001  
             __end_of_dpowers 080B               __end_of_isdigit 1994               __end_of_pic_isr 00F6  
                       atoi@a 0022                         atoi@s 001D                         pclath 000FFA  
                       tablat 000FF5               __end_of_tx_data 18C2                         status 000FD8  
             __end_of_sprintf 0E40             ??_setaDespertador 002F               __initialization 1584  
              ?_atualiza_Tela 0001          ??_verificaCRCBUFFCOM 0024                  __end_of_atoi 122C  
                __end_of_main 108C         __end_ofi1_Delay10TCYx 1A28              __end_of_BusyXLCD 188A  
                _Delay10KTCYx 19D0         __size_of_DelayPORXLCD 0008                ??_SetDDRamAddr 0018  
  __end_of_trata_relogio_data 0F70              __end_of_OpenXLCD 12D0    __end_of_calculaCRCBUFFRESP 1950  
                      ??_atoi 001F                        ??_main 002F                 __activetblptr 000002  
               _WriteDataXLCD 179A      __size_ofi1_DelayFor18TCY 0008       __end_ofi1_printaDisplay 1A48  
            _tempoDespertador 0036                        ?_crc16 0017                        _ADCON1 000FC1  
            ___awdiv@dividend 0017                        i1l2297 1A1A                        i1l2935 007C  
                      _TMR0IF 007F92                  _DelayPORXLCD 1A30                        ___wmul 1950  
                   ??___awdiv 001B                        crc16@i 001F                     ??___awmod 001B  
      __size_of_maquinaEstado 0046                     ??___lwdiv 001B                     ??___lwmod 0022  
                      _estado 003D                        _memcpy 175A                        clear_0 15BC  
                      clear_1 15C8              ___awdiv@quotient 001D               ___awmod@divisor 0019  
             ___awmod@counter 001B                        _versao 00A5                ?_WriteDataXLCD 0001  
                      _strlen 1816     atualiza_Tela@troca_ou_nao 0097                  __pdataCOMRAM 0048  
                   ??_isdigit 0017                     ??_pic_isr 0006                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
           _converteAnoString 18F6                     ??_tx_data 0017                     ??_sprintf 0023  
    verificaCRCBUFFCOM@CRC_OK 002A            ?_converteAnoString 002B                    __accesstop 0060  
     __end_of__initialization 15CE               __CFG_PBADEN$OFF 000000                 ___rparam_used 000001  
             ??_atualiza_Tela 002F         calculaCRCBUFFRESP@crc 0024           ??_converteAnoString 002D  
              __pcstackCOMRAM 0001                  __pidataBANK0 19E6                 __end_of_crc16 115E  
                _data_horario 0060          i1SetDDRamAddr@DDaddr 0005     __end_of_converteAnoString 1924  
            ?i1_printaDisplay 0001                       ??_crc16 001B                 _maquinaEstado 16D2  
      __size_of_DelayFor18TCY 0008             ??i1_DelayFor18TCY 0002                    __pbssBANK0 0060  
          __size_of_enviaByte 001E                     ?_BusyXLCD 0001               WriteCmdXLCD@cmd 0018  
        __end_of_SetDDRamAddr 1680            __size_of_init_XLCD 001E                     ?_OpenXLCD 0001  
           WriteDataXLCD@data 0018                  ?_Delay10TCYx 0001                       ?___wmul 0017  
             ??_WriteDataXLCD 0018                  ?_Delay1KTCYx 0001                       ?_memcpy 001D  
      verificaAnoBissexto@ano 001D                       _BUFFCOM 003E                       ?_strlen 0017  
        converteAnoString@ano 002B                ?_maquinaEstado 0001               _setaDespertador 12D0  
          __size_of_putrsXLCD 005C                    ??_BusyXLCD 0018                    ??_OpenXLCD 001C  
__size_of_verificaAnoBissexto 005C                       __Hparam 0000                       __Lparam 0000  
                     ___awdiv 136E                 _DelayFor18TCY 1A38                       ___awmod 13F2  
             __size_of___wmul 0026                       ___lwdiv 15DC                       ___lwmod 1718  
                __psmallconst 0800             __end_of_enviaByte 19B2                       __pcinit 1584  
             __size_of_memcpy 0040               putrsXLCD@buffer 002D               Delay10TCYx@unit 0017  
                     __ramtop 0800                       __ptext0 0F70                       __ptext1 0E40  
                     __ptext2 14CC                       __ptext3 12D0                       __ptext4 0B12  
                     __ptext5 1528                       __ptext6 179A                       __ptext7 18F6  
                     __ptext8 0CEE                       __ptext9 1718             __end_of_init_XLCD 19D0  
                   _T0CONbits 000FD5               __size_of_strlen 003A                       _dpowers 0801  
                     _isdigit 1976                       _pic_isr 0018         __end_of_printaDisplay 1A30  
  __size_of_converteAnoString 002E              ___awmod@dividend 0017       __size_ofi1_SetDDRamAddr 0052  
                     _tx_data 188A                       _sprintf 0CEE          end_of_initialization 15CE  
          _trata_relogio_data 0E40            _calculaCRCBUFFRESP 1924                       memcpy@d 0023  
                     memcpy@n 0021                       memcpy@s 0025                 __Lmediumconst 0000  
                  _tela_atual 0035           ?_trata_relogio_data 0001           ?_calculaCRCBUFFRESP 0001  
               enviaByte@BYTE 0017                ?_DelayFor18TCY 0001   __size_of_verificaCRCBUFFCOM 006A  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                       strlen@s 0017             __end_of_putrsXLCD 1584  
                   _PORTCbits 000F82                     _PORTDbits 000F83          ??_trata_relogio_data 0021  
        ??_calculaCRCBUFFRESP 0024       __end_of_setaDespertador 136E               ??_maquinaEstado 002D  
                   _TRISBbits 000F93                     _TRISCbits 000F94         __size_of_SetDDRamAddr 0052  
      __size_ofi1_Delay10TCYx 0010                 ?_trataComando 0001         verificaCRCBUFFCOM@crc 002B  
              __end_of___wmul 1976          __size_of_Delay10TCYx 0010                 __pidataCOMRAM 1A50  
              __end_of_memcpy 179A                  _SetDDRamAddr 162E               i1_DelayFor18TCY 1A48  
          _horarioDespertador 002F          __size_of_Delay1KTCYx 0010            SetDDRamAddr@DDaddr 001B  
              __end_of_strlen 1850           start_initialization 1584                ??_trataComando 0027  
           __size_of_BusyXLCD 003A                  _pegaHoraData 0045               ??_DelayFor18TCY 0018  
       __end_of_atualiza_Tela 0CEE             __size_of_OpenXLCD 00A4                      ??___wmul 001B  
               ?_WriteCmdXLCD 0001                   tx_data@cont 0017                 i1_Delay10TCYx 1A18  
                 __pdataBANK0 0099                      ??_memcpy 0023                   crc16@data_p 0017  
                    ??_strlen 0019                   crc16@length 0019              ?_setaDespertador 0001  
              i1_SetDDRamAddr 1680                   __pbssCOMRAM 002F           _verificaAnoBissexto 14CC  
               __pcstackBANK0 0083                  _isdigit$1102 0018               Delay1KTCYx@unit 0017  
                 sprintf@flag 0026      __size_ofi1_printaDisplay 0008                   sprintf@prec 0027  
                   crc16@data 0020          ?_verificaAnoBissexto 001D              ___lwdiv@dividend 0017  
     __end_ofi1_DelayFor18TCY 1A50                ??_WriteCmdXLCD 0018                ?i1_Delay10TCYx 0001  
                    ?___awdiv 0017                      ?___awmod 0017                 ?_Delay10KTCYx 0001  
                    ?___lwdiv 0017                      ?___lwmod 001E                   __pintcodelo 0018  
                   _botaoHora 0038                   _flagSegundo 003B         __end_of_WriteDataXLCD 17D8  
      __end_ofi1_SetDDRamAddr 16D2                   __smallconst 0800                      ?_isdigit 0001  
                   _enviaByte 1994                      ?_pic_isr 0001                     _init_XLCD 19B2  
              __size_of_crc16 00D2              ___lwdiv@quotient 001C                      ?_tx_data 0001  
                    ?_sprintf 0083                      _BUFFRESP 007C             _acionaDespertador 18C2  
          ?_acionaDespertador 0001                ___wmul@product 001B                      _LATBbits 000F8A  
       ??_verificaAnoBissexto 001F                 ?_DelayPORXLCD 0001                      i1u323_27 1A1C  
                    i1u185_25 1696                      _PIR1bits 000F9E               OpenXLCD@lcdtype 001C  
         ??_acionaDespertador 0017                ??_Delay10KTCYx 0017             ___wmul@multiplier 0017  
             ?i1_SetDDRamAddr 0001          __end_of_trataComando 0B12                     main@botao 0098  
                  ?_enviaByte 0001                     _putrsXLCD 1528              Delay10KTCYx@unit 0018  
                  ?_init_XLCD 0001     __end_of_acionaDespertador 18F6                     copy_data0 1598  
                    _BusyXLCD 1850                ??_DelayPORXLCD 0018                      _OpenXLCD 122C  
  __end_of_verificaCRCBUFFCOM 14CC                      __Hrparam 0000               ??i1_Delay10TCYx 0001  
                    __Lrparam 0000        __size_of_printaDisplay 0008             ??i1_printaDisplay 0006  
            ?i1_DelayFor18TCY 0001              __size_of___awdiv 0084              __size_of___awmod 0070  
            __size_of___lwdiv 0052              __size_of___lwmod 0042                    sprintf@val 0028  
                  ?_putrsXLCD 002D                      crc16@crc 0022   __size_of_trata_relogio_data 0130  
 __size_of_calculaCRCBUFFRESP 002C              __size_of_isdigit 001E              __size_of_pic_isr 00DE  
                    _dias_mes 0099               ___lwdiv@divisor 0019               ___lwdiv@counter 001B  
       __end_of_maquinaEstado 1718                      __ptext10 15DC                      __ptext11 18C2  
                    __ptext20 108C                      __ptext12 16D2                      __ptext21 115E  
                    __ptext13 1462                      __ptext30 162E                      __ptext22 1976  
                    __ptext14 188A                      __ptext31 1A30                      __ptext23 1950  
                    __ptext15 0866                      __ptext40 1A48                      __ptext32 19F8  
                    __ptext24 13F2                      __ptext16 1816                      __ptext41 1A18  
                    __ptext33 19D0                      __ptext25 136E                      __ptext17 1A28  
                    __ptext34 1850                      __ptext26 1994                      __ptext18 175A  
                    __ptext35 1A38                      __ptext27 19B2                      __ptext19 1924  
                    __ptext36 1A08                      __ptext28 122C                      __ptext29 17D8  
                    __ptext38 1A40                      __ptext39 1680                      _botaoMin 0037  
        __end_of_WriteCmdXLCD 1816              __size_of_tx_data 0038              __size_of_sprintf 0152  
               __size_of_atoi 00CE                 __size_of_main 011C       converteAnoString@anoStr 0093  
               ??_Delay10TCYx 0017                      int$flags 0049                      atoi@sign 0021  
               ??_Delay1KTCYx 0017                      _virouDia 0048                   ??_enviaByte 0017  
                  _INTCONbits 000FF2                      memcpy@d1 001D                      memcpy@s1 001F  
               _printaDisplay 1A28                   ??_init_XLCD 001D    __size_of_acionaDespertador 0034  
                    isdigit@c 0019          __end_of_Delay10KTCYx 19E6                      intlevel1 0000  
                   sprintf@ap 0024                     sprintf@sp 0083              ___lwmod@dividend 001E  
       __end_of_DelayFor18TCY 1A40         __size_of_trataComando 02AC           __end_of_Delay10TCYx 1A18  
                    sprintf@c 002A                      sprintf@f 0085          __end_of_DelayPORXLCD 1A38  
                 ??_putrsXLCD 002F               ___lwmod@divisor 0020                      strlen@cp 001B  
              ?_printaDisplay 0001           __end_of_Delay1KTCYx 1A08               ___lwmod@counter 0022  
      __size_of_atualiza_Tela 01DC      __size_of_setaDespertador 009E                  _trataComando 0866  
