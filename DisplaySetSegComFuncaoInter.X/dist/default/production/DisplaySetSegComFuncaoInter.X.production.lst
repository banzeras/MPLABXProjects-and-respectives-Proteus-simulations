

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 29 15:35:15 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.41
    16                           ; Generated 25/01/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	smallconst
    51  000800                     __psmallconst:
    52                           	opt stack 0
    53  000800  00                 	db	0
    54  000801                     _display:
    55                           	opt stack 0
    56  000801  3F                 	db	63
    57  000802  06                 	db	6
    58  000803  5B                 	db	91
    59  000804  4F                 	db	79
    60  000805  66                 	db	102
    61  000806  6D                 	db	109
    62  000807  7D                 	db	125
    63  000808  07                 	db	7
    64  000809  7F                 	db	127
    65  00080A  6F                 	db	111
    66  00080B                     __end_of_display:
    67                           	opt stack 0
    68  0000                     _TMR0	set	4054
    69  0000                     _T0CONbits	set	4053
    70  0000                     _TRISB	set	3987
    71  0000                     _ADCON1	set	4033
    72  0000                     _INTCONbits	set	4082
    73  0000                     _PORTB	set	3969
    74  0000                     _TMR0IF	set	32658
    75                           
    76                           ; #config settings
    77  00080B  00                 	db	0	; dummy byte at the end
    78  0000                     
    79                           	psect	cinit
    80  000836                     __pcinit:
    81                           	opt stack 0
    82  000836                     start_initialization:
    83                           	opt stack 0
    84  000836                     __initialization:
    85                           	opt stack 0
    86                           
    87                           ; Clear objects allocated to COMRAM (1 bytes)
    88  000836  6A12               	clrf	__pbssCOMRAM& (0+255),c
    89  000838                     end_of_initialization:
    90                           	opt stack 0
    91  000838                     __end_of__initialization:
    92                           	opt stack 0
    93  000838  9013               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    94  00083A  9213               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    95  00083C  0E00               	movlw	low (__Lsmallconst shr (0+16))
    96  00083E  6EF8               	movwf	tblptru,c
    97  000840  0E08               	movlw	high __Lsmallconst
    98  000842  6EF7               	movwf	tblptrh,c
    99  000844  0100               	movlb	0
   100  000846  EF06  F004         	goto	_main	;jump to C main() function
   101                           tblptru	equ	0xFF8
   102                           tblptrh	equ	0xFF7
   103                           
   104                           	psect	bssCOMRAM
   105  000012                     __pbssCOMRAM:
   106                           	opt stack 0
   107  000012                     _cont:
   108                           	opt stack 0
   109  000012                     	ds	1
   110                           tblptru	equ	0xFF8
   111                           tblptrh	equ	0xFF7
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	opt stack 0
   116  000001                     ??_pic_isr:
   117  000001                     
   118                           ; 1 bytes @ 0x0
   119  000001                     	ds	17
   120  000012                     tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           
   123                           ; 1 bytes @ 0x11
   124 ;;
   125 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   126 ;;
   127 ;; *************** function _main *****************
   128 ;; Defined at:
   129 ;;		line 46 in file "main.c"
   130 ;; Parameters:    Size  Location     Type
   131 ;;		None
   132 ;; Auto vars:     Size  Location     Type
   133 ;;		None
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, status,2
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   143 ;;      Params:         0       0       0       0       0       0       0       0       0
   144 ;;      Locals:         0       0       0       0       0       0       0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0       0       0
   146 ;;      Totals:         0       0       0       0       0       0       0       0       0
   147 ;;Total ram usage:        0 bytes
   148 ;; Hardware stack levels required when called:    1
   149 ;; This function calls:
   150 ;;		Nothing
   151 ;; This function is called by:
   152 ;;		Startup code after reset
   153 ;; This function uses a non-reentrant model
   154 ;;
   155                           
   156                           	psect	text0
   157  00080C                     __ptext0:
   158                           	opt stack 0
   159  00080C                     _main:
   160                           	opt stack 30
   161                           
   162                           ;main.c: 47: ADCON1 = 0x0F;
   163                           
   164                           ;incstack = 0
   165  00080C  0E0F               	movlw	15
   166  00080E  6EC1               	movwf	4033,c	;volatile
   167                           
   168                           ;main.c: 48: TRISB = 0x00;
   169  000810  0E00               	movlw	0
   170  000812  6E93               	movwf	3987,c	;volatile
   171                           
   172                           ;main.c: 50: T0CONbits.TMR0ON = 0;
   173  000814  9ED5               	bcf	4053,7,c	;volatile
   174                           
   175                           ;main.c: 51: INTCONbits.TMR0IE = 1;
   176  000816  8AF2               	bsf	intcon,5,c	;volatile
   177                           
   178                           ;main.c: 52: INTCONbits.TMR0IF = 0;
   179  000818  94F2               	bcf	intcon,2,c	;volatile
   180                           
   181                           ;main.c: 53: T0CONbits.T08BIT = 0;
   182  00081A  9CD5               	bcf	4053,6,c	;volatile
   183                           
   184                           ;main.c: 54: T0CONbits.PSA = 0;
   185  00081C  96D5               	bcf	4053,3,c	;volatile
   186                           
   187                           ;main.c: 55: T0CONbits.T0PS0 = 0;
   188  00081E  90D5               	bcf	4053,0,c	;volatile
   189                           
   190                           ;main.c: 56: T0CONbits.T0PS1 = 1;
   191  000820  82D5               	bsf	4053,1,c	;volatile
   192                           
   193                           ;main.c: 57: T0CONbits.T0PS2 = 1;
   194  000822  84D5               	bsf	4053,2,c	;volatile
   195                           
   196                           ;main.c: 58: T0CONbits.T0CS = 0;
   197  000824  9AD5               	bcf	4053,5,c	;volatile
   198                           
   199                           ;main.c: 59: TMR0 = 26474;
   200  000826  0E67               	movlw	103
   201  000828  6ED7               	movwf	4055,c	;volatile
   202  00082A  0E6A               	movlw	106
   203  00082C  6ED6               	movwf	4054,c	;volatile
   204                           
   205                           ;main.c: 60: T0CONbits.TMR0ON = 1;
   206  00082E  8ED5               	bsf	4053,7,c	;volatile
   207                           
   208                           ;main.c: 61: INTCONbits.GIEH = 1;
   209  000830  8EF2               	bsf	intcon,7,c	;volatile
   210                           
   211                           ;main.c: 62: INTCONbits.GIEL = 1;
   212  000832  8CF2               	bsf	intcon,6,c	;volatile
   213  000834                     l26:
   214  000834  D7FF               	goto	l26
   215  000836                     __end_of_main:
   216                           	opt stack 0
   217                           tblptru	equ	0xFF8
   218                           tblptrh	equ	0xFF7
   219                           intcon	equ	0xFF2
   220                           
   221 ;; *************** function _pic_isr *****************
   222 ;; Defined at:
   223 ;;		line 25 in file "main.c"
   224 ;; Parameters:    Size  Location     Type
   225 ;;		None
   226 ;; Auto vars:     Size  Location     Type
   227 ;;		None
   228 ;; Return value:  Size  Location     Type
   229 ;;                  1    wreg      void 
   230 ;; Registers used:
   231 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   232 ;; Tracked objects:
   233 ;;		On entry : 0/0
   234 ;;		On exit  : 0/0
   235 ;;		Unchanged: 0/0
   236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   237 ;;      Params:         0       0       0       0       0       0       0       0       0
   238 ;;      Locals:         0       0       0       0       0       0       0       0       0
   239 ;;      Temps:         17       0       0       0       0       0       0       0       0
   240 ;;      Totals:        17       0       0       0       0       0       0       0       0
   241 ;;Total ram usage:       17 bytes
   242 ;; Hardware stack levels used:    1
   243 ;; This function calls:
   244 ;;		Nothing
   245 ;; This function is called by:
   246 ;;		Interrupt level 1
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	intcodelo
   251  000018                     __pintcodelo:
   252                           	opt stack 0
   253  000018                     _pic_isr:
   254                           	opt stack 30
   255                           
   256                           ;incstack = 0
   257  000018  8013               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   258  00001A  CFD8 F001          	movff	status,??_pic_isr
   259  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   260  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   261  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   262  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   263  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   264  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   265  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   266  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   267  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   268  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   269  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   270  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   271  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   272  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   273  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   274  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   275                           
   276                           ;main.c: 29: if(TMR0IF){
   277  00005E  A4F2               	btfss	intcon,2,c	;volatile
   278  000060  D016               	goto	i1l23
   279                           
   280                           ;main.c: 32: PORTB = display[cont];
   281  000062  5012               	movf	_cont,w,c
   282  000064  0D01               	mullw	1
   283  000066  0E01               	movlw	low _display
   284  000068  24F3               	addwf	prodl,w,c
   285  00006A  6EF6               	movwf	tblptrl,c
   286  00006C  0E08               	movlw	high _display
   287  00006E  20F4               	addwfc	prodh,w,c
   288  000070  6EF7               	movwf	tblptrh,c
   289  000072                     	if	0	;There are less than 3 active tblptr bytes
   290  000072                     	endif
   291  000072  0008               	tblrd		*
   292  000074  CFF5 FF81          	movff	tablat,3969	;volatile
   293                           
   294                           ;main.c: 33: cont++;
   295  000078  2A12               	incf	_cont,f,c
   296                           
   297                           ;main.c: 35: if(cont >9) cont = 0;
   298  00007A  0E09               	movlw	9
   299  00007C  6412               	cpfsgt	_cont,c
   300  00007E  D002               	goto	i1l22
   301  000080  0E00               	movlw	0
   302  000082  6E12               	movwf	_cont,c
   303  000084                     i1l22:
   304                           
   305                           ;main.c: 37: TMR0 =26474;
   306  000084  0E67               	movlw	103
   307  000086  6ED7               	movwf	4055,c	;volatile
   308  000088  0E6A               	movlw	106
   309  00008A  6ED6               	movwf	4054,c	;volatile
   310                           
   311                           ;main.c: 38: INTCONbits.TMR0IF = 0;
   312  00008C  94F2               	bcf	intcon,2,c	;volatile
   313  00008E                     i1l23:
   314  00008E  C011  FFF5         	movff	??_pic_isr+16,tablat
   315  000092  C010  FFF8         	movff	??_pic_isr+15,tblptru
   316  000096  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   317  00009A  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   318  00009E  C00D  FFF4         	movff	??_pic_isr+12,prodh
   319  0000A2  C00C  FFF3         	movff	??_pic_isr+11,prodl
   320  0000A6  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   321  0000AA  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   322  0000AE  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   323  0000B2  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   324  0000B6  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   325  0000BA  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   326  0000BE  C005  FFFB         	movff	??_pic_isr+4,pclatu
   327  0000C2  C004  FFFA         	movff	??_pic_isr+3,pclath
   328  0000C6  C003  FFE0         	movff	??_pic_isr+2,bsr
   329  0000CA  C002  FFE8         	movff	??_pic_isr+1,wreg
   330  0000CE  C001  FFD8         	movff	??_pic_isr,status
   331  0000D2  9013               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   332  0000D4  0010               	retfie	
   333  0000D6                     __end_of_pic_isr:
   334                           	opt stack 0
   335                           pclatu	equ	0xFFB
   336                           pclath	equ	0xFFA
   337                           tblptru	equ	0xFF8
   338                           tblptrh	equ	0xFF7
   339                           tblptrl	equ	0xFF6
   340                           tablat	equ	0xFF5
   341                           prodh	equ	0xFF4
   342                           prodl	equ	0xFF3
   343                           intcon	equ	0xFF2
   344                           fsr0h	equ	0xFEA
   345                           fsr0l	equ	0xFE9
   346                           wreg	equ	0xFE8
   347                           fsr1h	equ	0xFE2
   348                           fsr1l	equ	0xFE1
   349                           bsr	equ	0xFE0
   350                           fsr2h	equ	0xFDA
   351                           fsr2l	equ	0xFD9
   352                           status	equ	0xFD8
   353                           pclatu	equ	0xFFB
   354                           pclath	equ	0xFFA
   355                           tblptru	equ	0xFF8
   356                           tblptrh	equ	0xFF7
   357                           tblptrl	equ	0xFF6
   358                           tablat	equ	0xFF5
   359                           prodh	equ	0xFF4
   360                           prodl	equ	0xFF3
   361                           intcon	equ	0xFF2
   362                           fsr0h	equ	0xFEA
   363                           fsr0l	equ	0xFE9
   364                           wreg	equ	0xFE8
   365                           fsr1h	equ	0xFE2
   366                           fsr1l	equ	0xFE1
   367                           bsr	equ	0xFE0
   368                           fsr2h	equ	0xFDA
   369                           fsr2l	equ	0xFD9
   370                           status	equ	0xFD8
   371                           
   372                           	psect	rparam
   373  0000                     pclatu	equ	0xFFB
   374                           pclath	equ	0xFFA
   375                           tblptru	equ	0xFF8
   376                           tblptrh	equ	0xFF7
   377                           tblptrl	equ	0xFF6
   378                           tablat	equ	0xFF5
   379                           prodh	equ	0xFF4
   380                           prodl	equ	0xFF3
   381                           intcon	equ	0xFF2
   382                           fsr0h	equ	0xFEA
   383                           fsr0l	equ	0xFE9
   384                           wreg	equ	0xFE8
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           bsr	equ	0xFE0
   388                           fsr2h	equ	0xFDA
   389                           fsr2l	equ	0xFD9
   390                           status	equ	0xFD8
   391                           
   392                           	psect	temp
   393  000013                     btemp:
   394                           	opt stack 0
   395  000013                     	ds	1
   396  0000                     int$flags	set	btemp
   397                           pclatu	equ	0xFFB
   398                           pclath	equ	0xFFA
   399                           tblptru	equ	0xFF8
   400                           tblptrh	equ	0xFF7
   401                           tblptrl	equ	0xFF6
   402                           tablat	equ	0xFF5
   403                           prodh	equ	0xFF4
   404                           prodl	equ	0xFF3
   405                           intcon	equ	0xFF2
   406                           fsr0h	equ	0xFEA
   407                           fsr0l	equ	0xFE9
   408                           wreg	equ	0xFE8
   409                           fsr1h	equ	0xFE2
   410                           fsr1l	equ	0xFE1
   411                           bsr	equ	0xFE0
   412                           fsr2h	equ	0xFDA
   413                           fsr2l	equ	0xFD9
   414                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      18
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      12       1       19.1%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      12      20        0.0%
DATA                 0      0      12       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 29 15:35:15 2018

                     l26 0834                       bsr 000FE0                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i1l22 0084                     i1l23 008E  
                   _TMR0 000FD6                     _cont 0012                     _main 080C  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0013                     prodh 000FF4                     prodl 000FF3  
                   start 00D6             ___param_bank 000000                    ?_main 0001  
                  _PORTB 000F81                    _TRISB 000F93          __end_of_display 080B  
        __end_of_pic_isr 00D6                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 0836             __end_of_main 0836  
                 ??_main 0012            __activetblptr 000001                   _ADCON1 000FC1  
                 _TMR0IF 007F92                ??_pic_isr 0001             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0838          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 0836  
                __ramtop 0800                  __ptext0 080C                  _display 0801  
              _T0CONbits 000FD5                  _pic_isr 0018     end_of_initialization 0838  
    start_initialization 0836              __pbssCOMRAM 0012              __pintcodelo 0018  
            __smallconst 0800                 ?_pic_isr 0001                 __Hrparam 0000  
               __Lrparam 0000             __Lsmallconst 0800         __size_of_pic_isr 00BE  
          __size_of_main 002A                 int$flags 0013               _INTCONbits 000FF2  
               intlevel1 0000  
