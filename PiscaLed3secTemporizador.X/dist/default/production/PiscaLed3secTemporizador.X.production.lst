

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 26 10:46:09 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    15  0000                     
    16                           ; Version 1.41
    17                           ; Generated 25/01/2017 GMT
    18                           ; 
    19                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  00015E                     __pidataCOMRAM:
    53                           	opt stack 0
    54                           
    55                           ;initializer for _flagEstado
    56  00015E  01                 	db	1
    57  0000                     _TMR0	set	4054
    58  0000                     _PORTBbits	set	3969
    59  0000                     _PORTCbits	set	3970
    60  0000                     _T0CONbits	set	4053
    61  0000                     _TRISC	set	3988
    62  0000                     _TRISB	set	3987
    63  0000                     _INTCONbits	set	4082
    64  0000                     _TMR0IF	set	32658
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  00013C                     __pcinit:
    70                           	opt stack 0
    71  00013C                     start_initialization:
    72                           	opt stack 0
    73  00013C                     __initialization:
    74                           	opt stack 0
    75                           
    76                           ; Initialize objects allocated to COMRAM (1 bytes)
    77                           ; load TBLPTR registers with __pidataCOMRAM
    78  00013C  0E5E               	movlw	low __pidataCOMRAM
    79  00013E  6EF6               	movwf	tblptrl,c
    80  000140  0E01               	movlw	high __pidataCOMRAM
    81  000142  6EF7               	movwf	tblptrh,c
    82  000144  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    83  000146  6EF8               	movwf	tblptru,c
    84  000148  0009               	tblrd		*+	;fetch initializer
    85  00014A  CFF5 F016          	movff	tablat,__pdataCOMRAM
    86                           
    87                           ; Clear objects allocated to COMRAM (3 bytes)
    88  00014E  6A15               	clrf	(__pbssCOMRAM+2)& (0+255),c
    89  000150  6A14               	clrf	(__pbssCOMRAM+1)& (0+255),c
    90  000152  6A13               	clrf	__pbssCOMRAM& (0+255),c
    91  000154                     end_of_initialization:
    92                           	opt stack 0
    93  000154                     __end_of__initialization:
    94                           	opt stack 0
    95  000154  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    96  000156  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    97  000158  0100               	movlb	0
    98  00015A  EF64  F000         	goto	_main	;jump to C main() function
    99                           tblptru	equ	0xFF8
   100                           tblptrh	equ	0xFF7
   101                           tblptrl	equ	0xFF6
   102                           tablat	equ	0xFF5
   103                           
   104                           	psect	bssCOMRAM
   105  000013                     __pbssCOMRAM:
   106                           	opt stack 0
   107  000013                     _sec:
   108                           	opt stack 0
   109  000013                     	ds	1
   110  000014                     _cont:
   111                           	opt stack 0
   112  000014                     	ds	1
   113  000015                     _flagSegundo:
   114                           	opt stack 0
   115  000015                     	ds	1
   116                           tblptru	equ	0xFF8
   117                           tblptrh	equ	0xFF7
   118                           tblptrl	equ	0xFF6
   119                           tablat	equ	0xFF5
   120                           
   121                           	psect	dataCOMRAM
   122  000016                     __pdataCOMRAM:
   123                           	opt stack 0
   124  000016                     _flagEstado:
   125                           	opt stack 0
   126  000016                     	ds	1
   127                           tblptru	equ	0xFF8
   128                           tblptrh	equ	0xFF7
   129                           tblptrl	equ	0xFF6
   130                           tablat	equ	0xFF5
   131                           
   132                           	psect	cstackCOMRAM
   133  000001                     __pcstackCOMRAM:
   134                           	opt stack 0
   135  000001                     ??_pic_isr:
   136  000001                     
   137                           ; 1 bytes @ 0x0
   138  000001                     	ds	17
   139  000012                     main@estado:
   140                           	opt stack 0
   141                           
   142                           ; 1 bytes @ 0x11
   143  000012                     	ds	1
   144                           tblptru	equ	0xFF8
   145                           tblptrh	equ	0xFF7
   146                           tblptrl	equ	0xFF6
   147                           tablat	equ	0xFF5
   148                           
   149 ;;
   150 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   151 ;;
   152 ;; *************** function _main *****************
   153 ;; Defined at:
   154 ;;		line 47 in file "main.c"
   155 ;; Parameters:    Size  Location     Type
   156 ;;		None
   157 ;; Auto vars:     Size  Location     Type
   158 ;;  estado          1   17[COMRAM] unsigned char 
   159 ;;  ledPiscando     1    0        unsigned char 
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, status,2, status,0
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   169 ;;      Params:         0       0       0       0       0       0       0       0       0
   170 ;;      Locals:         1       0       0       0       0       0       0       0       0
   171 ;;      Temps:          0       0       0       0       0       0       0       0       0
   172 ;;      Totals:         1       0       0       0       0       0       0       0       0
   173 ;;Total ram usage:        1 bytes
   174 ;; Hardware stack levels required when called:    1
   175 ;; This function calls:
   176 ;;		Nothing
   177 ;; This function is called by:
   178 ;;		Startup code after reset
   179 ;; This function uses a non-reentrant model
   180 ;;
   181                           
   182                           	psect	text0
   183  0000C8                     __ptext0:
   184                           	opt stack 0
   185  0000C8                     _main:
   186                           	opt stack 30
   187                           
   188                           ;main.c: 49: TRISB = 0x00;
   189                           
   190                           ;incstack = 0
   191  0000C8  0E00               	movlw	0
   192  0000CA  6E93               	movwf	3987,c	;volatile
   193                           
   194                           ;main.c: 50: TRISC = 0x01;
   195  0000CC  0E01               	movlw	1
   196  0000CE  6E94               	movwf	3988,c	;volatile
   197                           
   198                           ;main.c: 51: T0CONbits.TMR0ON = 0;
   199  0000D0  9ED5               	bcf	4053,7,c	;volatile
   200                           
   201                           ;main.c: 52: INTCONbits.TMR0IE = 1;
   202  0000D2  8AF2               	bsf	intcon,5,c	;volatile
   203                           
   204                           ;main.c: 53: INTCONbits.TMR0IF = 0;
   205  0000D4  94F2               	bcf	intcon,2,c	;volatile
   206                           
   207                           ;main.c: 54: T0CONbits.T08BIT = 0;
   208  0000D6  9CD5               	bcf	4053,6,c	;volatile
   209                           
   210                           ;main.c: 55: T0CONbits.PSA = 0;
   211  0000D8  96D5               	bcf	4053,3,c	;volatile
   212                           
   213                           ;main.c: 56: T0CONbits.T0PS0 = 1;
   214  0000DA  80D5               	bsf	4053,0,c	;volatile
   215                           
   216                           ;main.c: 57: T0CONbits.T0PS1 = 0;
   217  0000DC  92D5               	bcf	4053,1,c	;volatile
   218                           
   219                           ;main.c: 58: T0CONbits.T0PS2 = 1;
   220  0000DE  84D5               	bsf	4053,2,c	;volatile
   221                           
   222                           ;main.c: 59: T0CONbits.T0CS = 0;
   223  0000E0  9AD5               	bcf	4053,5,c	;volatile
   224                           
   225                           ;main.c: 60: TMR0 = 26474;
   226  0000E2  0E67               	movlw	103
   227  0000E4  6ED7               	movwf	4055,c	;volatile
   228  0000E6  0E6A               	movlw	106
   229  0000E8  6ED6               	movwf	4054,c	;volatile
   230                           
   231                           ;main.c: 61: T0CONbits.TMR0ON = 1;
   232  0000EA  8ED5               	bsf	4053,7,c	;volatile
   233                           
   234                           ;main.c: 62: INTCONbits.GIEH = 1;
   235  0000EC  8EF2               	bsf	intcon,7,c	;volatile
   236                           
   237                           ;main.c: 63: INTCONbits.GIEL = 1;
   238  0000EE  8CF2               	bsf	intcon,6,c	;volatile
   239  0000F0                     l682:
   240                           
   241                           ;main.c: 68: estado = PORTCbits.RC1;
   242  0000F0  0E00               	movlw	0
   243  0000F2  B282               	btfsc	3970,1,c	;volatile
   244  0000F4  0E01               	movlw	1
   245  0000F6  6E12               	movwf	main@estado,c
   246                           
   247                           ;main.c: 70: if(PORTCbits.RC1){
   248  0000F8  A282               	btfss	3970,1,c	;volatile
   249  0000FA  D006               	goto	l690
   250                           
   251                           ;main.c: 71: flagEstado++;
   252  0000FC  2A16               	incf	_flagEstado,f,c
   253                           
   254                           ;main.c: 72: flagEstado = flagEstado % 2;
   255  0000FE  5016               	movf	_flagEstado,w,c
   256  000100  0B01               	andlw	1
   257  000102  6E16               	movwf	_flagEstado,c
   258  000104                     l34:
   259  000104  B282               	btfsc	3970,1,c	;volatile
   260  000106  D7FE               	goto	l34
   261  000108                     l690:
   262                           
   263                           ;main.c: 74: }
   264                           ;main.c: 76: if(flagEstado){
   265  000108  5016               	movf	_flagEstado,w,c
   266  00010A  B4D8               	btfsc	status,2,c
   267  00010C  D009               	goto	l700
   268                           
   269                           ;main.c: 77: if (flagSegundo) {
   270  00010E  5015               	movf	_flagSegundo,w,c
   271  000110  B4D8               	btfsc	status,2,c
   272  000112  D7EE               	goto	l682
   273  000114                     
   274                           ;main.c: 79: if (PORTBbits.RB0 == 0) {
   275  000114  B081               	btfsc	3969,0,c	;volatile
   276  000116  D002               	goto	l39
   277                           
   278                           ;main.c: 80: PORTBbits.RB0 = 1;
   279  000118  8081               	bsf	3969,0,c	;volatile
   280                           
   281                           ;main.c: 81: } else {
   282  00011A  D00D               	goto	l712
   283  00011C                     l39:
   284                           
   285                           ;main.c: 82: PORTBbits.RB0 = 0;
   286  00011C  9081               	bcf	3969,0,c	;volatile
   287  00011E  D00B               	goto	l712
   288  000120                     l700:
   289                           
   290                           ;main.c: 89: if(flagSegundo){
   291  000120  5015               	movf	_flagSegundo,w,c
   292  000122  B4D8               	btfsc	status,2,c
   293  000124  D7E5               	goto	l682
   294                           
   295                           ;main.c: 90: sec++;
   296  000126  2A13               	incf	_sec,f,c
   297                           
   298                           ;main.c: 91: sec = sec %4 ;
   299  000128  5013               	movf	_sec,w,c
   300  00012A  0B03               	andlw	3
   301  00012C  6E13               	movwf	_sec,c
   302                           
   303                           ;main.c: 92: if(sec == 3){
   304  00012E  0E03               	movlw	3
   305  000130  1813               	xorwf	_sec,w,c
   306  000132  B4D8               	btfsc	status,2,c
   307  000134  D7EF               	goto	L1
   308  000136                     l712:
   309                           
   310                           ;main.c: 97: }
   311                           ;main.c: 98: }
   312                           ;main.c: 99: flagSegundo = 0;
   313  000136  0E00               	movlw	0
   314  000138  6E15               	movwf	_flagSegundo,c
   315  00013A  D7DA               	goto	l682
   316  00013C                     __end_of_main:
   317                           	opt stack 0
   318                           tblptru	equ	0xFF8
   319                           tblptrh	equ	0xFF7
   320                           tblptrl	equ	0xFF6
   321                           tablat	equ	0xFF5
   322                           intcon	equ	0xFF2
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _pic_isr *****************
   326 ;; Defined at:
   327 ;;		line 28 in file "main.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:         17       0       0       0       0       0       0       0       0
   344 ;;      Totals:        17       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:       17 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		Interrupt level 1
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	intcodelo
   355  000018                     __pintcodelo:
   356                           	opt stack 0
   357  000018                     _pic_isr:
   358                           	opt stack 30
   359                           
   360                           ;incstack = 0
   361  000018  8017               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   362  00001A  CFD8 F001          	movff	status,??_pic_isr
   363  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   364  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   365  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   366  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   367  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   368  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   369  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   370  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   371  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   372  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   373  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   374  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   375  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   376  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   377  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   378  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   379                           
   380                           ;main.c: 32: if (TMR0IF) {
   381  00005E  A4F2               	btfss	intcon,2,c	;volatile
   382  000060  D00D               	goto	i1l29
   383                           
   384                           ;main.c: 34: cont++;
   385  000062  2A14               	incf	_cont,f,c
   386                           
   387                           ;main.c: 35: if (cont > 1) {
   388  000064  0E01               	movlw	1
   389  000066  6414               	cpfsgt	_cont,c
   390  000068  D004               	goto	i1l28
   391                           
   392                           ;main.c: 36: flagSegundo = 1;
   393  00006A  0E01               	movlw	1
   394  00006C  6E15               	movwf	_flagSegundo,c
   395                           
   396                           ;main.c: 37: cont = 0;
   397  00006E  0E00               	movlw	0
   398  000070  6E14               	movwf	_cont,c
   399  000072                     i1l28:
   400                           
   401                           ;main.c: 38: }
   402                           ;main.c: 41: TMR0 = 26474;
   403  000072  0E67               	movlw	103
   404  000074  6ED7               	movwf	4055,c	;volatile
   405  000076  0E6A               	movlw	106
   406  000078  6ED6               	movwf	4054,c	;volatile
   407                           
   408                           ;main.c: 42: INTCONbits.TMR0IF = 0;
   409  00007A  94F2               	bcf	intcon,2,c	;volatile
   410  00007C                     i1l29:
   411  00007C  C011  FFF5         	movff	??_pic_isr+16,tablat
   412  000080  C010  FFF8         	movff	??_pic_isr+15,tblptru
   413  000084  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   414  000088  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   415  00008C  C00D  FFF4         	movff	??_pic_isr+12,prodh
   416  000090  C00C  FFF3         	movff	??_pic_isr+11,prodl
   417  000094  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   418  000098  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   419  00009C  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   420  0000A0  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   421  0000A4  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   422  0000A8  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   423  0000AC  C005  FFFB         	movff	??_pic_isr+4,pclatu
   424  0000B0  C004  FFFA         	movff	??_pic_isr+3,pclath
   425  0000B4  C003  FFE0         	movff	??_pic_isr+2,bsr
   426  0000B8  C002  FFE8         	movff	??_pic_isr+1,wreg
   427  0000BC  C001  FFD8         	movff	??_pic_isr,status
   428  0000C0  9017               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   429  0000C2  0010               	retfie	
   430  0000C4                     __end_of_pic_isr:
   431                           	opt stack 0
   432  0000                     pclatu	equ	0xFFB
   433                           pclath	equ	0xFFA
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           prodh	equ	0xFF4
   439                           prodl	equ	0xFF3
   440                           intcon	equ	0xFF2
   441                           fsr0h	equ	0xFEA
   442                           fsr0l	equ	0xFE9
   443                           wreg	equ	0xFE8
   444                           fsr1h	equ	0xFE2
   445                           fsr1l	equ	0xFE1
   446                           bsr	equ	0xFE0
   447                           fsr2h	equ	0xFDA
   448                           fsr2l	equ	0xFD9
   449                           status	equ	0xFD8
   450                           pclatu	equ	0xFFB
   451                           pclath	equ	0xFFA
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           prodh	equ	0xFF4
   457                           prodl	equ	0xFF3
   458                           intcon	equ	0xFF2
   459                           fsr0h	equ	0xFEA
   460                           fsr0l	equ	0xFE9
   461                           wreg	equ	0xFE8
   462                           fsr1h	equ	0xFE2
   463                           fsr1l	equ	0xFE1
   464                           bsr	equ	0xFE0
   465                           fsr2h	equ	0xFDA
   466                           fsr2l	equ	0xFD9
   467                           status	equ	0xFD8
   468                           
   469                           	psect	rparam
   470  0000                     pclatu	equ	0xFFB
   471                           pclath	equ	0xFFA
   472                           tblptru	equ	0xFF8
   473                           tblptrh	equ	0xFF7
   474                           tblptrl	equ	0xFF6
   475                           tablat	equ	0xFF5
   476                           prodh	equ	0xFF4
   477                           prodl	equ	0xFF3
   478                           intcon	equ	0xFF2
   479                           fsr0h	equ	0xFEA
   480                           fsr0l	equ	0xFE9
   481                           wreg	equ	0xFE8
   482                           fsr1h	equ	0xFE2
   483                           fsr1l	equ	0xFE1
   484                           bsr	equ	0xFE0
   485                           fsr2h	equ	0xFDA
   486                           fsr2l	equ	0xFD9
   487                           status	equ	0xFD8
   488                           
   489                           	psect	temp
   490  000017                     btemp:
   491                           	opt stack 0
   492  000017                     	ds	1
   493  0000                     int$flags	set	btemp
   494                           pclatu	equ	0xFFB
   495                           pclath	equ	0xFFA
   496                           tblptru	equ	0xFF8
   497                           tblptrh	equ	0xFF7
   498                           tblptrl	equ	0xFF6
   499                           tablat	equ	0xFF5
   500                           prodh	equ	0xFF4
   501                           prodl	equ	0xFF3
   502                           intcon	equ	0xFF2
   503                           fsr0h	equ	0xFEA
   504                           fsr0l	equ	0xFE9
   505                           wreg	equ	0xFE8
   506                           fsr1h	equ	0xFE2
   507                           fsr1l	equ	0xFE1
   508                           bsr	equ	0xFE0
   509                           fsr2h	equ	0xFDA
   510                           fsr2l	equ	0xFD9
   511                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     18      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     12      16       1       23.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      20        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 26 10:46:09 2018

                     l34 0104                       l39 011C                       bsr 000FE0  
                    l700 0120                      l712 0136                      l690 0108  
                    l682 00F0                      _sec 0013                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i1l28 0072                     i1l29 007C  
                   _TMR0 000FD6                     _cont 0014                     _main 00C8  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0017                     prodh 000FF4                     prodl 000FF3  
                   start 00C4             ___param_bank 000000                    ?_main 0001  
                  _TRISB 000F93                    _TRISC 000F94          __end_of_pic_isr 00C4  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
        __initialization 013C             __end_of_main 013C                   ??_main 0012  
          __activetblptr 000000                   _TMR0IF 007F92             __pdataCOMRAM 0016  
              ??_pic_isr 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0154  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
             _flagEstado 0016                  __Hparam 0000                  __Lparam 0000  
                __pcinit 013C                  __ramtop 0800                  __ptext0 00C8  
              _T0CONbits 000FD5                  _pic_isr 0018     end_of_initialization 0154  
              _PORTBbits 000F81                _PORTCbits 000F82               main@estado 0012  
          __pidataCOMRAM 015E      start_initialization 013C              __pbssCOMRAM 0013  
            __pintcodelo 0018              _flagSegundo 0015                 ?_pic_isr 0001  
               __Hrparam 0000                 __Lrparam 0000         __size_of_pic_isr 00AC  
          __size_of_main 0074                 int$flags 0017               _INTCONbits 000FF2  
               intlevel1 0000  
