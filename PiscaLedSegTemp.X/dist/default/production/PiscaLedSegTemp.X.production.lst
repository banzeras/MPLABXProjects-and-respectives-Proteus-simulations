

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 22 14:56:57 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _TMR0	set	4054
    48  0000                     _T0CONbits	set	4053
    49  0000                     _TRISCbits	set	3988
    50  0000                     _INTCONbits	set	4082
    51  0000                     _PORTCbits	set	3970
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  0000DA                     __pcinit:
    57                           	opt stack 0
    58  0000DA                     start_initialization:
    59                           	opt stack 0
    60  0000DA                     __initialization:
    61                           	opt stack 0
    62  0000DA                     end_of_initialization:
    63                           	opt stack 0
    64  0000DA                     __end_of__initialization:
    65                           	opt stack 0
    66  0000DA  9012               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    67  0000DC  9212               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    68  0000DE  0100               	movlb	0
    69  0000E0  EF5B  F000         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72  000001                     __pcstackCOMRAM:
    73                           	opt stack 0
    74  000001                     ??_pic_isr:
    75  000001                     
    76                           ; 1 bytes @ 0x0
    77  000001                     	ds	17
    78  000012                     
    79                           ; 1 bytes @ 0x11
    80 ;;
    81 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    82 ;;
    83 ;; *************** function _main *****************
    84 ;; Defined at:
    85 ;;		line 48 in file "main.c"
    86 ;; Parameters:    Size  Location     Type
    87 ;;		None
    88 ;; Auto vars:     Size  Location     Type
    89 ;;		None
    90 ;; Return value:  Size  Location     Type
    91 ;;                  1    wreg      void 
    92 ;; Registers used:
    93 ;;		wreg, status,2
    94 ;; Tracked objects:
    95 ;;		On entry : 0/0
    96 ;;		On exit  : 0/0
    97 ;;		Unchanged: 0/0
    98 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
    99 ;;      Params:         0       0       0       0       0       0       0       0       0
   100 ;;      Locals:         0       0       0       0       0       0       0       0       0
   101 ;;      Temps:          0       0       0       0       0       0       0       0       0
   102 ;;      Totals:         0       0       0       0       0       0       0       0       0
   103 ;;Total ram usage:        0 bytes
   104 ;; Hardware stack levels required when called:    1
   105 ;; This function calls:
   106 ;;		Nothing
   107 ;; This function is called by:
   108 ;;		Startup code after reset
   109 ;; This function uses a non-reentrant model
   110 ;;
   111                           
   112                           	psect	text0
   113  0000B6                     __ptext0:
   114                           	opt stack 0
   115  0000B6                     _main:
   116                           	opt stack 30
   117                           
   118                           ;main.c: 50: TRISCbits.TRISC0 = 0;
   119                           
   120                           ;incstack = 0
   121  0000B6  9094               	bcf	3988,0,c	;volatile
   122                           
   123                           ;main.c: 52: T0CONbits.TMR0ON = 0;
   124  0000B8  9ED5               	bcf	4053,7,c	;volatile
   125                           
   126                           ;main.c: 54: INTCONbits.TMR0IF = 1;
   127  0000BA  84F2               	bsf	intcon,2,c	;volatile
   128                           
   129                           ;main.c: 55: INTCONbits.TMR0IF = 0;
   130  0000BC  94F2               	bcf	intcon,2,c	;volatile
   131                           
   132                           ;main.c: 57: T0CONbits.T08BIT = 0;
   133  0000BE  9CD5               	bcf	4053,6,c	;volatile
   134                           
   135                           ;main.c: 58: T0CONbits.PSA = 0;
   136  0000C0  96D5               	bcf	4053,3,c	;volatile
   137                           
   138                           ;main.c: 60: T0CONbits.T0PS0 = 1;
   139  0000C2  80D5               	bsf	4053,0,c	;volatile
   140                           
   141                           ;main.c: 61: T0CONbits.T0PS1 = 1;
   142  0000C4  82D5               	bsf	4053,1,c	;volatile
   143                           
   144                           ;main.c: 62: T0CONbits.T0PS2 = 0;
   145  0000C6  94D5               	bcf	4053,2,c	;volatile
   146                           
   147                           ;main.c: 63: T0CONbits.T0CS = 0;
   148  0000C8  9AD5               	bcf	4053,5,c	;volatile
   149                           
   150                           ;main.c: 65: TMR0 = 0;
   151  0000CA  0E00               	movlw	0
   152  0000CC  6ED7               	movwf	4055,c	;volatile
   153  0000CE  0E00               	movlw	0
   154  0000D0  6ED6               	movwf	4054,c	;volatile
   155                           
   156                           ;main.c: 66: T0CONbits.TMR0ON = 1;
   157  0000D2  8ED5               	bsf	4053,7,c	;volatile
   158                           
   159                           ;main.c: 68: INTCONbits.GIEH = 1;
   160  0000D4  8EF2               	bsf	intcon,7,c	;volatile
   161                           
   162                           ;main.c: 69: INTCONbits.GIEL = 1;
   163  0000D6  8CF2               	bsf	intcon,6,c	;volatile
   164  0000D8                     l16:
   165  0000D8  D7FF               	goto	l16
   166  0000DA                     __end_of_main:
   167                           	opt stack 0
   168                           intcon	equ	0xFF2
   169                           
   170 ;; *************** function _pic_isr *****************
   171 ;; Defined at:
   172 ;;		line 23 in file "main.c"
   173 ;; Parameters:    Size  Location     Type
   174 ;;		None
   175 ;; Auto vars:     Size  Location     Type
   176 ;;		None
   177 ;; Return value:  Size  Location     Type
   178 ;;                  1    wreg      void 
   179 ;; Registers used:
   180 ;;		wreg, status,2
   181 ;; Tracked objects:
   182 ;;		On entry : 0/0
   183 ;;		On exit  : 0/0
   184 ;;		Unchanged: 0/0
   185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   186 ;;      Params:         0       0       0       0       0       0       0       0       0
   187 ;;      Locals:         0       0       0       0       0       0       0       0       0
   188 ;;      Temps:         17       0       0       0       0       0       0       0       0
   189 ;;      Totals:        17       0       0       0       0       0       0       0       0
   190 ;;Total ram usage:       17 bytes
   191 ;; Hardware stack levels used:    1
   192 ;; This function calls:
   193 ;;		Nothing
   194 ;; This function is called by:
   195 ;;		Interrupt level 1
   196 ;; This function uses a non-reentrant model
   197 ;;
   198                           
   199                           	psect	intcodelo
   200  000018                     __pintcodelo:
   201                           	opt stack 0
   202  000018                     _pic_isr:
   203                           	opt stack 30
   204                           
   205                           ;incstack = 0
   206  000018  8012               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   207  00001A  CFD8 F001          	movff	status,??_pic_isr
   208  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   209  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   210  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   211  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   212  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   213  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   214  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   215  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   216  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   217  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   218  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   219  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   220  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   221  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   222  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   223  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   224                           
   225                           ;main.c: 25: PORTCbits.RC0 = 1;
   226  00005E  8082               	bsf	3970,0,c	;volatile
   227                           
   228                           ;main.c: 39: TMR0 = 26474;
   229  000060  0E67               	movlw	103
   230  000062  6ED7               	movwf	4055,c	;volatile
   231  000064  0E6A               	movlw	106
   232  000066  6ED6               	movwf	4054,c	;volatile
   233                           
   234                           ;main.c: 40: INTCONbits.TMR0IF = 0;
   235  000068  94F2               	bcf	intcon,2,c	;volatile
   236  00006A  C011  FFF5         	movff	??_pic_isr+16,tablat
   237  00006E  C010  FFF8         	movff	??_pic_isr+15,tblptru
   238  000072  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   239  000076  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   240  00007A  C00D  FFF4         	movff	??_pic_isr+12,prodh
   241  00007E  C00C  FFF3         	movff	??_pic_isr+11,prodl
   242  000082  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   243  000086  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   244  00008A  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   245  00008E  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   246  000092  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   247  000096  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   248  00009A  C005  FFFB         	movff	??_pic_isr+4,pclatu
   249  00009E  C004  FFFA         	movff	??_pic_isr+3,pclath
   250  0000A2  C003  FFE0         	movff	??_pic_isr+2,bsr
   251  0000A6  C002  FFE8         	movff	??_pic_isr+1,wreg
   252  0000AA  C001  FFD8         	movff	??_pic_isr,status
   253  0000AE  9012               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   254  0000B0  0010               	retfie	
   255  0000B2                     __end_of_pic_isr:
   256                           	opt stack 0
   257  0000                     pclatu	equ	0xFFB
   258                           pclath	equ	0xFFA
   259                           tblptru	equ	0xFF8
   260                           tblptrh	equ	0xFF7
   261                           tblptrl	equ	0xFF6
   262                           tablat	equ	0xFF5
   263                           prodh	equ	0xFF4
   264                           prodl	equ	0xFF3
   265                           intcon	equ	0xFF2
   266                           fsr0h	equ	0xFEA
   267                           fsr0l	equ	0xFE9
   268                           wreg	equ	0xFE8
   269                           fsr1h	equ	0xFE2
   270                           fsr1l	equ	0xFE1
   271                           bsr	equ	0xFE0
   272                           fsr2h	equ	0xFDA
   273                           fsr2l	equ	0xFD9
   274                           status	equ	0xFD8
   275                           pclatu	equ	0xFFB
   276                           pclath	equ	0xFFA
   277                           tblptru	equ	0xFF8
   278                           tblptrh	equ	0xFF7
   279                           tblptrl	equ	0xFF6
   280                           tablat	equ	0xFF5
   281                           prodh	equ	0xFF4
   282                           prodl	equ	0xFF3
   283                           intcon	equ	0xFF2
   284                           fsr0h	equ	0xFEA
   285                           fsr0l	equ	0xFE9
   286                           wreg	equ	0xFE8
   287                           fsr1h	equ	0xFE2
   288                           fsr1l	equ	0xFE1
   289                           bsr	equ	0xFE0
   290                           fsr2h	equ	0xFDA
   291                           fsr2l	equ	0xFD9
   292                           status	equ	0xFD8
   293                           
   294                           	psect	rparam
   295  0000                     pclatu	equ	0xFFB
   296                           pclath	equ	0xFFA
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           prodh	equ	0xFF4
   302                           prodl	equ	0xFF3
   303                           intcon	equ	0xFF2
   304                           fsr0h	equ	0xFEA
   305                           fsr0l	equ	0xFE9
   306                           wreg	equ	0xFE8
   307                           fsr1h	equ	0xFE2
   308                           fsr1l	equ	0xFE1
   309                           bsr	equ	0xFE0
   310                           fsr2h	equ	0xFDA
   311                           fsr2l	equ	0xFD9
   312                           status	equ	0xFD8
   313                           
   314                           	psect	temp
   315  000012                     btemp:
   316                           	opt stack 0
   317  000012                     	ds	1
   318  0000                     int$flags	set	btemp
   319                           pclatu	equ	0xFFB
   320                           pclath	equ	0xFFA
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           prodh	equ	0xFF4
   326                           prodl	equ	0xFF3
   327                           intcon	equ	0xFF2
   328                           fsr0h	equ	0xFEA
   329                           fsr0l	equ	0xFE9
   330                           wreg	equ	0xFE8
   331                           fsr1h	equ	0xFE2
   332                           fsr1l	equ	0xFE1
   333                           bsr	equ	0xFE0
   334                           fsr2h	equ	0xFDA
   335                           fsr2l	equ	0xFD9
   336                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     11      11       1       18.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 22 14:56:57 2018

                     l16 00D8                       bsr 000FE0                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     _TMR0 000FD6                     _main 00B6  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0012                     prodh 000FF4                     prodl 000FF3  
                   start 00B2             ___param_bank 000000                    ?_main 0001  
        __end_of_pic_isr 00B2                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8          __initialization 00DA             __end_of_main 00DA  
                 ??_main 0012            __activetblptr 000000                ??_pic_isr 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 00DA            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 00DA                  __ramtop 0800                  __ptext0 00B6  
              _T0CONbits 000FD5                  _pic_isr 0018     end_of_initialization 00DA  
              _PORTCbits 000F82                _TRISCbits 000F94      start_initialization 00DA  
            __pintcodelo 0018                 ?_pic_isr 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of_pic_isr 009A            __size_of_main 0024  
               int$flags 0012               _INTCONbits 000FF2                 intlevel1 0000  
