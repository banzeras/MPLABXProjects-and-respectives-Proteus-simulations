

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Apr 05 15:17:25 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  0008F6                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _vermelhoLigado
    57  0008F6  01                 	db	1
    58                           
    59                           ;initializer for _contSemaforo
    60  0008F7  05                 	db	5
    61                           
    62                           	psect	smallconst
    63  000800                     __psmallconst:
    64                           	opt stack 0
    65  000800  00                 	db	0
    66  000801                     _display:
    67                           	opt stack 0
    68  000801  3F                 	db	63
    69  000802  06                 	db	6
    70  000803  5B                 	db	91
    71  000804  4F                 	db	79
    72  000805  66                 	db	102
    73  000806  6D                 	db	109
    74  000807  7D                 	db	125
    75  000808  07                 	db	7
    76  000809  7F                 	db	127
    77  00080A  6F                 	db	111
    78  00080B                     __end_of_display:
    79                           	opt stack 0
    80  0000                     _TMR0	set	4054
    81  0000                     _PORTB	set	3969
    82  0000                     _PORTCbits	set	3970
    83  0000                     _T0CONbits	set	4053
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISB	set	3987
    86  0000                     _ADCON1	set	4033
    87  0000                     _INTCONbits	set	4082
    88  0000                     _TMR0IF	set	32658
    89                           
    90                           ; #config settings
    91  00080B  00                 	db	0	; dummy byte at the end
    92  0000                     
    93                           	psect	cinit
    94  0008C4                     __pcinit:
    95                           	opt stack 0
    96  0008C4                     start_initialization:
    97                           	opt stack 0
    98  0008C4                     __initialization:
    99                           	opt stack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (2 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  0008C4  0EF6               	movlw	low __pidataCOMRAM
   104  0008C6  6EF6               	movwf	tblptrl,c
   105  0008C8  0E08               	movlw	high __pidataCOMRAM
   106  0008CA  6EF7               	movwf	tblptrh,c
   107  0008CC  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  0008CE  6EF8               	movwf	tblptru,c
   109  0008D0  0009               	tblrd		*+	;fetch initializer
   110  0008D2  CFF5 F016          	movff	tablat,__pdataCOMRAM
   111  0008D6  0009               	tblrd		*+	;fetch initializer
   112  0008D8  CFF5 F017          	movff	tablat,__pdataCOMRAM+1
   113                           
   114                           ; Clear objects allocated to COMRAM (4 bytes)
   115  0008DC  6A15               	clrf	(__pbssCOMRAM+3)& (0+255),c
   116  0008DE  6A14               	clrf	(__pbssCOMRAM+2)& (0+255),c
   117  0008E0  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   118  0008E2  6A12               	clrf	__pbssCOMRAM& (0+255),c
   119  0008E4                     end_of_initialization:
   120                           	opt stack 0
   121  0008E4                     __end_of__initialization:
   122                           	opt stack 0
   123  0008E4  9018               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   124  0008E6  9218               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   125  0008E8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   126  0008EA  6EF8               	movwf	tblptru,c
   127  0008EC  0E08               	movlw	high __Lsmallconst
   128  0008EE  6EF7               	movwf	tblptrh,c
   129  0008F0  0100               	movlb	0
   130  0008F2  EF06  F004         	goto	_main	;jump to C main() function
   131                           tblptru	equ	0xFF8
   132                           tblptrh	equ	0xFF7
   133                           tblptrl	equ	0xFF6
   134                           tablat	equ	0xFF5
   135                           
   136                           	psect	bssCOMRAM
   137  000012                     __pbssCOMRAM:
   138                           	opt stack 0
   139  000012                     _verdeLigado:
   140                           	opt stack 0
   141  000012                     	ds	1
   142  000013                     _amareloLigado:
   143                           	opt stack 0
   144  000013                     	ds	1
   145  000014                     _cont:
   146                           	opt stack 0
   147  000014                     	ds	1
   148  000015                     _flagSegundo:
   149                           	opt stack 0
   150  000015                     	ds	1
   151                           tblptru	equ	0xFF8
   152                           tblptrh	equ	0xFF7
   153                           tblptrl	equ	0xFF6
   154                           tablat	equ	0xFF5
   155                           
   156                           	psect	dataCOMRAM
   157  000016                     __pdataCOMRAM:
   158                           	opt stack 0
   159  000016                     _vermelhoLigado:
   160                           	opt stack 0
   161  000016                     	ds	1
   162  000017                     _contSemaforo:
   163                           	opt stack 0
   164  000017                     	ds	1
   165                           tblptru	equ	0xFF8
   166                           tblptrh	equ	0xFF7
   167                           tblptrl	equ	0xFF6
   168                           tablat	equ	0xFF5
   169                           
   170                           	psect	cstackCOMRAM
   171  000001                     __pcstackCOMRAM:
   172                           	opt stack 0
   173  000001                     ??_pic_isr:
   174  000001                     
   175                           ; 1 bytes @ 0x0
   176  000001                     	ds	17
   177  000012                     tblptru	equ	0xFF8
   178                           tblptrh	equ	0xFF7
   179                           tblptrl	equ	0xFF6
   180                           tablat	equ	0xFF5
   181                           
   182                           ; 1 bytes @ 0x11
   183 ;;
   184 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   185 ;;
   186 ;; *************** function _main *****************
   187 ;; Defined at:
   188 ;;		line 57 in file "main.c"
   189 ;; Parameters:    Size  Location     Type
   190 ;;		None
   191 ;; Auto vars:     Size  Location     Type
   192 ;;		None
   193 ;; Return value:  Size  Location     Type
   194 ;;                  1    wreg      void 
   195 ;; Registers used:
   196 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   197 ;; Tracked objects:
   198 ;;		On entry : 0/0
   199 ;;		On exit  : 0/0
   200 ;;		Unchanged: 0/0
   201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   202 ;;      Params:         0       0       0       0       0       0       0       0       0
   203 ;;      Locals:         0       0       0       0       0       0       0       0       0
   204 ;;      Temps:          0       0       0       0       0       0       0       0       0
   205 ;;      Totals:         0       0       0       0       0       0       0       0       0
   206 ;;Total ram usage:        0 bytes
   207 ;; Hardware stack levels required when called:    1
   208 ;; This function calls:
   209 ;;		Nothing
   210 ;; This function is called by:
   211 ;;		Startup code after reset
   212 ;; This function uses a non-reentrant model
   213 ;;
   214                           
   215                           	psect	text0
   216  00080C                     __ptext0:
   217                           	opt stack 0
   218  00080C                     _main:
   219                           	opt stack 30
   220                           
   221                           ;main.c: 59: ADCON1 = 0x0F;
   222                           
   223                           ;incstack = 0
   224  00080C  0E0F               	movlw	15
   225  00080E  6EC1               	movwf	4033,c	;volatile
   226                           
   227                           ;main.c: 60: TRISB = 0x00;
   228  000810  0E00               	movlw	0
   229  000812  6E93               	movwf	3987,c	;volatile
   230                           
   231                           ;main.c: 61: TRISC = 0x00;
   232  000814  0E00               	movlw	0
   233  000816  6E94               	movwf	3988,c	;volatile
   234                           
   235                           ;main.c: 63: T0CONbits.TMR0ON = 0;
   236  000818  9ED5               	bcf	4053,7,c	;volatile
   237                           
   238                           ;main.c: 64: INTCONbits.TMR0IE = 1;
   239  00081A  8AF2               	bsf	intcon,5,c	;volatile
   240                           
   241                           ;main.c: 65: INTCONbits.TMR0IF = 0;
   242  00081C  94F2               	bcf	intcon,2,c	;volatile
   243                           
   244                           ;main.c: 66: T0CONbits.T08BIT = 0;
   245  00081E  9CD5               	bcf	4053,6,c	;volatile
   246                           
   247                           ;main.c: 67: T0CONbits.PSA = 0;
   248  000820  96D5               	bcf	4053,3,c	;volatile
   249                           
   250                           ;main.c: 68: T0CONbits.T0PS0 = 1;
   251  000822  80D5               	bsf	4053,0,c	;volatile
   252                           
   253                           ;main.c: 69: T0CONbits.T0PS1 = 0;
   254  000824  92D5               	bcf	4053,1,c	;volatile
   255                           
   256                           ;main.c: 70: T0CONbits.T0PS2 = 1;
   257  000826  84D5               	bsf	4053,2,c	;volatile
   258                           
   259                           ;main.c: 71: T0CONbits.T0CS = 0;
   260  000828  9AD5               	bcf	4053,5,c	;volatile
   261                           
   262                           ;main.c: 72: TMR0 = 26474;
   263  00082A  0E67               	movlw	103
   264  00082C  6ED7               	movwf	4055,c	;volatile
   265  00082E  0E6A               	movlw	106
   266  000830  6ED6               	movwf	4054,c	;volatile
   267                           
   268                           ;main.c: 73: T0CONbits.TMR0ON = 1;
   269  000832  8ED5               	bsf	4053,7,c	;volatile
   270                           
   271                           ;main.c: 74: INTCONbits.GIEH = 1;
   272  000834  8EF2               	bsf	intcon,7,c	;volatile
   273                           
   274                           ;main.c: 75: INTCONbits.GIEL = 1;
   275  000836  8CF2               	bsf	intcon,6,c	;volatile
   276                           
   277                           ;main.c: 76: PORTCbits.RC0 = 1;
   278  000838  8082               	bsf	3970,0,c	;volatile
   279  00083A                     l40:
   280                           
   281                           ;main.c: 79: if(flagSegundo){
   282  00083A  5015               	movf	_flagSegundo,w,c
   283  00083C  B4D8               	btfsc	status,2,c
   284  00083E  D7FD               	goto	l40
   285                           
   286                           ;main.c: 81: if(contSemaforo != 0)
   287  000840  5017               	movf	_contSemaforo,w,c
   288  000842  B4D8               	btfsc	status,2,c
   289  000844  D011               	goto	l696
   290                           
   291                           ;main.c: 84: if(( contSemaforo == 1 && verdeLigado == 0)&&(amareloLigado == 0) ){
   292  000846  0417               	decf	_contSemaforo,w,c
   293  000848  A4D8               	btfss	status,2,c
   294  00084A  D00E               	goto	l696
   295  00084C  5012               	movf	_verdeLigado,w,c
   296  00084E  A4D8               	btfss	status,2,c
   297  000850  D00B               	goto	l696
   298  000852  5013               	movf	_amareloLigado,w,c
   299  000854  A4D8               	btfss	status,2,c
   300  000856  D008               	goto	l696
   301                           
   302                           ;main.c: 85: PORTCbits.RC0 = 0;
   303  000858  9082               	bcf	3970,0,c	;volatile
   304                           
   305                           ;main.c: 86: PORTCbits.RC2 = 1;
   306  00085A  8482               	bsf	3970,2,c	;volatile
   307                           
   308                           ;main.c: 87: contSemaforo = 8;
   309  00085C  0E08               	movlw	8
   310  00085E  6E17               	movwf	_contSemaforo,c
   311                           
   312                           ;main.c: 88: vermelhoLigado = 0;
   313  000860  0E00               	movlw	0
   314  000862  6E16               	movwf	_vermelhoLigado,c
   315                           
   316                           ;main.c: 89: verdeLigado = 1;
   317  000864  0E01               	movlw	1
   318  000866  6E12               	movwf	_verdeLigado,c
   319  000868                     l696:
   320                           
   321                           ;main.c: 90: }
   322                           ;main.c: 91: if(( contSemaforo == 1 && verdeLigado == 1)&&(vermelhoLigado == 0)){
   323  000868  0417               	decf	_contSemaforo,w,c
   324  00086A  A4D8               	btfss	status,2,c
   325  00086C  D00E               	goto	l706
   326  00086E  0412               	decf	_verdeLigado,w,c
   327  000870  A4D8               	btfss	status,2,c
   328  000872  D00B               	goto	l706
   329  000874  5016               	movf	_vermelhoLigado,w,c
   330  000876  A4D8               	btfss	status,2,c
   331  000878  D008               	goto	l706
   332                           
   333                           ;main.c: 92: PORTCbits.RC1 = 1;
   334  00087A  8282               	bsf	3970,1,c	;volatile
   335                           
   336                           ;main.c: 93: PORTCbits.RC2 = 0;
   337  00087C  9482               	bcf	3970,2,c	;volatile
   338                           
   339                           ;main.c: 94: contSemaforo = 3;
   340  00087E  0E03               	movlw	3
   341  000880  6E17               	movwf	_contSemaforo,c
   342                           
   343                           ;main.c: 95: amareloLigado =1;
   344  000882  0E01               	movlw	1
   345  000884  6E13               	movwf	_amareloLigado,c
   346                           
   347                           ;main.c: 96: verdeLigado = 0;
   348  000886  0E00               	movlw	0
   349  000888  6E12               	movwf	_verdeLigado,c
   350  00088A                     l706:
   351                           
   352                           ;main.c: 97: }
   353                           ;main.c: 98: if(( contSemaforo == 1) &&(amareloLigado == 1)){
   354  00088A  0417               	decf	_contSemaforo,w,c
   355  00088C  A4D8               	btfss	status,2,c
   356  00088E  D00B               	goto	l714
   357  000890  0413               	decf	_amareloLigado,w,c
   358  000892  A4D8               	btfss	status,2,c
   359  000894  D008               	goto	l714
   360                           
   361                           ;main.c: 99: PORTCbits.RC1 = 0;
   362  000896  9282               	bcf	3970,1,c	;volatile
   363                           
   364                           ;main.c: 100: PORTCbits.RC0 = 1;
   365  000898  8082               	bsf	3970,0,c	;volatile
   366                           
   367                           ;main.c: 101: vermelhoLigado = 1;
   368  00089A  0E01               	movlw	1
   369  00089C  6E16               	movwf	_vermelhoLigado,c
   370                           
   371                           ;main.c: 102: amareloLigado = 0;
   372  00089E  0E00               	movlw	0
   373  0008A0  6E13               	movwf	_amareloLigado,c
   374                           
   375                           ;main.c: 103: contSemaforo = 5;
   376  0008A2  0E05               	movlw	5
   377  0008A4  6E17               	movwf	_contSemaforo,c
   378  0008A6                     l714:
   379                           
   380                           ;main.c: 104: }
   381                           ;main.c: 106: contSemaforo--;
   382  0008A6  0617               	decf	_contSemaforo,f,c
   383                           
   384                           ;main.c: 107: PORTB = display[contSemaforo];
   385  0008A8  5017               	movf	_contSemaforo,w,c
   386  0008AA  0D01               	mullw	1
   387  0008AC  0E01               	movlw	low _display
   388  0008AE  24F3               	addwf	prodl,w,c
   389  0008B0  6EF6               	movwf	tblptrl,c
   390  0008B2  0E08               	movlw	high _display
   391  0008B4  20F4               	addwfc	prodh,w,c
   392  0008B6  6EF7               	movwf	tblptrh,c
   393  0008B8                     	if	0	;There are less than 3 active tblptr bytes
   394  0008B8                     	endif
   395  0008B8  0008               	tblrd		*
   396  0008BA  CFF5 FF81          	movff	tablat,3969	;volatile
   397                           
   398                           ;main.c: 108: flagSegundo = 0;
   399  0008BE  0E00               	movlw	0
   400  0008C0  6E15               	movwf	_flagSegundo,c
   401  0008C2  D7BB               	goto	l40
   402  0008C4                     __end_of_main:
   403                           	opt stack 0
   404                           tblptru	equ	0xFF8
   405                           tblptrh	equ	0xFF7
   406                           tblptrl	equ	0xFF6
   407                           tablat	equ	0xFF5
   408                           prodh	equ	0xFF4
   409                           prodl	equ	0xFF3
   410                           intcon	equ	0xFF2
   411                           status	equ	0xFD8
   412                           
   413 ;; *************** function _pic_isr *****************
   414 ;; Defined at:
   415 ;;		line 37 in file "main.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   429 ;;      Params:         0       0       0       0       0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0       0       0       0       0
   431 ;;      Temps:         17       0       0       0       0       0       0       0       0
   432 ;;      Totals:        17       0       0       0       0       0       0       0       0
   433 ;;Total ram usage:       17 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		Interrupt level 1
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	intcodelo
   443  000018                     __pintcodelo:
   444                           	opt stack 0
   445  000018                     _pic_isr:
   446                           	opt stack 30
   447                           
   448                           ;incstack = 0
   449  000018  8018               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   450  00001A  CFD8 F001          	movff	status,??_pic_isr
   451  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   452  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   453  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   454  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   455  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   456  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   457  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   458  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   459  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   460  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   461  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   462  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   463  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   464  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   465  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   466  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   467                           
   468                           ;main.c: 41: if(TMR0IF){
   469  00005E  A4F2               	btfss	intcon,2,c	;volatile
   470  000060  D00D               	goto	i1l37
   471                           
   472                           ;main.c: 43: cont++;
   473  000062  2A14               	incf	_cont,f,c
   474                           
   475                           ;main.c: 44: if(cont > 1){
   476  000064  0E01               	movlw	1
   477  000066  6414               	cpfsgt	_cont,c
   478  000068  D004               	goto	i1l36
   479                           
   480                           ;main.c: 45: flagSegundo = 1;
   481  00006A  0E01               	movlw	1
   482  00006C  6E15               	movwf	_flagSegundo,c
   483                           
   484                           ;main.c: 46: cont = 0;
   485  00006E  0E00               	movlw	0
   486  000070  6E14               	movwf	_cont,c
   487  000072                     i1l36:
   488                           
   489                           ;main.c: 47: }
   490                           ;main.c: 50: TMR0 = 26474;
   491  000072  0E67               	movlw	103
   492  000074  6ED7               	movwf	4055,c	;volatile
   493  000076  0E6A               	movlw	106
   494  000078  6ED6               	movwf	4054,c	;volatile
   495                           
   496                           ;main.c: 51: INTCONbits.TMR0IF = 0;
   497  00007A  94F2               	bcf	intcon,2,c	;volatile
   498  00007C                     i1l37:
   499  00007C  C011  FFF5         	movff	??_pic_isr+16,tablat
   500  000080  C010  FFF8         	movff	??_pic_isr+15,tblptru
   501  000084  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   502  000088  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   503  00008C  C00D  FFF4         	movff	??_pic_isr+12,prodh
   504  000090  C00C  FFF3         	movff	??_pic_isr+11,prodl
   505  000094  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   506  000098  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   507  00009C  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   508  0000A0  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   509  0000A4  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   510  0000A8  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   511  0000AC  C005  FFFB         	movff	??_pic_isr+4,pclatu
   512  0000B0  C004  FFFA         	movff	??_pic_isr+3,pclath
   513  0000B4  C003  FFE0         	movff	??_pic_isr+2,bsr
   514  0000B8  C002  FFE8         	movff	??_pic_isr+1,wreg
   515  0000BC  C001  FFD8         	movff	??_pic_isr,status
   516  0000C0  9018               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   517  0000C2  0010               	retfie	
   518  0000C4                     __end_of_pic_isr:
   519                           	opt stack 0
   520                           pclatu	equ	0xFFB
   521                           pclath	equ	0xFFA
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           prodh	equ	0xFF4
   527                           prodl	equ	0xFF3
   528                           intcon	equ	0xFF2
   529                           fsr0h	equ	0xFEA
   530                           fsr0l	equ	0xFE9
   531                           wreg	equ	0xFE8
   532                           fsr1h	equ	0xFE2
   533                           fsr1l	equ	0xFE1
   534                           bsr	equ	0xFE0
   535                           fsr2h	equ	0xFDA
   536                           fsr2l	equ	0xFD9
   537                           status	equ	0xFD8
   538                           pclatu	equ	0xFFB
   539                           pclath	equ	0xFFA
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           prodh	equ	0xFF4
   545                           prodl	equ	0xFF3
   546                           intcon	equ	0xFF2
   547                           fsr0h	equ	0xFEA
   548                           fsr0l	equ	0xFE9
   549                           wreg	equ	0xFE8
   550                           fsr1h	equ	0xFE2
   551                           fsr1l	equ	0xFE1
   552                           bsr	equ	0xFE0
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557                           	psect	rparam
   558  0000                     pclatu	equ	0xFFB
   559                           pclath	equ	0xFFA
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           prodh	equ	0xFF4
   565                           prodl	equ	0xFF3
   566                           intcon	equ	0xFF2
   567                           fsr0h	equ	0xFEA
   568                           fsr0l	equ	0xFE9
   569                           wreg	equ	0xFE8
   570                           fsr1h	equ	0xFE2
   571                           fsr1l	equ	0xFE1
   572                           bsr	equ	0xFE0
   573                           fsr2h	equ	0xFDA
   574                           fsr2l	equ	0xFD9
   575                           status	equ	0xFD8
   576                           
   577                           	psect	temp
   578  000018                     btemp:
   579                           	opt stack 0
   580  000018                     	ds	1
   581  0000                     int$flags	set	btemp
   582                           pclatu	equ	0xFFB
   583                           pclath	equ	0xFFA
   584                           tblptru	equ	0xFF8
   585                           tblptrh	equ	0xFF7
   586                           tblptrl	equ	0xFF6
   587                           tablat	equ	0xFF5
   588                           prodh	equ	0xFF4
   589                           prodl	equ	0xFF3
   590                           intcon	equ	0xFF2
   591                           fsr0h	equ	0xFEA
   592                           fsr0l	equ	0xFE9
   593                           wreg	equ	0xFE8
   594                           fsr1h	equ	0xFE2
   595                           fsr1l	equ	0xFE1
   596                           bsr	equ	0xFE0
   597                           fsr2h	equ	0xFDA
   598                           fsr2l	equ	0xFD9
   599                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        2
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      17       1       24.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      20        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Apr 05 15:17:25 2018

                     l40 083A                       bsr 000FE0                      l714 08A6  
                    l706 088A                      l696 0868                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i1l36 0072                     i1l37 007C  
                   _TMR0 000FD6                     _cont 0014                     _main 080C  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0018                     prodh 000FF4                     prodl 000FF3  
                   start 00C4             ___param_bank 000000                    ?_main 0001  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISC 000F94  
        __end_of_display 080B          __end_of_pic_isr 00C4                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 08C4  
           __end_of_main 08C4                   ??_main 0012            __activetblptr 000001  
                 _ADCON1 000FC1                   _TMR0IF 007F92             __pdataCOMRAM 0016  
              ??_pic_isr 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 08E4          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 08C4                  __ramtop 0800  
                __ptext0 080C                  _display 0801                _T0CONbits 000FD5  
                _pic_isr 0018     end_of_initialization 08E4             _contSemaforo 0017  
              _PORTCbits 000F82            __pidataCOMRAM 08F6      start_initialization 08C4  
          _amareloLigado 0013              __pbssCOMRAM 0012              __pintcodelo 0018  
            _flagSegundo 0015              __smallconst 0800                 ?_pic_isr 0001  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
       __size_of_pic_isr 00AC            __size_of_main 00B8                 int$flags 0018  
             _INTCONbits 000FF2                 intlevel1 0000              _verdeLigado 0012  
         _vermelhoLigado 0016  
