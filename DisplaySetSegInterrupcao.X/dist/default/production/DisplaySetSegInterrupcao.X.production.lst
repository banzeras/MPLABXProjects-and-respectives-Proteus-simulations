

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 29 14:33:16 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11  0000                     
    12                           ; Version 1.41
    13                           ; Generated 25/01/2017 GMT
    14                           ; 
    15                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC18F4550 Definitions
    44                           ; 
    45                           ; SFR Addresses
    46  0000                     
    47                           	psect	smallconst
    48  000800                     __psmallconst:
    49                           	opt stack 0
    50  000800  00                 	db	0
    51  000801                     _display:
    52                           	opt stack 0
    53  000801  3F                 	db	63
    54  000802  06                 	db	6
    55  000803  5B                 	db	91
    56  000804  4F                 	db	79
    57  000805  66                 	db	102
    58  000806  6D                 	db	109
    59  000807  7D                 	db	125
    60  000808  07                 	db	7
    61  000809  7F                 	db	127
    62  00080A  6F                 	db	111
    63  00080B                     __end_of_display:
    64                           	opt stack 0
    65  0000                     _TMR0	set	4054
    66  0000                     _PORTB	set	3969
    67  0000                     _INTCONbits	set	4082
    68  0000                     _T0CONbits	set	4053
    69  0000                     _TRISB	set	3987
    70  0000                     _ADCON1	set	4033
    71                           
    72                           ; #config settings
    73  00080B  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           	psect	cinit
    76  000866                     __pcinit:
    77                           	opt stack 0
    78  000866                     start_initialization:
    79                           	opt stack 0
    80  000866                     __initialization:
    81                           	opt stack 0
    82  000866                     end_of_initialization:
    83                           	opt stack 0
    84  000866                     __end_of__initialization:
    85                           	opt stack 0
    86  000866  0E00               	movlw	low (__Lsmallconst shr (0+16))
    87  000868  6EF8               	movwf	tblptru,c
    88  00086A  0E08               	movlw	high __Lsmallconst
    89  00086C  6EF7               	movwf	tblptrh,c
    90  00086E  0100               	movlb	0
    91  000870  EF06  F004         	goto	_main	;jump to C main() function
    92                           tblptru	equ	0xFF8
    93                           tblptrh	equ	0xFF7
    94                           
    95                           	psect	cstackCOMRAM
    96  000001                     __pcstackCOMRAM:
    97                           	opt stack 0
    98  000001                     main@cont:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x0
   102  000001                     	ds	1
   103                           tblptru	equ	0xFF8
   104                           tblptrh	equ	0xFF7
   105                           
   106 ;;
   107 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   108 ;;
   109 ;; *************** function _main *****************
   110 ;; Defined at:
   111 ;;		line 29 in file "main.c"
   112 ;; Parameters:    Size  Location     Type
   113 ;;		None
   114 ;; Auto vars:     Size  Location     Type
   115 ;;  cont            1    0[COMRAM] unsigned char 
   116 ;; Return value:  Size  Location     Type
   117 ;;                  1    wreg      void 
   118 ;; Registers used:
   119 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   120 ;; Tracked objects:
   121 ;;		On entry : 0/0
   122 ;;		On exit  : 0/0
   123 ;;		Unchanged: 0/0
   124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   125 ;;      Params:         0       0       0       0       0       0       0       0       0
   126 ;;      Locals:         1       0       0       0       0       0       0       0       0
   127 ;;      Temps:          0       0       0       0       0       0       0       0       0
   128 ;;      Totals:         1       0       0       0       0       0       0       0       0
   129 ;;Total ram usage:        1 bytes
   130 ;; This function calls:
   131 ;;		Nothing
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138  00080C                     __ptext0:
   139                           	opt stack 0
   140  00080C                     _main:
   141                           	opt stack 31
   142                           
   143                           ;main.c: 30: ADCON1 = 0x0F;
   144                           
   145                           ;incstack = 0
   146  00080C  0E0F               	movlw	15
   147  00080E  6EC1               	movwf	4033,c	;volatile
   148                           
   149                           ;main.c: 31: TRISB = 0x00;
   150  000810  0E00               	movlw	0
   151  000812  6E93               	movwf	3987,c	;volatile
   152                           
   153                           ;main.c: 32: char cont = 0;
   154  000814  0E00               	movlw	0
   155  000816  6E01               	movwf	main@cont,c
   156                           
   157                           ;main.c: 34: T0CONbits.TMR0ON = 0;
   158  000818  9ED5               	bcf	4053,7,c	;volatile
   159                           
   160                           ;main.c: 35: INTCONbits.TMR0IE = 1;
   161  00081A  8AF2               	bsf	intcon,5,c	;volatile
   162                           
   163                           ;main.c: 36: INTCONbits.TMR0IF = 0;
   164  00081C  94F2               	bcf	intcon,2,c	;volatile
   165                           
   166                           ;main.c: 37: T0CONbits.T08BIT = 0;
   167  00081E  9CD5               	bcf	4053,6,c	;volatile
   168                           
   169                           ;main.c: 38: T0CONbits.PSA = 0;
   170  000820  96D5               	bcf	4053,3,c	;volatile
   171                           
   172                           ;main.c: 39: T0CONbits.T0PS0 = 0;
   173  000822  90D5               	bcf	4053,0,c	;volatile
   174                           
   175                           ;main.c: 40: T0CONbits.T0PS1 = 1;
   176  000824  82D5               	bsf	4053,1,c	;volatile
   177                           
   178                           ;main.c: 41: T0CONbits.T0PS2 = 1;
   179  000826  84D5               	bsf	4053,2,c	;volatile
   180                           
   181                           ;main.c: 42: T0CONbits.T0CS = 0;
   182  000828  9AD5               	bcf	4053,5,c	;volatile
   183                           
   184                           ;main.c: 43: TMR0 = 26474;
   185  00082A  0E67               	movlw	103
   186  00082C  6ED7               	movwf	4055,c	;volatile
   187  00082E  0E6A               	movlw	106
   188  000830  6ED6               	movwf	4054,c	;volatile
   189                           
   190                           ;main.c: 44: T0CONbits.TMR0ON = 1;
   191  000832  8ED5               	bsf	4053,7,c	;volatile
   192  000834                     l642:
   193                           
   194                           ;main.c: 49: if(INTCONbits.TMR0IF == 1){
   195  000834  A4F2               	btfss	intcon,2,c	;volatile
   196  000836  D7FE               	goto	l642
   197                           
   198                           ;main.c: 51: PORTB = display[cont];
   199  000838  5001               	movf	main@cont,w,c
   200  00083A  0D01               	mullw	1
   201  00083C  0E01               	movlw	low _display
   202  00083E  24F3               	addwf	prodl,w,c
   203  000840  6EF6               	movwf	tblptrl,c
   204  000842  0E08               	movlw	high _display
   205  000844  20F4               	addwfc	prodh,w,c
   206  000846  6EF7               	movwf	tblptrh,c
   207  000848                     	if	0	;There are less than 3 active tblptr bytes
   208  000848                     	endif
   209  000848  0008               	tblrd		*
   210  00084A  CFF5 FF81          	movff	tablat,3969	;volatile
   211                           
   212                           ;main.c: 52: cont++;
   213  00084E  2A01               	incf	main@cont,f,c
   214                           
   215                           ;main.c: 54: if(cont >9) cont = 0;
   216  000850  0E09               	movlw	9
   217  000852  6401               	cpfsgt	main@cont,c
   218  000854  D002               	goto	l19
   219  000856  0E00               	movlw	0
   220  000858  6E01               	movwf	main@cont,c
   221  00085A                     l19:
   222                           
   223                           ;main.c: 58: TMR0 = 26474;
   224  00085A  0E67               	movlw	103
   225  00085C  6ED7               	movwf	4055,c	;volatile
   226  00085E  0E6A               	movlw	106
   227  000860  6ED6               	movwf	4054,c	;volatile
   228                           
   229                           ;main.c: 59: INTCONbits.TMR0IF = 0;
   230  000862  94F2               	bcf	intcon,2,c	;volatile
   231  000864  D7E7               	goto	l642
   232  000866                     __end_of_main:
   233                           	opt stack 0
   234                           tblptru	equ	0xFF8
   235                           tblptrh	equ	0xFF7
   236                           tblptrl	equ	0xFF6
   237                           tablat	equ	0xFF5
   238                           prodh	equ	0xFF4
   239                           prodl	equ	0xFF3
   240                           intcon	equ	0xFF2
   241                           tblptru	equ	0xFF8
   242                           tblptrh	equ	0xFF7
   243                           tblptrl	equ	0xFF6
   244                           tablat	equ	0xFF5
   245                           prodh	equ	0xFF4
   246                           prodl	equ	0xFF3
   247                           intcon	equ	0xFF2
   248                           
   249                           	psect	rparam
   250  0000                     tblptru	equ	0xFF8
   251                           tblptrh	equ	0xFF7
   252                           tblptrl	equ	0xFF6
   253                           tablat	equ	0xFF5
   254                           prodh	equ	0xFF4
   255                           prodl	equ	0xFF3
   256                           intcon	equ	0xFF2


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      1       1
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      1       1       1        1.1%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 29 14:33:16 2018

                     l19 085A                      l642 0834             __CFG_WDT$OFF 000000  
                   _TMR0 000FD6                     _main 080C                     prodh 000FF4  
                   prodl 000FF3                     start 0000             ___param_bank 000000  
                  ?_main 0001                    _PORTB 000F81                    _TRISB 000F93  
        __end_of_display 080B                    tablat 000FF5          __initialization 0866  
           __end_of_main 0866                   ??_main 0001            __activetblptr 000001  
                 _ADCON1 000FC1             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0866          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 0866                  __ramtop 0800  
                __ptext0 080C                  _display 0801                _T0CONbits 000FD5  
   end_of_initialization 0866      start_initialization 0866              __smallconst 0800  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
          __size_of_main 005A                 main@cont 0001               _INTCONbits 000FF2  
