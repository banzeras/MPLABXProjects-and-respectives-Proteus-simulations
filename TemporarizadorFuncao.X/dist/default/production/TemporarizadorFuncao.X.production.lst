

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 15 13:52:48 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _TMR0	set	4054
    48  0000                     _T0CONbits	set	4053
    49  0000                     _PORTDbits	set	3971
    50  0000                     _INTCONbits	set	4082
    51  0000                     _TMR0IF	set	32658
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  000100                     __pcinit:
    57                           	opt stack 0
    58  000100                     start_initialization:
    59                           	opt stack 0
    60  000100                     __initialization:
    61                           	opt stack 0
    62  000100                     end_of_initialization:
    63                           	opt stack 0
    64  000100                     __end_of__initialization:
    65                           	opt stack 0
    66  000100  9014               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    67  000102  9214               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    68  000104  0100               	movlb	0
    69  000106  EF6F  F000         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	cstackCOMRAM
    72  000001                     __pcstackCOMRAM:
    73                           	opt stack 0
    74  000001                     ??_pic_isr:
    75  000001                     
    76                           ; 1 bytes @ 0x0
    77  000001                     	ds	18
    78  000013                     pic_isr@x:
    79                           	opt stack 0
    80                           
    81                           ; 1 bytes @ 0x12
    82  000013                     	ds	1
    83  000014                     
    84                           ; 1 bytes @ 0x13
    85 ;;
    86 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    87 ;;
    88 ;; *************** function _main *****************
    89 ;; Defined at:
    90 ;;		line 35 in file "main.c"
    91 ;; Parameters:    Size  Location     Type
    92 ;;		None
    93 ;; Auto vars:     Size  Location     Type
    94 ;;		None
    95 ;; Return value:  Size  Location     Type
    96 ;;                  1    wreg      void 
    97 ;; Registers used:
    98 ;;		wreg, status,2
    99 ;; Tracked objects:
   100 ;;		On entry : 0/0
   101 ;;		On exit  : 0/0
   102 ;;		Unchanged: 0/0
   103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   104 ;;      Params:         0       0       0       0       0       0       0       0       0
   105 ;;      Locals:         0       0       0       0       0       0       0       0       0
   106 ;;      Temps:          0       0       0       0       0       0       0       0       0
   107 ;;      Totals:         0       0       0       0       0       0       0       0       0
   108 ;;Total ram usage:        0 bytes
   109 ;; Hardware stack levels required when called:    1
   110 ;; This function calls:
   111 ;;		Nothing
   112 ;; This function is called by:
   113 ;;		Startup code after reset
   114 ;; This function uses a non-reentrant model
   115 ;;
   116                           
   117                           	psect	text0
   118  0000DE                     __ptext0:
   119                           	opt stack 0
   120  0000DE                     _main:
   121                           	opt stack 30
   122                           
   123                           ;main.c: 37: T0CONbits.TMR0ON = 0;
   124                           
   125                           ;incstack = 0
   126  0000DE  9ED5               	bcf	4053,7,c	;volatile
   127                           
   128                           ;main.c: 39: INTCONbits.TMR0IF = 1;
   129  0000E0  84F2               	bsf	intcon,2,c	;volatile
   130                           
   131                           ;main.c: 40: INTCONbits.TMR0IF = 0;
   132  0000E2  94F2               	bcf	intcon,2,c	;volatile
   133                           
   134                           ;main.c: 42: T0CONbits.T08BIT = 0;
   135  0000E4  9CD5               	bcf	4053,6,c	;volatile
   136                           
   137                           ;main.c: 43: T0CONbits.PSA = 0;
   138  0000E6  96D5               	bcf	4053,3,c	;volatile
   139                           
   140                           ;main.c: 45: T0CONbits.T0PS0 = 1;
   141  0000E8  80D5               	bsf	4053,0,c	;volatile
   142                           
   143                           ;main.c: 46: T0CONbits.T0PS1 = 1;
   144  0000EA  82D5               	bsf	4053,1,c	;volatile
   145                           
   146                           ;main.c: 47: T0CONbits.T0PS2 = 0;
   147  0000EC  94D5               	bcf	4053,2,c	;volatile
   148                           
   149                           ;main.c: 48: T0CONbits.T0CS = 0;
   150  0000EE  9AD5               	bcf	4053,5,c	;volatile
   151                           
   152                           ;main.c: 50: TMR0 = 0;
   153  0000F0  0E00               	movlw	0
   154  0000F2  6ED7               	movwf	4055,c	;volatile
   155  0000F4  0E00               	movlw	0
   156  0000F6  6ED6               	movwf	4054,c	;volatile
   157                           
   158                           ;main.c: 51: T0CONbits.TMR0ON = 1;
   159  0000F8  8ED5               	bsf	4053,7,c	;volatile
   160                           
   161                           ;main.c: 53: INTCONbits.GIEH = 1;
   162  0000FA  8EF2               	bsf	intcon,7,c	;volatile
   163                           
   164                           ;main.c: 54: INTCONbits.GIEL = 1;
   165  0000FC  8CF2               	bsf	intcon,6,c	;volatile
   166  0000FE                     l18:
   167  0000FE  D7FF               	goto	l18
   168  000100                     __end_of_main:
   169                           	opt stack 0
   170                           intcon	equ	0xFF2
   171                           
   172 ;; *************** function _pic_isr *****************
   173 ;; Defined at:
   174 ;;		line 16 in file "main.c"
   175 ;; Parameters:    Size  Location     Type
   176 ;;		None
   177 ;; Auto vars:     Size  Location     Type
   178 ;;  x               1   18[COMRAM] unsigned char 
   179 ;; Return value:  Size  Location     Type
   180 ;;                  1    wreg      void 
   181 ;; Registers used:
   182 ;;		wreg, status,2, status,0
   183 ;; Tracked objects:
   184 ;;		On entry : 0/0
   185 ;;		On exit  : 0/0
   186 ;;		Unchanged: 0/0
   187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   188 ;;      Params:         0       0       0       0       0       0       0       0       0
   189 ;;      Locals:         1       0       0       0       0       0       0       0       0
   190 ;;      Temps:         18       0       0       0       0       0       0       0       0
   191 ;;      Totals:        19       0       0       0       0       0       0       0       0
   192 ;;Total ram usage:       19 bytes
   193 ;; Hardware stack levels used:    1
   194 ;; This function calls:
   195 ;;		Nothing
   196 ;; This function is called by:
   197 ;;		Interrupt level 1
   198 ;; This function uses a non-reentrant model
   199 ;;
   200                           
   201                           	psect	intcodelo
   202  000018                     __pintcodelo:
   203                           	opt stack 0
   204  000018                     _pic_isr:
   205                           	opt stack 30
   206                           
   207                           ;incstack = 0
   208  000018  8014               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   209  00001A  CFD8 F002          	movff	status,??_pic_isr+1
   210  00001E  CFE8 F003          	movff	wreg,??_pic_isr+2
   211  000022  CFE0 F004          	movff	bsr,??_pic_isr+3
   212  000026  CFFA F005          	movff	pclath,??_pic_isr+4
   213  00002A  CFFB F006          	movff	pclatu,??_pic_isr+5
   214  00002E  CFE9 F007          	movff	fsr0l,??_pic_isr+6
   215  000032  CFEA F008          	movff	fsr0h,??_pic_isr+7
   216  000036  CFE1 F009          	movff	fsr1l,??_pic_isr+8
   217  00003A  CFE2 F00A          	movff	fsr1h,??_pic_isr+9
   218  00003E  CFD9 F00B          	movff	fsr2l,??_pic_isr+10
   219  000042  CFDA F00C          	movff	fsr2h,??_pic_isr+11
   220  000046  CFF3 F00D          	movff	prodl,??_pic_isr+12
   221  00004A  CFF4 F00E          	movff	prodh,??_pic_isr+13
   222  00004E  CFF6 F00F          	movff	tblptrl,??_pic_isr+14
   223  000052  CFF7 F010          	movff	tblptrh,??_pic_isr+15
   224  000056  CFF8 F011          	movff	tblptru,??_pic_isr+16
   225  00005A  CFF5 F012          	movff	tablat,??_pic_isr+17
   226                           
   227                           ;main.c: 18: char x;
   228                           ;main.c: 19: if(TMR0IF){
   229  00005E  A4F2               	btfss	intcon,2,c	;volatile
   230  000060  D018               	goto	i1l15
   231                           
   232                           ;main.c: 20: x++;
   233  000062  2A13               	incf	pic_isr@x,f,c
   234                           
   235                           ;main.c: 21: TMR0 = 0;
   236  000064  0E00               	movlw	0
   237  000066  6ED7               	movwf	4055,c	;volatile
   238  000068  0E00               	movlw	0
   239  00006A  6ED6               	movwf	4054,c	;volatile
   240                           
   241                           ;main.c: 22: INTCONbits.TMR0IF = 0;
   242  00006C  94F2               	bcf	intcon,2,c	;volatile
   243                           
   244                           ;main.c: 23: if(x==1)
   245  00006E  0413               	decf	pic_isr@x,w,c
   246  000070  A4D8               	btfss	status,2,c
   247  000072  D00F               	goto	i1l15
   248                           
   249                           ;main.c: 24: {
   250                           ;main.c: 25: PORTDbits.RD0 = PORTDbits.RD0 +1;
   251  000074  A083               	btfss	3971,0,c	;volatile
   252  000076  D003               	goto	i1u3_20
   253  000078  6A01               	clrf	??_pic_isr& (0+255),c
   254  00007A  2A01               	incf	??_pic_isr& (0+255),f,c
   255  00007C  D001               	goto	i1u3_28
   256  00007E                     i1u3_20:
   257  00007E  6A01               	clrf	??_pic_isr& (0+255),c
   258  000080                     i1u3_28:
   259  000080  0E01               	movlw	1
   260  000082  2601               	addwf	??_pic_isr,f,c
   261  000084  5083               	movf	3971,w,c	;volatile
   262  000086  1801               	xorwf	??_pic_isr,w,c
   263  000088  0BFE               	andlw	-2
   264  00008A  1801               	xorwf	??_pic_isr,w,c
   265  00008C  6E83               	movwf	3971,c	;volatile
   266                           
   267                           ;main.c: 26: x = 0;
   268  00008E  0E00               	movlw	0
   269  000090  6E13               	movwf	pic_isr@x,c
   270  000092                     i1l15:
   271  000092  C012  FFF5         	movff	??_pic_isr+17,tablat
   272  000096  C011  FFF8         	movff	??_pic_isr+16,tblptru
   273  00009A  C010  FFF7         	movff	??_pic_isr+15,tblptrh
   274  00009E  C00F  FFF6         	movff	??_pic_isr+14,tblptrl
   275  0000A2  C00E  FFF4         	movff	??_pic_isr+13,prodh
   276  0000A6  C00D  FFF3         	movff	??_pic_isr+12,prodl
   277  0000AA  C00C  FFDA         	movff	??_pic_isr+11,fsr2h
   278  0000AE  C00B  FFD9         	movff	??_pic_isr+10,fsr2l
   279  0000B2  C00A  FFE2         	movff	??_pic_isr+9,fsr1h
   280  0000B6  C009  FFE1         	movff	??_pic_isr+8,fsr1l
   281  0000BA  C008  FFEA         	movff	??_pic_isr+7,fsr0h
   282  0000BE  C007  FFE9         	movff	??_pic_isr+6,fsr0l
   283  0000C2  C006  FFFB         	movff	??_pic_isr+5,pclatu
   284  0000C6  C005  FFFA         	movff	??_pic_isr+4,pclath
   285  0000CA  C004  FFE0         	movff	??_pic_isr+3,bsr
   286  0000CE  C003  FFE8         	movff	??_pic_isr+2,wreg
   287  0000D2  C002  FFD8         	movff	??_pic_isr+1,status
   288  0000D6  9014               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   289  0000D8  0010               	retfie	
   290  0000DA                     __end_of_pic_isr:
   291                           	opt stack 0
   292  0000                     pclatu	equ	0xFFB
   293                           pclath	equ	0xFFA
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           prodh	equ	0xFF4
   299                           prodl	equ	0xFF3
   300                           intcon	equ	0xFF2
   301                           fsr0h	equ	0xFEA
   302                           fsr0l	equ	0xFE9
   303                           wreg	equ	0xFE8
   304                           fsr1h	equ	0xFE2
   305                           fsr1l	equ	0xFE1
   306                           bsr	equ	0xFE0
   307                           fsr2h	equ	0xFDA
   308                           fsr2l	equ	0xFD9
   309                           status	equ	0xFD8
   310                           pclatu	equ	0xFFB
   311                           pclath	equ	0xFFA
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           prodh	equ	0xFF4
   317                           prodl	equ	0xFF3
   318                           intcon	equ	0xFF2
   319                           fsr0h	equ	0xFEA
   320                           fsr0l	equ	0xFE9
   321                           wreg	equ	0xFE8
   322                           fsr1h	equ	0xFE2
   323                           fsr1l	equ	0xFE1
   324                           bsr	equ	0xFE0
   325                           fsr2h	equ	0xFDA
   326                           fsr2l	equ	0xFD9
   327                           status	equ	0xFD8
   328                           
   329                           	psect	rparam
   330  0000                     pclatu	equ	0xFFB
   331                           pclath	equ	0xFFA
   332                           tblptru	equ	0xFF8
   333                           tblptrh	equ	0xFF7
   334                           tblptrl	equ	0xFF6
   335                           tablat	equ	0xFF5
   336                           prodh	equ	0xFF4
   337                           prodl	equ	0xFF3
   338                           intcon	equ	0xFF2
   339                           fsr0h	equ	0xFEA
   340                           fsr0l	equ	0xFE9
   341                           wreg	equ	0xFE8
   342                           fsr1h	equ	0xFE2
   343                           fsr1l	equ	0xFE1
   344                           bsr	equ	0xFE0
   345                           fsr2h	equ	0xFDA
   346                           fsr2l	equ	0xFD9
   347                           status	equ	0xFD8
   348                           
   349                           	psect	temp
   350  000014                     btemp:
   351                           	opt stack 0
   352  000014                     	ds	1
   353  0000                     int$flags	set	btemp
   354                           pclatu	equ	0xFFB
   355                           pclath	equ	0xFFA
   356                           tblptru	equ	0xFF8
   357                           tblptrh	equ	0xFF7
   358                           tblptrl	equ	0xFF6
   359                           tablat	equ	0xFF5
   360                           prodh	equ	0xFF4
   361                           prodl	equ	0xFF3
   362                           intcon	equ	0xFF2
   363                           fsr0h	equ	0xFEA
   364                           fsr0l	equ	0xFE9
   365                           wreg	equ	0xFE8
   366                           fsr1h	equ	0xFE2
   367                           fsr1l	equ	0xFE1
   368                           bsr	equ	0xFE0
   369                           fsr2h	equ	0xFDA
   370                           fsr2l	equ	0xFD9
   371                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     19      19
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             19    19      0      15
                                              0 COMRAM    19    19      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     13      13       1       20.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 15 13:52:48 2018

                     l18 00FE                       bsr 000FE0                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i1l15 0092                     _TMR0 000FD6  
                   _main 00DE                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0014                     prodh 000FF4  
                   prodl 000FF3                     start 00DA             ___param_bank 000000  
                  ?_main 0001          __end_of_pic_isr 00DA                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 0100  
           __end_of_main 0100                   ??_main 0014            __activetblptr 000000  
                 _TMR0IF 007F92                   i1u3_20 007E                   i1u3_28 0080  
              ??_pic_isr 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 0100  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 0100                  __ramtop 0800  
                __ptext0 00DE                _T0CONbits 000FD5                  _pic_isr 0018  
   end_of_initialization 0100                _PORTDbits 000F83      start_initialization 0100  
            __pintcodelo 0018                 ?_pic_isr 0001                 __Hrparam 0000  
               __Lrparam 0000         __size_of_pic_isr 00C2            __size_of_main 0022  
               int$flags 0014               _INTCONbits 000FF2                 pic_isr@x 0013  
               intlevel1 0000  
