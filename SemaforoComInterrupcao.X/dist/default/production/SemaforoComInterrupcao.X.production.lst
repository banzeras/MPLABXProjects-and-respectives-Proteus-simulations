

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Apr 04 13:31:45 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.41
    18                           ; Generated 25/01/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  00086A                     __pidataCOMRAM:
    54                           	opt stack 0
    55                           
    56                           ;initializer for _vermelhoLigado
    57  00086A  01                 	db	1
    58                           
    59                           ;initializer for _cont
    60  00086B  04                 	db	4
    61                           
    62                           	psect	smallconst
    63  000800                     __psmallconst:
    64                           	opt stack 0
    65  000800  00                 	db	0
    66  000801                     _display:
    67                           	opt stack 0
    68  000801  3F                 	db	63
    69  000802  06                 	db	6
    70  000803  5B                 	db	91
    71  000804  4F                 	db	79
    72  000805  66                 	db	102
    73  000806  6D                 	db	109
    74  000807  7D                 	db	125
    75  000808  07                 	db	7
    76  000809  7F                 	db	127
    77  00080A  6F                 	db	111
    78  00080B                     __end_of_display:
    79                           	opt stack 0
    80  0000                     _TMR0	set	4054
    81  0000                     _T0CONbits	set	4053
    82  0000                     _TRISC	set	3988
    83  0000                     _TRISB	set	3987
    84  0000                     _ADCON1	set	4033
    85  0000                     _INTCONbits	set	4082
    86  0000                     _PORTCbits	set	3970
    87  0000                     _PORTB	set	3969
    88  0000                     _TMR0IF	set	32658
    89                           
    90                           ; #config settings
    91  00080B  00                 	db	0	; dummy byte at the end
    92  0000                     
    93                           	psect	cinit
    94  00083C                     __pcinit:
    95                           	opt stack 0
    96  00083C                     start_initialization:
    97                           	opt stack 0
    98  00083C                     __initialization:
    99                           	opt stack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (2 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  00083C  0E6A               	movlw	low __pidataCOMRAM
   104  00083E  6EF6               	movwf	tblptrl,c
   105  000840  0E08               	movlw	high __pidataCOMRAM
   106  000842  6EF7               	movwf	tblptrh,c
   107  000844  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  000846  6EF8               	movwf	tblptru,c
   109  000848  0009               	tblrd		*+	;fetch initializer
   110  00084A  CFF5 F014          	movff	tablat,__pdataCOMRAM
   111  00084E  0009               	tblrd		*+	;fetch initializer
   112  000850  CFF5 F015          	movff	tablat,__pdataCOMRAM+1
   113                           
   114                           ; Clear objects allocated to COMRAM (2 bytes)
   115  000854  6A13               	clrf	(__pbssCOMRAM+1)& (0+255),c
   116  000856  6A12               	clrf	__pbssCOMRAM& (0+255),c
   117  000858                     end_of_initialization:
   118                           	opt stack 0
   119  000858                     __end_of__initialization:
   120                           	opt stack 0
   121  000858  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   122  00085A  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   123  00085C  0E00               	movlw	low (__Lsmallconst shr (0+16))
   124  00085E  6EF8               	movwf	tblptru,c
   125  000860  0E08               	movlw	high __Lsmallconst
   126  000862  6EF7               	movwf	tblptrh,c
   127  000864  0100               	movlb	0
   128  000866  EF06  F004         	goto	_main	;jump to C main() function
   129                           tblptru	equ	0xFF8
   130                           tblptrh	equ	0xFF7
   131                           tblptrl	equ	0xFF6
   132                           tablat	equ	0xFF5
   133                           
   134                           	psect	bssCOMRAM
   135  000012                     __pbssCOMRAM:
   136                           	opt stack 0
   137  000012                     _verdeLigado:
   138                           	opt stack 0
   139  000012                     	ds	1
   140  000013                     _amareloLigado:
   141                           	opt stack 0
   142  000013                     	ds	1
   143                           tblptru	equ	0xFF8
   144                           tblptrh	equ	0xFF7
   145                           tblptrl	equ	0xFF6
   146                           tablat	equ	0xFF5
   147                           
   148                           	psect	dataCOMRAM
   149  000014                     __pdataCOMRAM:
   150                           	opt stack 0
   151  000014                     _vermelhoLigado:
   152                           	opt stack 0
   153  000014                     	ds	1
   154  000015                     _cont:
   155                           	opt stack 0
   156  000015                     	ds	1
   157                           tblptru	equ	0xFF8
   158                           tblptrh	equ	0xFF7
   159                           tblptrl	equ	0xFF6
   160                           tablat	equ	0xFF5
   161                           
   162                           	psect	cstackCOMRAM
   163  000001                     __pcstackCOMRAM:
   164                           	opt stack 0
   165  000001                     ??_pic_isr:
   166  000001                     
   167                           ; 1 bytes @ 0x0
   168  000001                     	ds	17
   169  000012                     tblptru	equ	0xFF8
   170                           tblptrh	equ	0xFF7
   171                           tblptrl	equ	0xFF6
   172                           tablat	equ	0xFF5
   173                           
   174                           ; 1 bytes @ 0x11
   175 ;;
   176 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   177 ;;
   178 ;; *************** function _main *****************
   179 ;; Defined at:
   180 ;;		line 71 in file "main.c"
   181 ;; Parameters:    Size  Location     Type
   182 ;;		None
   183 ;; Auto vars:     Size  Location     Type
   184 ;;		None
   185 ;; Return value:  Size  Location     Type
   186 ;;                  1    wreg      void 
   187 ;; Registers used:
   188 ;;		wreg, status,2
   189 ;; Tracked objects:
   190 ;;		On entry : 0/0
   191 ;;		On exit  : 0/0
   192 ;;		Unchanged: 0/0
   193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   194 ;;      Params:         0       0       0       0       0       0       0       0       0
   195 ;;      Locals:         0       0       0       0       0       0       0       0       0
   196 ;;      Temps:          0       0       0       0       0       0       0       0       0
   197 ;;      Totals:         0       0       0       0       0       0       0       0       0
   198 ;;Total ram usage:        0 bytes
   199 ;; Hardware stack levels required when called:    1
   200 ;; This function calls:
   201 ;;		Nothing
   202 ;; This function is called by:
   203 ;;		Startup code after reset
   204 ;; This function uses a non-reentrant model
   205 ;;
   206                           
   207                           	psect	text0
   208  00080C                     __ptext0:
   209                           	opt stack 0
   210  00080C                     _main:
   211                           	opt stack 30
   212                           
   213                           ;main.c: 72: ADCON1 = 0x0F;
   214                           
   215                           ;incstack = 0
   216  00080C  0E0F               	movlw	15
   217  00080E  6EC1               	movwf	4033,c	;volatile
   218                           
   219                           ;main.c: 73: TRISB = 0x00;
   220  000810  0E00               	movlw	0
   221  000812  6E93               	movwf	3987,c	;volatile
   222                           
   223                           ;main.c: 74: TRISC = 0x00;
   224  000814  0E00               	movlw	0
   225  000816  6E94               	movwf	3988,c	;volatile
   226                           
   227                           ;main.c: 76: T0CONbits.TMR0ON = 0;
   228  000818  9ED5               	bcf	4053,7,c	;volatile
   229                           
   230                           ;main.c: 77: INTCONbits.TMR0IE = 1;
   231  00081A  8AF2               	bsf	intcon,5,c	;volatile
   232                           
   233                           ;main.c: 78: INTCONbits.TMR0IF = 0;
   234  00081C  94F2               	bcf	intcon,2,c	;volatile
   235                           
   236                           ;main.c: 79: T0CONbits.T08BIT = 0;
   237  00081E  9CD5               	bcf	4053,6,c	;volatile
   238                           
   239                           ;main.c: 80: T0CONbits.PSA = 0;
   240  000820  96D5               	bcf	4053,3,c	;volatile
   241                           
   242                           ;main.c: 81: T0CONbits.T0PS0 = 0;
   243  000822  90D5               	bcf	4053,0,c	;volatile
   244                           
   245                           ;main.c: 82: T0CONbits.T0PS1 = 1;
   246  000824  82D5               	bsf	4053,1,c	;volatile
   247                           
   248                           ;main.c: 83: T0CONbits.T0PS2 = 1;
   249  000826  84D5               	bsf	4053,2,c	;volatile
   250                           
   251                           ;main.c: 84: T0CONbits.T0CS = 0;
   252  000828  9AD5               	bcf	4053,5,c	;volatile
   253                           
   254                           ;main.c: 85: TMR0 = 26474;
   255  00082A  0E67               	movlw	103
   256  00082C  6ED7               	movwf	4055,c	;volatile
   257  00082E  0E6A               	movlw	106
   258  000830  6ED6               	movwf	4054,c	;volatile
   259                           
   260                           ;main.c: 86: T0CONbits.TMR0ON = 1;
   261  000832  8ED5               	bsf	4053,7,c	;volatile
   262                           
   263                           ;main.c: 87: INTCONbits.GIEH = 1;
   264  000834  8EF2               	bsf	intcon,7,c	;volatile
   265                           
   266                           ;main.c: 88: INTCONbits.GIEL = 1;
   267  000836  8CF2               	bsf	intcon,6,c	;volatile
   268                           
   269                           ;main.c: 89: PORTCbits.RC0 = 1;
   270  000838  8082               	bsf	3970,0,c	;volatile
   271  00083A                     l39:
   272  00083A  D7FF               	goto	l39
   273  00083C                     __end_of_main:
   274                           	opt stack 0
   275                           tblptru	equ	0xFF8
   276                           tblptrh	equ	0xFF7
   277                           tblptrl	equ	0xFF6
   278                           tablat	equ	0xFF5
   279                           intcon	equ	0xFF2
   280                           
   281 ;; *************** function _pic_isr *****************
   282 ;; Defined at:
   283 ;;		line 28 in file "main.c"
   284 ;; Parameters:    Size  Location     Type
   285 ;;		None
   286 ;; Auto vars:     Size  Location     Type
   287 ;;		None
   288 ;; Return value:  Size  Location     Type
   289 ;;                  1    wreg      void 
   290 ;; Registers used:
   291 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
   292 ;; Tracked objects:
   293 ;;		On entry : 0/0
   294 ;;		On exit  : 0/0
   295 ;;		Unchanged: 0/0
   296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   297 ;;      Params:         0       0       0       0       0       0       0       0       0
   298 ;;      Locals:         0       0       0       0       0       0       0       0       0
   299 ;;      Temps:         17       0       0       0       0       0       0       0       0
   300 ;;      Totals:        17       0       0       0       0       0       0       0       0
   301 ;;Total ram usage:       17 bytes
   302 ;; Hardware stack levels used:    1
   303 ;; This function calls:
   304 ;;		Nothing
   305 ;; This function is called by:
   306 ;;		Interrupt level 1
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310                           	psect	intcodelo
   311  000018                     __pintcodelo:
   312                           	opt stack 0
   313  000018                     _pic_isr:
   314                           	opt stack 30
   315                           
   316                           ;incstack = 0
   317  000018  8016               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
   318  00001A  CFD8 F001          	movff	status,??_pic_isr
   319  00001E  CFE8 F002          	movff	wreg,??_pic_isr+1
   320  000022  CFE0 F003          	movff	bsr,??_pic_isr+2
   321  000026  CFFA F004          	movff	pclath,??_pic_isr+3
   322  00002A  CFFB F005          	movff	pclatu,??_pic_isr+4
   323  00002E  CFE9 F006          	movff	fsr0l,??_pic_isr+5
   324  000032  CFEA F007          	movff	fsr0h,??_pic_isr+6
   325  000036  CFE1 F008          	movff	fsr1l,??_pic_isr+7
   326  00003A  CFE2 F009          	movff	fsr1h,??_pic_isr+8
   327  00003E  CFD9 F00A          	movff	fsr2l,??_pic_isr+9
   328  000042  CFDA F00B          	movff	fsr2h,??_pic_isr+10
   329  000046  CFF3 F00C          	movff	prodl,??_pic_isr+11
   330  00004A  CFF4 F00D          	movff	prodh,??_pic_isr+12
   331  00004E  CFF6 F00E          	movff	tblptrl,??_pic_isr+13
   332  000052  CFF7 F00F          	movff	tblptrh,??_pic_isr+14
   333  000056  CFF8 F010          	movff	tblptru,??_pic_isr+15
   334  00005A  CFF5 F011          	movff	tablat,??_pic_isr+16
   335                           
   336                           ;main.c: 32: if(TMR0IF){
   337  00005E  A4F2               	btfss	intcon,2,c	;volatile
   338  000060  D044               	goto	i1l36
   339                           
   340                           ;main.c: 35: if(cont != 0) PORTB = display[cont];
   341  000062  5015               	movf	_cont,w,c
   342  000064  B4D8               	btfsc	status,2,c
   343  000066  D00B               	goto	i1l646
   344  000068  5015               	movf	_cont,w,c
   345  00006A  0D01               	mullw	1
   346  00006C  0E01               	movlw	low _display
   347  00006E  24F3               	addwf	prodl,w,c
   348  000070  6EF6               	movwf	tblptrl,c
   349  000072  0E08               	movlw	high _display
   350  000074  20F4               	addwfc	prodh,w,c
   351  000076  6EF7               	movwf	tblptrh,c
   352  000078                     	if	0	;There are less than 3 active tblptr bytes
   353  000078                     	endif
   354  000078  0008               	tblrd		*
   355  00007A  CFF5 FF81          	movff	tablat,3969	;volatile
   356  00007E                     i1l646:
   357                           
   358                           ;main.c: 38: if((cont < 1 && verdeLigado == 0)&&(amareloLigado == 0) ){
   359  00007E  5015               	movf	_cont,w,c
   360  000080  A4D8               	btfss	status,2,c
   361  000082  D00E               	goto	i1l33
   362  000084  5012               	movf	_verdeLigado,w,c
   363  000086  A4D8               	btfss	status,2,c
   364  000088  D00B               	goto	i1l33
   365  00008A  5013               	movf	_amareloLigado,w,c
   366  00008C  A4D8               	btfss	status,2,c
   367  00008E  D008               	goto	i1l33
   368                           
   369                           ;main.c: 39: PORTCbits.RC0 = 0;
   370  000090  9082               	bcf	3970,0,c	;volatile
   371                           
   372                           ;main.c: 40: PORTCbits.RC2 = 1;
   373  000092  8482               	bsf	3970,2,c	;volatile
   374                           
   375                           ;main.c: 41: cont = 8;
   376  000094  0E08               	movlw	8
   377  000096  6E15               	movwf	_cont,c
   378                           
   379                           ;main.c: 42: vermelhoLigado = 0;
   380  000098  0E00               	movlw	0
   381  00009A  6E14               	movwf	_vermelhoLigado,c
   382                           
   383                           ;main.c: 43: verdeLigado = 1;
   384  00009C  0E01               	movlw	1
   385  00009E  6E12               	movwf	_verdeLigado,c
   386  0000A0                     i1l33:
   387                           
   388                           ;main.c: 44: }
   389                           ;main.c: 45: if((cont < 1 && verdeLigado == 1)&&(vermelhoLigado == 0)){
   390  0000A0  5015               	movf	_cont,w,c
   391  0000A2  A4D8               	btfss	status,2,c
   392  0000A4  D00E               	goto	i1l34
   393  0000A6  0412               	decf	_verdeLigado,w,c
   394  0000A8  A4D8               	btfss	status,2,c
   395  0000AA  D00B               	goto	i1l34
   396  0000AC  5014               	movf	_vermelhoLigado,w,c
   397  0000AE  A4D8               	btfss	status,2,c
   398  0000B0  D008               	goto	i1l34
   399                           
   400                           ;main.c: 46: PORTCbits.RC1 = 1;
   401  0000B2  8282               	bsf	3970,1,c	;volatile
   402                           
   403                           ;main.c: 47: PORTCbits.RC2 = 0;
   404  0000B4  9482               	bcf	3970,2,c	;volatile
   405                           
   406                           ;main.c: 48: cont = 3;
   407  0000B6  0E03               	movlw	3
   408  0000B8  6E15               	movwf	_cont,c
   409                           
   410                           ;main.c: 49: amareloLigado =1;
   411  0000BA  0E01               	movlw	1
   412  0000BC  6E13               	movwf	_amareloLigado,c
   413                           
   414                           ;main.c: 50: verdeLigado = 0;
   415  0000BE  0E00               	movlw	0
   416  0000C0  6E12               	movwf	_verdeLigado,c
   417  0000C2                     i1l34:
   418                           
   419                           ;main.c: 51: }
   420                           ;main.c: 52: if((cont < 1) &&(amareloLigado == 1)){
   421  0000C2  5015               	movf	_cont,w,c
   422  0000C4  A4D8               	btfss	status,2,c
   423  0000C6  D00B               	goto	i1l670
   424  0000C8  0413               	decf	_amareloLigado,w,c
   425  0000CA  A4D8               	btfss	status,2,c
   426  0000CC  D008               	goto	i1l670
   427                           
   428                           ;main.c: 53: PORTCbits.RC1 = 0;
   429  0000CE  9282               	bcf	3970,1,c	;volatile
   430                           
   431                           ;main.c: 54: PORTCbits.RC0 = 1;
   432  0000D0  8082               	bsf	3970,0,c	;volatile
   433                           
   434                           ;main.c: 55: vermelhoLigado = 1;
   435  0000D2  0E01               	movlw	1
   436  0000D4  6E14               	movwf	_vermelhoLigado,c
   437                           
   438                           ;main.c: 56: amareloLigado = 0;
   439  0000D6  0E00               	movlw	0
   440  0000D8  6E13               	movwf	_amareloLigado,c
   441                           
   442                           ;main.c: 57: cont = 5;
   443  0000DA  0E05               	movlw	5
   444  0000DC  6E15               	movwf	_cont,c
   445  0000DE                     i1l670:
   446                           
   447                           ;main.c: 58: }
   448                           ;main.c: 61: cont--;
   449  0000DE  0615               	decf	_cont,f,c
   450                           
   451                           ;main.c: 62: TMR0 =26474;
   452  0000E0  0E67               	movlw	103
   453  0000E2  6ED7               	movwf	4055,c	;volatile
   454  0000E4  0E6A               	movlw	106
   455  0000E6  6ED6               	movwf	4054,c	;volatile
   456                           
   457                           ;main.c: 63: INTCONbits.TMR0IF = 0;
   458  0000E8  94F2               	bcf	intcon,2,c	;volatile
   459  0000EA                     i1l36:
   460  0000EA  C011  FFF5         	movff	??_pic_isr+16,tablat
   461  0000EE  C010  FFF8         	movff	??_pic_isr+15,tblptru
   462  0000F2  C00F  FFF7         	movff	??_pic_isr+14,tblptrh
   463  0000F6  C00E  FFF6         	movff	??_pic_isr+13,tblptrl
   464  0000FA  C00D  FFF4         	movff	??_pic_isr+12,prodh
   465  0000FE  C00C  FFF3         	movff	??_pic_isr+11,prodl
   466  000102  C00B  FFDA         	movff	??_pic_isr+10,fsr2h
   467  000106  C00A  FFD9         	movff	??_pic_isr+9,fsr2l
   468  00010A  C009  FFE2         	movff	??_pic_isr+8,fsr1h
   469  00010E  C008  FFE1         	movff	??_pic_isr+7,fsr1l
   470  000112  C007  FFEA         	movff	??_pic_isr+6,fsr0h
   471  000116  C006  FFE9         	movff	??_pic_isr+5,fsr0l
   472  00011A  C005  FFFB         	movff	??_pic_isr+4,pclatu
   473  00011E  C004  FFFA         	movff	??_pic_isr+3,pclath
   474  000122  C003  FFE0         	movff	??_pic_isr+2,bsr
   475  000126  C002  FFE8         	movff	??_pic_isr+1,wreg
   476  00012A  C001  FFD8         	movff	??_pic_isr,status
   477  00012E  9016               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
   478  000130  0010               	retfie	
   479  000132                     __end_of_pic_isr:
   480                           	opt stack 0
   481                           pclatu	equ	0xFFB
   482                           pclath	equ	0xFFA
   483                           tblptru	equ	0xFF8
   484                           tblptrh	equ	0xFF7
   485                           tblptrl	equ	0xFF6
   486                           tablat	equ	0xFF5
   487                           prodh	equ	0xFF4
   488                           prodl	equ	0xFF3
   489                           intcon	equ	0xFF2
   490                           fsr0h	equ	0xFEA
   491                           fsr0l	equ	0xFE9
   492                           wreg	equ	0xFE8
   493                           fsr1h	equ	0xFE2
   494                           fsr1l	equ	0xFE1
   495                           bsr	equ	0xFE0
   496                           fsr2h	equ	0xFDA
   497                           fsr2l	equ	0xFD9
   498                           status	equ	0xFD8
   499                           pclatu	equ	0xFFB
   500                           pclath	equ	0xFFA
   501                           tblptru	equ	0xFF8
   502                           tblptrh	equ	0xFF7
   503                           tblptrl	equ	0xFF6
   504                           tablat	equ	0xFF5
   505                           prodh	equ	0xFF4
   506                           prodl	equ	0xFF3
   507                           intcon	equ	0xFF2
   508                           fsr0h	equ	0xFEA
   509                           fsr0l	equ	0xFE9
   510                           wreg	equ	0xFE8
   511                           fsr1h	equ	0xFE2
   512                           fsr1l	equ	0xFE1
   513                           bsr	equ	0xFE0
   514                           fsr2h	equ	0xFDA
   515                           fsr2l	equ	0xFD9
   516                           status	equ	0xFD8
   517                           
   518                           	psect	rparam
   519  0000                     pclatu	equ	0xFFB
   520                           pclath	equ	0xFFA
   521                           tblptru	equ	0xFF8
   522                           tblptrh	equ	0xFF7
   523                           tblptrl	equ	0xFF6
   524                           tablat	equ	0xFF5
   525                           prodh	equ	0xFF4
   526                           prodl	equ	0xFF3
   527                           intcon	equ	0xFF2
   528                           fsr0h	equ	0xFEA
   529                           fsr0l	equ	0xFE9
   530                           wreg	equ	0xFE8
   531                           fsr1h	equ	0xFE2
   532                           fsr1l	equ	0xFE1
   533                           bsr	equ	0xFE0
   534                           fsr2h	equ	0xFDA
   535                           fsr2l	equ	0xFD9
   536                           status	equ	0xFD8
   537                           
   538                           	psect	temp
   539  000016                     btemp:
   540                           	opt stack 0
   541  000016                     	ds	1
   542  0000                     int$flags	set	btemp
   543                           pclatu	equ	0xFFB
   544                           pclath	equ	0xFFA
   545                           tblptru	equ	0xFF8
   546                           tblptrh	equ	0xFF7
   547                           tblptrl	equ	0xFF6
   548                           tablat	equ	0xFF5
   549                           prodh	equ	0xFF4
   550                           prodl	equ	0xFF3
   551                           intcon	equ	0xFF2
   552                           fsr0h	equ	0xFEA
   553                           fsr0l	equ	0xFE9
   554                           wreg	equ	0xFE8
   555                           fsr1h	equ	0xFE2
   556                           fsr1l	equ	0xFE1
   557                           bsr	equ	0xFE0
   558                           fsr2h	equ	0xFDA
   559                           fsr2l	equ	0xFD9
   560                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _pic_isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _pic_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _pic_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _pic_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _pic_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _pic_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _pic_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _pic_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _pic_isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _pic_isr                                             17    17      0       0
                                              0 COMRAM    17    17      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _pic_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      15       1       22.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15      20        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Apr 04 13:31:45 2018

                     l39 083A                       bsr 000FE0                      wreg 000FE8  
           __CFG_WDT$OFF 000000                     i1l33 00A0                     i1l34 00C2  
                   i1l36 00EA                     _TMR0 000FD6                     _cont 0015  
                   _main 080C                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr2h 000FDA                     fsr0l 000FE9                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0016                     prodh 000FF4  
                   prodl 000FF3                     start 0132             ___param_bank 000000  
                  ?_main 0001                    i1l670 00DE                    i1l646 007E  
                  _PORTB 000F81                    _TRISB 000F93                    _TRISC 000F94  
        __end_of_display 080B          __end_of_pic_isr 0132                    pclath 000FFA  
                  tablat 000FF5                    status 000FD8          __initialization 083C  
           __end_of_main 083C                   ??_main 0012            __activetblptr 000001  
                 _ADCON1 000FC1                   _TMR0IF 007F92             __pdataCOMRAM 0014  
              ??_pic_isr 0001             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 0858          __CFG_PBADEN$OFF 000000            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0800                  __pcinit 083C                  __ramtop 0800  
                __ptext0 080C                  _display 0801                _T0CONbits 000FD5  
                _pic_isr 0018     end_of_initialization 0858                _PORTCbits 000F82  
          __pidataCOMRAM 086A      start_initialization 083C            _amareloLigado 0013  
            __pbssCOMRAM 0012              __pintcodelo 0018              __smallconst 0800  
               ?_pic_isr 0001                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800         __size_of_pic_isr 011A            __size_of_main 0030  
               int$flags 0016               _INTCONbits 000FF2                 intlevel1 0000  
            _verdeLigado 0012           _vermelhoLigado 0014  
