

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Jun 13 11:04:41 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    23  0000                     
    24                           ; Version 1.41
    25                           ; Generated 25/01/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4550 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	idataCOMRAM
    60  00025A                     __pidataCOMRAM:
    61                           	opt stack 0
    62                           
    63                           ;initializer for _revisao
    64  00025A  02                 	db	2
    65                           
    66                           ;initializer for _versao
    67  00025B  01                 	db	1
    68  0000                     _RCREG	set	4014
    69  0000                     _PIR1bits	set	3998
    70  0000                     _INTCONbits	set	4082
    71  0000                     _TRISCbits	set	3988
    72  0000                     _TXSTA	set	4012
    73  0000                     _RCSTA	set	4011
    74  0000                     _SPBRG	set	4015
    75  0000                     _TXREG	set	4013
    76  0000                     _PEIE	set	32662
    77  0000                     _RCIE	set	31981
    78  0000                     _RCIP	set	31997
    79  0000                     _RCIF	set	31989
    80  0000                     _TXIF	set	31988
    81                           
    82                           ; #config settings
    83                           
    84                           	psect	cinit
    85  0001C0                     __pcinit:
    86                           	opt stack 0
    87  0001C0                     start_initialization:
    88                           	opt stack 0
    89  0001C0                     __initialization:
    90                           	opt stack 0
    91                           
    92                           ; Initialize objects allocated to COMRAM (2 bytes)
    93                           ; load TBLPTR registers with __pidataCOMRAM
    94  0001C0  0E5A               	movlw	low __pidataCOMRAM
    95  0001C2  6EF6               	movwf	tblptrl,c
    96  0001C4  0E02               	movlw	high __pidataCOMRAM
    97  0001C6  6EF7               	movwf	tblptrh,c
    98  0001C8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    99  0001CA  6EF8               	movwf	tblptru,c
   100  0001CC  0009               	tblrd		*+	;fetch initializer
   101  0001CE  CFF5 F024          	movff	tablat,__pdataCOMRAM
   102  0001D2  0009               	tblrd		*+	;fetch initializer
   103  0001D4  CFF5 F025          	movff	tablat,__pdataCOMRAM+1
   104                           
   105                           ; Clear objects allocated to COMRAM (18 bytes)
   106  0001D8  EE00  F001         	lfsr	0,__pbssCOMRAM
   107  0001DC  0E12               	movlw	18
   108  0001DE                     clear_0:
   109  0001DE  6AEE               	clrf	postinc0,c
   110  0001E0  06E8               	decf	wreg,f,c
   111  0001E2  E1FD               	bnz	clear_0
   112  0001E4                     end_of_initialization:
   113                           	opt stack 0
   114  0001E4                     __end_of__initialization:
   115                           	opt stack 0
   116  0001E4  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   117  0001E6  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   118  0001E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   119  0001EA  6EF8               	movwf	tblptru,c
   120  0001EC  0100               	movlb	0
   121  0001EE  EFF9  F000         	goto	_main	;jump to C main() function
   122                           tblptru	equ	0xFF8
   123                           tblptrh	equ	0xFF7
   124                           tblptrl	equ	0xFF6
   125                           tablat	equ	0xFF5
   126                           postinc0	equ	0xFEE
   127                           wreg	equ	0xFE8
   128                           
   129                           	psect	bssCOMRAM
   130  000001                     __pbssCOMRAM:
   131                           	opt stack 0
   132  000001                     _BUFFRESP:
   133                           	opt stack 0
   134  000001                     	ds	7
   135  000008                     _BUFFCOM:
   136                           	opt stack 0
   137  000008                     	ds	7
   138  00000F                     _i:
   139                           	opt stack 0
   140  00000F                     	ds	2
   141  000011                     _estado:
   142                           	opt stack 0
   143  000011                     	ds	1
   144  000012                     _serial_data:
   145                           	opt stack 0
   146  000012                     	ds	1
   147                           tblptru	equ	0xFF8
   148                           tblptrh	equ	0xFF7
   149                           tblptrl	equ	0xFF6
   150                           tablat	equ	0xFF5
   151                           postinc0	equ	0xFEE
   152                           wreg	equ	0xFE8
   153                           
   154                           	psect	dataCOMRAM
   155  000024                     __pdataCOMRAM:
   156                           	opt stack 0
   157  000024                     _revisao:
   158                           	opt stack 0
   159  000024                     	ds	1
   160  000025                     _versao:
   161                           	opt stack 0
   162  000025                     	ds	1
   163                           tblptru	equ	0xFF8
   164                           tblptrh	equ	0xFF7
   165                           tblptrl	equ	0xFF6
   166                           tablat	equ	0xFF5
   167                           postinc0	equ	0xFEE
   168                           wreg	equ	0xFE8
   169                           
   170                           	psect	cstackCOMRAM
   171  000013                     __pcstackCOMRAM:
   172                           	opt stack 0
   173  000013                     enviaByteTeste@BYTE:
   174                           	opt stack 0
   175                           
   176                           ; 1 bytes @ 0x0
   177  000013                     	ds	1
   178  000014                     ??_SerialRxPinInterrupt:
   179                           
   180                           ; 1 bytes @ 0x1
   181  000014                     	ds	14
   182  000022                     verificaCRCBUFFCOM@CRC_OK:
   183                           	opt stack 0
   184  000022                     enviaByte@BYTE:
   185                           	opt stack 0
   186  000022                     tx_data@cont:
   187                           	opt stack 0
   188                           
   189                           ; 2 bytes @ 0xF
   190  000022                     	ds	2
   191  000024                     tblptru	equ	0xFF8
   192                           tblptrh	equ	0xFF7
   193                           tblptrl	equ	0xFF6
   194                           tablat	equ	0xFF5
   195                           postinc0	equ	0xFEE
   196                           wreg	equ	0xFE8
   197                           
   198                           ; 1 bytes @ 0x11
   199 ;;
   200 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   201 ;;
   202 ;; *************** function _main *****************
   203 ;; Defined at:
   204 ;;		line 220 in file "main.c"
   205 ;; Parameters:    Size  Location     Type
   206 ;;		None
   207 ;; Auto vars:     Size  Location     Type
   208 ;;		None
   209 ;; Return value:  Size  Location     Type
   210 ;;                  1    wreg      void 
   211 ;; Registers used:
   212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   213 ;; Tracked objects:
   214 ;;		On entry : 0/0
   215 ;;		On exit  : 0/0
   216 ;;		Unchanged: 0/0
   217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   218 ;;      Params:         0       0       0       0       0       0       0       0       0
   219 ;;      Locals:         0       0       0       0       0       0       0       0       0
   220 ;;      Temps:          0       0       0       0       0       0       0       0       0
   221 ;;      Totals:         0       0       0       0       0       0       0       0       0
   222 ;;Total ram usage:        0 bytes
   223 ;; Hardware stack levels required when called:    5
   224 ;; This function calls:
   225 ;;		_maquinaEstado
   226 ;; This function is called by:
   227 ;;		Startup code after reset
   228 ;; This function uses a non-reentrant model
   229 ;;
   230                           
   231                           	psect	text0
   232  0001F2                     __ptext0:
   233                           	opt stack 0
   234  0001F2                     _main:
   235                           	opt stack 26
   236                           
   237                           ;main.c: 222: SPBRG=(((12000000/64)/9600)-1);
   238                           
   239                           ;incstack = 0
   240  0001F2  0E12               	movlw	18
   241  0001F4  6EAF               	movwf	4015,c	;volatile
   242                           
   243                           ;main.c: 228: RCSTA = 0b10010000;
   244  0001F6  0E90               	movlw	144
   245  0001F8  6EAB               	movwf	4011,c	;volatile
   246                           
   247                           ;main.c: 229: TXSTA = 0b00100000;
   248  0001FA  0E20               	movlw	32
   249  0001FC  6EAC               	movwf	4012,c	;volatile
   250                           
   251                           ;main.c: 231: TRISCbits.RC6 = 0;
   252  0001FE  9C94               	bcf	3988,6,c	;volatile
   253                           
   254                           ;main.c: 232: TRISCbits.RC7 = 1;
   255  000200  8E94               	bsf	3988,7,c	;volatile
   256                           
   257                           ;main.c: 235: RCIF = 0;
   258  000202  9A9E               	bcf	3998,5,c	;volatile
   259                           
   260                           ;main.c: 236: RCIP = 0;
   261  000204  9A9F               	bcf	3999,5,c	;volatile
   262                           
   263                           ;main.c: 237: RCIE = 1;
   264  000206  8A9D               	bsf	3997,5,c	;volatile
   265                           
   266                           ;main.c: 238: PEIE = 1;
   267  000208  8CF2               	bsf	intcon,6,c	;volatile
   268                           
   269                           ;main.c: 240: INTCONbits.GIEH = 1;
   270  00020A  8EF2               	bsf	intcon,7,c	;volatile
   271                           
   272                           ;main.c: 241: INTCONbits.GIEL = 1;
   273  00020C  8CF2               	bsf	intcon,6,c	;volatile
   274  00020E                     l805:
   275                           
   276                           ;main.c: 244: {
   277                           ;main.c: 245: maquinaEstado();
   278  00020E  ECA1  F000         	call	_maquinaEstado	;wreg free
   279  000212  D7FD               	goto	l805
   280  000214                     __end_of_main:
   281                           	opt stack 0
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           intcon	equ	0xFF2
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290 ;; *************** function _maquinaEstado *****************
   291 ;; Defined at:
   292 ;;		line 183 in file "main.c"
   293 ;; Parameters:    Size  Location     Type
   294 ;;		None
   295 ;; Auto vars:     Size  Location     Type
   296 ;;		None
   297 ;; Return value:  Size  Location     Type
   298 ;;                  1    wreg      void 
   299 ;; Registers used:
   300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   301 ;; Tracked objects:
   302 ;;		On entry : 0/0
   303 ;;		On exit  : 0/0
   304 ;;		Unchanged: 0/0
   305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   306 ;;      Params:         0       0       0       0       0       0       0       0       0
   307 ;;      Locals:         0       0       0       0       0       0       0       0       0
   308 ;;      Temps:          0       0       0       0       0       0       0       0       0
   309 ;;      Totals:         0       0       0       0       0       0       0       0       0
   310 ;;Total ram usage:        0 bytes
   311 ;; Hardware stack levels used:    1
   312 ;; Hardware stack levels required when called:    4
   313 ;; This function calls:
   314 ;;		_enviaByte
   315 ;;		_trataComando
   316 ;;		_tx_data
   317 ;;		_verificaCRCBUFFCOM
   318 ;; This function is called by:
   319 ;;		_main
   320 ;; This function uses a non-reentrant model
   321 ;;
   322                           
   323                           	psect	text1
   324  000142                     __ptext1:
   325                           	opt stack 0
   326  000142                     _maquinaEstado:
   327                           	opt stack 26
   328                           
   329                           ;main.c: 185: switch(estado){
   330                           
   331                           ;incstack = 0
   332  000142  D011               	goto	l785
   333  000144                     l773:
   334                           
   335                           ;main.c: 188: verificaCRCBUFFCOM();
   336  000144  EC19  F001         	call	_verificaCRCBUFFCOM	;wreg free
   337                           
   338                           ;main.c: 190: break;
   339  000148  0012               	return	
   340  00014A                     l775:
   341                           
   342                           ;main.c: 194: trataComando();
   343  00014A  EC69  F000         	call	_trataComando	;wreg free
   344                           
   345                           ;main.c: 196: break;
   346  00014E  0012               	return	
   347  000150                     l777:
   348                           
   349                           ;main.c: 199: tx_data();
   350  000150  ECC4  F000         	call	_tx_data	;wreg free
   351                           
   352                           ;main.c: 200: break;
   353  000154  0012               	return	
   354  000156                     l779:
   355                           
   356                           ;main.c: 203: enviaByte(0x05);
   357  000156  0E05               	movlw	5
   358  000158  EC0A  F001         	call	_enviaByte
   359                           
   360                           ;main.c: 205: break;
   361  00015C  0012               	return	
   362  00015E                     l781:
   363                           
   364                           ;main.c: 208: enviaByte(0x15);
   365  00015E  0E15               	movlw	21
   366  000160  EC0A  F001         	call	_enviaByte
   367                           
   368                           ;main.c: 217: }
   369                           
   370                           ;main.c: 214: break;
   371                           
   372                           ;main.c: 212: default:
   373                           
   374                           ;main.c: 210: break;
   375  000164  0012               	return	
   376  000166                     l785:
   377  000166  5011               	movf	_estado,w,c
   378                           
   379                           ; Switch size 1, requested type "space"
   380                           ; Number of cases is 5, Range of values is 1 to 5
   381                           ; switch strategies available:
   382                           ; Name         Instructions Cycles
   383                           ; simple_byte           16     9 (average)
   384                           ;	Chosen strategy is simple_byte
   385  000168  0A01               	xorlw	1	; case 1
   386  00016A  B4D8               	btfsc	status,2,c
   387  00016C  D7EB               	goto	l773
   388  00016E  0A03               	xorlw	3	; case 2
   389  000170  B4D8               	btfsc	status,2,c
   390  000172  D7EB               	goto	l775
   391  000174  0A01               	xorlw	1	; case 3
   392  000176  B4D8               	btfsc	status,2,c
   393  000178  D7EB               	goto	l777
   394  00017A  0A07               	xorlw	7	; case 4
   395  00017C  B4D8               	btfsc	status,2,c
   396  00017E  D7EB               	goto	l779
   397  000180  0A01               	xorlw	1	; case 5
   398  000182  A4D8               	btfss	status,2,c
   399  000184  0012               	return	
   400  000186  D7EB               	goto	l781
   401  000188                     __end_of_maquinaEstado:
   402                           	opt stack 0
   403                           tblptru	equ	0xFF8
   404                           tblptrh	equ	0xFF7
   405                           tblptrl	equ	0xFF6
   406                           tablat	equ	0xFF5
   407                           intcon	equ	0xFF2
   408                           postinc0	equ	0xFEE
   409                           wreg	equ	0xFE8
   410                           status	equ	0xFD8
   411                           
   412 ;; *************** function _verificaCRCBUFFCOM *****************
   413 ;; Defined at:
   414 ;;		line 159 in file "main.c"
   415 ;; Parameters:    Size  Location     Type
   416 ;;		None
   417 ;; Auto vars:     Size  Location     Type
   418 ;;  CRC_OK          1   15[COMRAM] unsigned char 
   419 ;; Return value:  Size  Location     Type
   420 ;;                  1    wreg      void 
   421 ;; Registers used:
   422 ;;		wreg, status,2, status,0
   423 ;; Tracked objects:
   424 ;;		On entry : 0/0
   425 ;;		On exit  : 0/0
   426 ;;		Unchanged: 0/0
   427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   428 ;;      Params:         0       0       0       0       0       0       0       0       0
   429 ;;      Locals:         1       0       0       0       0       0       0       0       0
   430 ;;      Temps:          0       0       0       0       0       0       0       0       0
   431 ;;      Totals:         1       0       0       0       0       0       0       0       0
   432 ;;Total ram usage:        1 bytes
   433 ;; Hardware stack levels used:    1
   434 ;; Hardware stack levels required when called:    2
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_maquinaEstado
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           	psect	text2
   443  000232                     __ptext2:
   444                           	opt stack 0
   445  000232                     _verificaCRCBUFFCOM:
   446                           	opt stack 27
   447                           
   448                           ;main.c: 162: char CRC_OK =1;
   449                           
   450                           ;incstack = 0
   451  000232  0E01               	movlw	1
   452  000234  6E22               	movwf	verificaCRCBUFFCOM@CRC_OK,c
   453                           
   454                           ;main.c: 168: if (CRC_OK == 1)
   455  000236  0422               	decf	verificaCRCBUFFCOM@CRC_OK,w,c
   456  000238  A4D8               	btfss	status,2,c
   457  00023A  D003               	goto	l741
   458                           
   459                           ;main.c: 169: {
   460                           ;main.c: 170: estado = 4;
   461  00023C  0E04               	movlw	4
   462  00023E  6E11               	movwf	_estado,c
   463                           
   464                           ;main.c: 171: }
   465  000240  0012               	return	
   466  000242                     l741:
   467                           
   468                           ;main.c: 172: else{
   469                           ;main.c: 175: estado = 5;
   470  000242  0E05               	movlw	5
   471  000244  6E11               	movwf	_estado,c
   472  000246  0012               	return	
   473  000248                     __end_of_verificaCRCBUFFCOM:
   474                           	opt stack 0
   475                           tblptru	equ	0xFF8
   476                           tblptrh	equ	0xFF7
   477                           tblptrl	equ	0xFF6
   478                           tablat	equ	0xFF5
   479                           intcon	equ	0xFF2
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           status	equ	0xFD8
   483                           
   484 ;; *************** function _tx_data *****************
   485 ;; Defined at:
   486 ;;		line 267 in file "main.c"
   487 ;; Parameters:    Size  Location     Type
   488 ;;		None
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  cont            2   15[COMRAM] int 
   491 ;; Return value:  Size  Location     Type
   492 ;;                  1    wreg      void 
   493 ;; Registers used:
   494 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   495 ;; Tracked objects:
   496 ;;		On entry : 0/0
   497 ;;		On exit  : 0/0
   498 ;;		Unchanged: 0/0
   499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   500 ;;      Params:         0       0       0       0       0       0       0       0       0
   501 ;;      Locals:         2       0       0       0       0       0       0       0       0
   502 ;;      Temps:          0       0       0       0       0       0       0       0       0
   503 ;;      Totals:         2       0       0       0       0       0       0       0       0
   504 ;;Total ram usage:        2 bytes
   505 ;; Hardware stack levels used:    1
   506 ;; Hardware stack levels required when called:    2
   507 ;; This function calls:
   508 ;;		Nothing
   509 ;; This function is called by:
   510 ;;		_maquinaEstado
   511 ;; This function uses a non-reentrant model
   512 ;;
   513                           
   514                           	psect	text3
   515  000188                     __ptext3:
   516                           	opt stack 0
   517  000188                     _tx_data:
   518                           	opt stack 27
   519                           
   520                           ;main.c: 269: int cont;
   521                           ;main.c: 271: for(cont=0;cont<7;cont++)
   522                           
   523                           ;incstack = 0
   524  000188  0E00               	movlw	0
   525  00018A  6E23               	movwf	tx_data@cont+1,c
   526  00018C  0E00               	movlw	0
   527  00018E  6E22               	movwf	tx_data@cont,c
   528  000190                     l745:
   529  000190  BE23               	btfsc	tx_data@cont+1,7,c
   530  000192  D006               	goto	l107
   531  000194  5023               	movf	tx_data@cont+1,w,c
   532  000196  E111               	bnz	l755
   533  000198  0E07               	movlw	7
   534  00019A  5C22               	subwf	tx_data@cont,w,c
   535  00019C  B0D8               	btfsc	status,0,c
   536  00019E  D00D               	goto	l755
   537  0001A0                     l107:
   538  0001A0  A89E               	btfss	3998,4,c	;volatile
   539  0001A2  D7FE               	goto	l107
   540                           
   541                           ;main.c: 274: TXREG = BUFFRESP[cont];
   542  0001A4  0E01               	movlw	low _BUFFRESP
   543  0001A6  2422               	addwf	tx_data@cont,w,c
   544  0001A8  6ED9               	movwf	fsr2l,c
   545  0001AA  0E00               	movlw	high _BUFFRESP
   546  0001AC  2023               	addwfc	tx_data@cont+1,w,c
   547  0001AE  6EDA               	movwf	fsr2h,c
   548  0001B0  50DF               	movf	indf2,w,c
   549  0001B2  6EAD               	movwf	4013,c	;volatile
   550  0001B4  4A22               	infsnz	tx_data@cont,f,c
   551  0001B6  2A23               	incf	tx_data@cont+1,f,c
   552  0001B8  D7EB               	goto	l745
   553  0001BA                     l755:
   554                           
   555                           ;main.c: 275: }
   556                           ;main.c: 277: estado = 0;
   557  0001BA  0E00               	movlw	0
   558  0001BC  6E11               	movwf	_estado,c
   559  0001BE  0012               	return		;funcret
   560  0001C0                     __end_of_tx_data:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           intcon	equ	0xFF2
   567                           postinc0	equ	0xFEE
   568                           wreg	equ	0xFE8
   569                           indf2	equ	0xFDF
   570                           fsr2h	equ	0xFDA
   571                           fsr2l	equ	0xFD9
   572                           status	equ	0xFD8
   573                           
   574 ;; *************** function _trataComando *****************
   575 ;; Defined at:
   576 ;;		line 73 in file "main.c"
   577 ;; Parameters:    Size  Location     Type
   578 ;;		None
   579 ;; Auto vars:     Size  Location     Type
   580 ;;		None
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0, cstack
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   590 ;;      Params:         0       0       0       0       0       0       0       0       0
   591 ;;      Locals:         0       0       0       0       0       0       0       0       0
   592 ;;      Temps:          0       0       0       0       0       0       0       0       0
   593 ;;      Totals:         0       0       0       0       0       0       0       0       0
   594 ;;Total ram usage:        0 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    3
   597 ;; This function calls:
   598 ;;		_calculaCRCBUFFRESP
   599 ;; This function is called by:
   600 ;;		_maquinaEstado
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           	psect	text4
   605  0000D2                     __ptext4:
   606                           	opt stack 0
   607  0000D2                     _trataComando:
   608                           	opt stack 26
   609                           
   610                           ;main.c: 76: switch(BUFFCOM[0])
   611                           
   612                           ;incstack = 0
   613  0000D2  D02D               	goto	l731
   614  0000D4                     l57:
   615                           
   616                           ;main.c: 80: BUFFRESP[0] = BUFFCOM[0];
   617  0000D4  C008  F001         	movff	_BUFFCOM,_BUFFRESP
   618                           
   619                           ;main.c: 81: BUFFRESP[1] = BUFFCOM[1];
   620  0000D8  C009  F002         	movff	_BUFFCOM+1,_BUFFRESP+1
   621                           
   622                           ;main.c: 84: switch(BUFFCOM[1])
   623  0000DC  D006               	goto	l723
   624  0000DE                     l59:
   625                           
   626                           ;main.c: 89: BUFFRESP[2] = versao;
   627  0000DE  C025  F003         	movff	_versao,_BUFFRESP+2
   628                           
   629                           ;main.c: 90: BUFFRESP[3] = revisao;
   630  0000E2  C024  F004         	movff	_revisao,_BUFFRESP+3
   631                           
   632                           ;main.c: 93: BUFFRESP[4] = 0xFF;
   633  0000E6  6805               	setf	_BUFFRESP+4,c
   634                           
   635                           ;main.c: 107: }
   636                           
   637                           ;main.c: 105: break;
   638                           
   639                           ;main.c: 104: default:
   640                           
   641                           ;main.c: 102: break;
   642                           
   643                           ;main.c: 100: case 2:
   644                           
   645                           ;main.c: 98: break;
   646                           
   647                           ;main.c: 96: case 1:
   648                           
   649                           ;main.c: 94: break;
   650  0000E8  D029               	goto	l733
   651  0000EA                     l723:
   652  0000EA  5009               	movf	_BUFFCOM+1,w,c
   653                           
   654                           ; Switch size 1, requested type "space"
   655                           ; Number of cases is 3, Range of values is 0 to 2
   656                           ; switch strategies available:
   657                           ; Name         Instructions Cycles
   658                           ; simple_byte           10     6 (average)
   659                           ;	Chosen strategy is simple_byte
   660  0000EC  0A00               	xorlw	0	; case 0
   661  0000EE  B4D8               	btfsc	status,2,c
   662  0000F0  D7F6               	goto	l59
   663  0000F2  0A01               	xorlw	1	; case 1
   664  0000F4  B4D8               	btfsc	status,2,c
   665  0000F6  D022               	goto	l733
   666  0000F8  0A03               	xorlw	3	; case 2
   667                           
   668                           ;main.c: 109: break;
   669  0000FA  D020               	goto	l733
   670  0000FC                     l65:
   671                           
   672                           ;main.c: 116: BUFFRESP[0] = BUFFCOM[0];
   673  0000FC  C008  F001         	movff	_BUFFCOM,_BUFFRESP
   674                           
   675                           ;main.c: 117: BUFFRESP[1] = BUFFCOM[1];
   676  000100  C009  F002         	movff	_BUFFCOM+1,_BUFFRESP+1
   677                           
   678                           ;main.c: 118: BUFFRESP[2] = BUFFCOM[2];
   679  000104  C00A  F003         	movff	_BUFFCOM+2,_BUFFRESP+2
   680                           
   681                           ;main.c: 119: BUFFRESP[3] = BUFFCOM[3];
   682  000108  C00B  F004         	movff	_BUFFCOM+3,_BUFFRESP+3
   683                           
   684                           ;main.c: 120: BUFFRESP[4] = BUFFCOM[4];
   685  00010C  C00C  F005         	movff	_BUFFCOM+4,_BUFFRESP+4
   686                           
   687                           ;main.c: 121: BUFFRESP[5] = BUFFCOM[5];
   688  000110  C00D  F006         	movff	_BUFFCOM+5,_BUFFRESP+5
   689                           
   690                           ;main.c: 122: BUFFRESP[6] = BUFFCOM[6];
   691  000114  C00E  F007         	movff	_BUFFCOM+6,_BUFFRESP+6
   692                           
   693                           ;main.c: 126: switch(BUFFCOM[1])
   694  000118  D005               	goto	l727
   695  00011A                     l67:
   696                           
   697                           ;main.c: 131: versao = BUFFCOM[2];
   698  00011A  C00A  F025         	movff	_BUFFCOM+2,_versao
   699                           
   700                           ;main.c: 132: revisao = BUFFCOM[3];
   701  00011E  C00B  F024         	movff	_BUFFCOM+3,_revisao
   702                           
   703                           ;main.c: 146: }
   704                           
   705                           ;main.c: 144: break;
   706                           
   707                           ;main.c: 143: default:
   708                           
   709                           ;main.c: 141: break;
   710                           
   711                           ;main.c: 139: case 2:
   712                           
   713                           ;main.c: 137: break;
   714                           
   715                           ;main.c: 135: case 1:
   716                           
   717                           ;main.c: 133: break;
   718  000122  D00C               	goto	l733
   719  000124                     l727:
   720  000124  5009               	movf	_BUFFCOM+1,w,c
   721                           
   722                           ; Switch size 1, requested type "space"
   723                           ; Number of cases is 3, Range of values is 0 to 2
   724                           ; switch strategies available:
   725                           ; Name         Instructions Cycles
   726                           ; simple_byte           10     6 (average)
   727                           ;	Chosen strategy is simple_byte
   728  000126  0A00               	xorlw	0	; case 0
   729  000128  B4D8               	btfsc	status,2,c
   730  00012A  D7F7               	goto	l67
   731  00012C  D7E2               	goto	L1
   732  00012E                     l731:
   733  00012E  5008               	movf	_BUFFCOM,w,c
   734                           
   735                           ; Switch size 1, requested type "space"
   736                           ; Number of cases is 2, Range of values is 1 to 2
   737                           ; switch strategies available:
   738                           ; Name         Instructions Cycles
   739                           ; simple_byte            7     4 (average)
   740                           ;	Chosen strategy is simple_byte
   741  000130  0A01               	xorlw	1	; case 1
   742  000132  B4D8               	btfsc	status,2,c
   743  000134  D7CF               	goto	l57
   744  000136  0A03               	xorlw	3	; case 2
   745  000138  B4D8               	btfsc	status,2,c
   746  00013A  D7E0               	goto	l65
   747  00013C                     l733:
   748                           
   749                           ;main.c: 154: calculaCRCBUFFRESP();
   750  00013C  EC2A  F001         	call	_calculaCRCBUFFRESP	;wreg free
   751  000140  0012               	return		;funcret
   752  000142                     __end_of_trataComando:
   753                           	opt stack 0
   754                           tblptru	equ	0xFF8
   755                           tblptrh	equ	0xFF7
   756                           tblptrl	equ	0xFF6
   757                           tablat	equ	0xFF5
   758                           intcon	equ	0xFF2
   759                           postinc0	equ	0xFEE
   760                           wreg	equ	0xFE8
   761                           indf2	equ	0xFDF
   762                           fsr2h	equ	0xFDA
   763                           fsr2l	equ	0xFD9
   764                           status	equ	0xFD8
   765                           
   766 ;; *************** function _calculaCRCBUFFRESP *****************
   767 ;; Defined at:
   768 ;;		line 65 in file "main.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   782 ;;      Params:         0       0       0       0       0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    2
   789 ;; This function calls:
   790 ;;		Nothing
   791 ;; This function is called by:
   792 ;;		_trataComando
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           	psect	text5
   797  000254                     __ptext5:
   798                           	opt stack 0
   799  000254                     _calculaCRCBUFFRESP:
   800                           	opt stack 26
   801                           
   802                           ;main.c: 70: estado = 3;
   803                           
   804                           ;incstack = 0
   805  000254  0E03               	movlw	3
   806  000256  6E11               	movwf	_estado,c
   807  000258  0012               	return		;funcret
   808  00025A                     __end_of_calculaCRCBUFFRESP:
   809                           	opt stack 0
   810                           tblptru	equ	0xFF8
   811                           tblptrh	equ	0xFF7
   812                           tblptrl	equ	0xFF6
   813                           tablat	equ	0xFF5
   814                           intcon	equ	0xFF2
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           indf2	equ	0xFDF
   818                           fsr2h	equ	0xFDA
   819                           fsr2l	equ	0xFD9
   820                           status	equ	0xFD8
   821                           
   822 ;; *************** function _enviaByte *****************
   823 ;; Defined at:
   824 ;;		line 252 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;  BYTE            1    wreg     unsigned char 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  BYTE            1   15[COMRAM] unsigned char 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, status,2, status,0
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   838 ;;      Params:         0       0       0       0       0       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0
   841 ;;      Totals:         1       0       0       0       0       0       0       0       0
   842 ;;Total ram usage:        1 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    2
   845 ;; This function calls:
   846 ;;		Nothing
   847 ;; This function is called by:
   848 ;;		_maquinaEstado
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text6
   853  000214                     __ptext6:
   854                           	opt stack 0
   855  000214                     _enviaByte:
   856                           	opt stack 27
   857                           
   858                           ;incstack = 0
   859                           ;enviaByte@BYTE stored from wreg
   860  000214  6E22               	movwf	enviaByte@BYTE,c
   861  000216                     l97:
   862  000216  A89E               	btfss	3998,4,c	;volatile
   863  000218  D7FE               	goto	l97
   864                           
   865                           ;main.c: 256: TXREG = BYTE;
   866  00021A  C022  FFAD         	movff	enviaByte@BYTE,4013	;volatile
   867                           
   868                           ;main.c: 258: if(BYTE==0x05)
   869  00021E  0E05               	movlw	5
   870  000220  1822               	xorwf	enviaByte@BYTE,w,c
   871  000222  A4D8               	btfss	status,2,c
   872  000224  D003               	goto	l765
   873                           
   874                           ;main.c: 259: estado = 2;
   875  000226  0E02               	movlw	2
   876  000228  6E11               	movwf	_estado,c
   877  00022A  0012               	return	
   878  00022C                     l765:
   879                           
   880                           ;main.c: 260: else
   881                           ;main.c: 261: estado = 0;
   882  00022C  0E00               	movlw	0
   883  00022E  6E11               	movwf	_estado,c
   884  000230  0012               	return	
   885  000232                     __end_of_enviaByte:
   886                           	opt stack 0
   887                           tblptru	equ	0xFF8
   888                           tblptrh	equ	0xFF7
   889                           tblptrl	equ	0xFF6
   890                           tablat	equ	0xFF5
   891                           intcon	equ	0xFF2
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           indf2	equ	0xFDF
   895                           fsr2h	equ	0xFDA
   896                           fsr2l	equ	0xFD9
   897                           status	equ	0xFD8
   898                           
   899 ;; *************** function _SerialRxPinInterrupt *****************
   900 ;; Defined at:
   901 ;;		line 282 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:         14       0       0       0       0       0       0       0       0
   918 ;;      Totals:        14       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:       14 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    1
   922 ;; This function calls:
   923 ;;		_enviaByteTeste
   924 ;; This function is called by:
   925 ;;		Interrupt level 2
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	intcode
   930  000008                     __pintcode:
   931                           	opt stack 0
   932  000008                     _SerialRxPinInterrupt:
   933                           	opt stack 26
   934                           
   935                           ;incstack = 0
   936  000008  8226               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   937  00000A  ED09  F000         	call	int_func,f	;refresh shadow registers
   938                           tblptru	equ	0xFF8
   939                           tblptrh	equ	0xFF7
   940                           tblptrl	equ	0xFF6
   941                           tablat	equ	0xFF5
   942                           intcon	equ	0xFF2
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           indf2	equ	0xFDF
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950                           	psect	intcode_body
   951  000012                     __pintcode_body:
   952                           	opt stack 26
   953  000012                     int_func:
   954                           	opt stack 26
   955  000012  0006               	pop		; remove dummy address from shadow register refresh
   956  000014  CFFA F014          	movff	pclath,??_SerialRxPinInterrupt
   957  000018  CFFB F015          	movff	pclatu,??_SerialRxPinInterrupt+1
   958  00001C  CFE9 F016          	movff	fsr0l,??_SerialRxPinInterrupt+2
   959  000020  CFEA F017          	movff	fsr0h,??_SerialRxPinInterrupt+3
   960  000024  CFE1 F018          	movff	fsr1l,??_SerialRxPinInterrupt+4
   961  000028  CFE2 F019          	movff	fsr1h,??_SerialRxPinInterrupt+5
   962  00002C  CFD9 F01A          	movff	fsr2l,??_SerialRxPinInterrupt+6
   963  000030  CFDA F01B          	movff	fsr2h,??_SerialRxPinInterrupt+7
   964  000034  CFF3 F01C          	movff	prodl,??_SerialRxPinInterrupt+8
   965  000038  CFF4 F01D          	movff	prodh,??_SerialRxPinInterrupt+9
   966  00003C  CFF6 F01E          	movff	tblptrl,??_SerialRxPinInterrupt+10
   967  000040  CFF7 F01F          	movff	tblptrh,??_SerialRxPinInterrupt+11
   968  000044  CFF8 F020          	movff	tblptru,??_SerialRxPinInterrupt+12
   969  000048  CFF5 F021          	movff	tablat,??_SerialRxPinInterrupt+13
   970                           
   971                           ;main.c: 285: if(PIR1bits.RCIF == 1)
   972  00004C  AA9E               	btfss	3998,5,c	;volatile
   973  00004E  D023               	goto	i2l119
   974                           
   975                           ;main.c: 286: {
   976                           ;main.c: 287: if(i<7)
   977  000050  5010               	movf	_i+1,w,c
   978  000052  E11A               	bnz	i2l114
   979  000054  0E07               	movlw	7
   980  000056  5C0F               	subwf	_i,w,c
   981  000058  B0D8               	btfsc	status,0,c
   982  00005A  D016               	goto	i2l114
   983  00005C                     i2l115:
   984  00005C  AA9E               	btfss	3998,5,c	;volatile
   985  00005E  D7FE               	goto	i2l115
   986                           
   987                           ;main.c: 290: BUFFCOM[i]= RCREG;
   988  000060  0E08               	movlw	low _BUFFCOM
   989  000062  240F               	addwf	_i,w,c
   990  000064  6ED9               	movwf	fsr2l,c
   991  000066  0E00               	movlw	high _BUFFCOM
   992  000068  2010               	addwfc	_i+1,w,c
   993  00006A  6EDA               	movwf	fsr2h,c
   994  00006C  CFAE FFDF          	movff	4014,indf2	;volatile
   995                           
   996                           ;main.c: 291: enviaByteTeste(BUFFCOM[i]);
   997  000070  0E08               	movlw	low _BUFFCOM
   998  000072  240F               	addwf	_i,w,c
   999  000074  6ED9               	movwf	fsr2l,c
  1000  000076  0E00               	movlw	high _BUFFCOM
  1001  000078  2010               	addwfc	_i+1,w,c
  1002  00007A  6EDA               	movwf	fsr2h,c
  1003  00007C  50DF               	movf	indf2,w,c
  1004  00007E  EC24  F001         	call	_enviaByteTeste
  1005                           
  1006                           ;main.c: 293: i++;
  1007  000082  4A0F               	infsnz	_i,f,c
  1008  000084  2A10               	incf	_i+1,f,c
  1009                           
  1010                           ;main.c: 294: }else
  1011  000086  D007               	goto	i2l119
  1012  000088                     i2l114:
  1013                           
  1014                           ;main.c: 295: {
  1015                           ;main.c: 296: PIR1bits.RCIF = 0;
  1016  000088  9A9E               	bcf	3998,5,c	;volatile
  1017                           
  1018                           ;main.c: 297: i=0;
  1019  00008A  0E00               	movlw	0
  1020  00008C  6E10               	movwf	_i+1,c
  1021  00008E  0E00               	movlw	0
  1022  000090  6E0F               	movwf	_i,c
  1023                           
  1024                           ;main.c: 298: estado = 1;
  1025  000092  0E01               	movlw	1
  1026  000094  6E11               	movwf	_estado,c
  1027  000096                     i2l119:
  1028  000096  C021  FFF5         	movff	??_SerialRxPinInterrupt+13,tablat
  1029  00009A  C020  FFF8         	movff	??_SerialRxPinInterrupt+12,tblptru
  1030  00009E  C01F  FFF7         	movff	??_SerialRxPinInterrupt+11,tblptrh
  1031  0000A2  C01E  FFF6         	movff	??_SerialRxPinInterrupt+10,tblptrl
  1032  0000A6  C01D  FFF4         	movff	??_SerialRxPinInterrupt+9,prodh
  1033  0000AA  C01C  FFF3         	movff	??_SerialRxPinInterrupt+8,prodl
  1034  0000AE  C01B  FFDA         	movff	??_SerialRxPinInterrupt+7,fsr2h
  1035  0000B2  C01A  FFD9         	movff	??_SerialRxPinInterrupt+6,fsr2l
  1036  0000B6  C019  FFE2         	movff	??_SerialRxPinInterrupt+5,fsr1h
  1037  0000BA  C018  FFE1         	movff	??_SerialRxPinInterrupt+4,fsr1l
  1038  0000BE  C017  FFEA         	movff	??_SerialRxPinInterrupt+3,fsr0h
  1039  0000C2  C016  FFE9         	movff	??_SerialRxPinInterrupt+2,fsr0l
  1040  0000C6  C015  FFFB         	movff	??_SerialRxPinInterrupt+1,pclatu
  1041  0000CA  C014  FFFA         	movff	??_SerialRxPinInterrupt,pclath
  1042  0000CE  9226               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1043  0000D0  0011               	retfie		f
  1044  0000D2                     __end_of_SerialRxPinInterrupt:
  1045                           	opt stack 0
  1046                           pclatu	equ	0xFFB
  1047                           pclath	equ	0xFFA
  1048                           tblptru	equ	0xFF8
  1049                           tblptrh	equ	0xFF7
  1050                           tblptrl	equ	0xFF6
  1051                           tablat	equ	0xFF5
  1052                           prodh	equ	0xFF4
  1053                           prodl	equ	0xFF3
  1054                           intcon	equ	0xFF2
  1055                           postinc0	equ	0xFEE
  1056                           fsr0h	equ	0xFEA
  1057                           fsr0l	equ	0xFE9
  1058                           wreg	equ	0xFE8
  1059                           fsr1h	equ	0xFE2
  1060                           fsr1l	equ	0xFE1
  1061                           indf2	equ	0xFDF
  1062                           fsr2h	equ	0xFDA
  1063                           fsr2l	equ	0xFD9
  1064                           status	equ	0xFD8
  1065                           
  1066 ;; *************** function _enviaByteTeste *****************
  1067 ;; Defined at:
  1068 ;;		line 58 in file "main.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  BYTE            1    wreg     unsigned char 
  1071 ;; Auto vars:     Size  Location     Type
  1072 ;;  BYTE            1    0[COMRAM] unsigned char 
  1073 ;; Return value:  Size  Location     Type
  1074 ;;                  1    wreg      void 
  1075 ;; Registers used:
  1076 ;;		wreg
  1077 ;; Tracked objects:
  1078 ;;		On entry : 0/0
  1079 ;;		On exit  : 0/0
  1080 ;;		Unchanged: 0/0
  1081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1082 ;;      Params:         0       0       0       0       0       0       0       0       0
  1083 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1084 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1085 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1086 ;;Total ram usage:        1 bytes
  1087 ;; Hardware stack levels used:    1
  1088 ;; This function calls:
  1089 ;;		Nothing
  1090 ;; This function is called by:
  1091 ;;		_SerialRxPinInterrupt
  1092 ;; This function uses a non-reentrant model
  1093 ;;
  1094                           
  1095                           	psect	text8
  1096  000248                     __ptext8:
  1097                           	opt stack 0
  1098  000248                     _enviaByteTeste:
  1099                           	opt stack 26
  1100                           
  1101                           ;incstack = 0
  1102                           ;enviaByteTeste@BYTE stored from wreg
  1103  000248  6E13               	movwf	enviaByteTeste@BYTE,c
  1104  00024A                     i2l47:
  1105  00024A  A89E               	btfss	3998,4,c	;volatile
  1106  00024C  D7FE               	goto	i2l47
  1107                           
  1108                           ;main.c: 62: TXREG = BYTE;
  1109  00024E  C013  FFAD         	movff	enviaByteTeste@BYTE,4013	;volatile
  1110  000252  0012               	return		;funcret
  1111  000254                     __end_of_enviaByteTeste:
  1112                           	opt stack 0
  1113  0000                     pclatu	equ	0xFFB
  1114                           pclath	equ	0xFFA
  1115                           tblptru	equ	0xFF8
  1116                           tblptrh	equ	0xFF7
  1117                           tblptrl	equ	0xFF6
  1118                           tablat	equ	0xFF5
  1119                           prodh	equ	0xFF4
  1120                           prodl	equ	0xFF3
  1121                           intcon	equ	0xFF2
  1122                           postinc0	equ	0xFEE
  1123                           fsr0h	equ	0xFEA
  1124                           fsr0l	equ	0xFE9
  1125                           wreg	equ	0xFE8
  1126                           fsr1h	equ	0xFE2
  1127                           fsr1l	equ	0xFE1
  1128                           indf2	equ	0xFDF
  1129                           fsr2h	equ	0xFDA
  1130                           fsr2l	equ	0xFD9
  1131                           status	equ	0xFD8
  1132                           pclatu	equ	0xFFB
  1133                           pclath	equ	0xFFA
  1134                           tblptru	equ	0xFF8
  1135                           tblptrh	equ	0xFF7
  1136                           tblptrl	equ	0xFF6
  1137                           tablat	equ	0xFF5
  1138                           prodh	equ	0xFF4
  1139                           prodl	equ	0xFF3
  1140                           intcon	equ	0xFF2
  1141                           postinc0	equ	0xFEE
  1142                           fsr0h	equ	0xFEA
  1143                           fsr0l	equ	0xFE9
  1144                           wreg	equ	0xFE8
  1145                           fsr1h	equ	0xFE2
  1146                           fsr1l	equ	0xFE1
  1147                           indf2	equ	0xFDF
  1148                           fsr2h	equ	0xFDA
  1149                           fsr2l	equ	0xFD9
  1150                           status	equ	0xFD8
  1151                           
  1152                           	psect	rparam
  1153  0000                     pclatu	equ	0xFFB
  1154                           pclath	equ	0xFFA
  1155                           tblptru	equ	0xFF8
  1156                           tblptrh	equ	0xFF7
  1157                           tblptrl	equ	0xFF6
  1158                           tablat	equ	0xFF5
  1159                           prodh	equ	0xFF4
  1160                           prodl	equ	0xFF3
  1161                           intcon	equ	0xFF2
  1162                           postinc0	equ	0xFEE
  1163                           fsr0h	equ	0xFEA
  1164                           fsr0l	equ	0xFE9
  1165                           wreg	equ	0xFE8
  1166                           fsr1h	equ	0xFE2
  1167                           fsr1l	equ	0xFE1
  1168                           indf2	equ	0xFDF
  1169                           fsr2h	equ	0xFDA
  1170                           fsr2l	equ	0xFD9
  1171                           status	equ	0xFD8
  1172                           
  1173                           	psect	temp
  1174  000026                     btemp:
  1175                           	opt stack 0
  1176  000026                     	ds	1
  1177  0000                     int$flags	set	btemp
  1178                           pclatu	equ	0xFFB
  1179                           pclath	equ	0xFFA
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           prodh	equ	0xFF4
  1185                           prodl	equ	0xFF3
  1186                           intcon	equ	0xFF2
  1187                           postinc0	equ	0xFEE
  1188                           fsr0h	equ	0xFEA
  1189                           fsr0l	equ	0xFE9
  1190                           wreg	equ	0xFE8
  1191                           fsr1h	equ	0xFE2
  1192                           fsr1l	equ	0xFE1
  1193                           indf2	equ	0xFDF
  1194                           fsr2h	equ	0xFDA
  1195                           fsr2l	equ	0xFD9
  1196                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         18
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     17      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _maquinaEstado->_tx_data

Critical Paths under _SerialRxPinInterrupt in COMRAM

    _SerialRxPinInterrupt->_enviaByteTeste

Critical Paths under _main in BANK0

    None.

Critical Paths under _SerialRxPinInterrupt in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _SerialRxPinInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SerialRxPinInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SerialRxPinInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SerialRxPinInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SerialRxPinInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _SerialRxPinInterrupt in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _SerialRxPinInterrupt in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      90
                      _maquinaEstado
 ---------------------------------------------------------------------------------
 (1) _maquinaEstado                                        0     0      0      90
                          _enviaByte
                       _trataComando
                            _tx_data
                 _verificaCRCBUFFCOM
 ---------------------------------------------------------------------------------
 (2) _verificaCRCBUFFCOM                                   1     1      0      15
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _tx_data                                              2     2      0      45
                                             15 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _trataComando                                         0     0      0       0
                 _calculaCRCBUFFRESP
 ---------------------------------------------------------------------------------
 (3) _calculaCRCBUFFRESP                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _enviaByte                                            1     1      0      30
                                             15 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _SerialRxPinInterrupt                                14    14      0      15
                                              1 COMRAM    14    14      0
                     _enviaByteTeste
 ---------------------------------------------------------------------------------
 (5) _enviaByteTeste                                       1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _maquinaEstado
     _enviaByte
     _trataComando
       _calculaCRCBUFFRESP
     _tx_data
     _verificaCRCBUFFCOM

 _SerialRxPinInterrupt (ROOT)
   _enviaByteTeste

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     11      25       1       39.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      20        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Jun 13 11:04:41 2018

                            _i 000F                             l65 00FC                             l57 00D4  
                           l67 011A                             l59 00DE                             l97 0216  
      __size_of_enviaByteTeste 000C                            l107 01A0                            l723 00EA  
                          l731 012E                            l733 013C                            l741 0242  
                          l805 020E                            l727 0124                            l745 0190  
                          l755 01BA                            l765 022C                            l781 015E  
                          l773 0144                            l775 014A                            l777 0150  
                          l785 0166                            l779 0156                            wreg 000FE8  
                         _PEIE 007F96                           _RCIE 007CED                           _RCIF 007CF5  
                         _RCIP 007CFD                           i2l47 024A                           _TXIF 007CF4  
                         _main 01F2                           fsr0h 000FEA                           fsr1h 000FE2  
                         fsr2h 000FDA                           fsr0l 000FE9                           indf2 000FDF  
                         fsr1l 000FE1                           fsr2l 000FD9                           btemp 0026  
                         prodh 000FF4                           prodl 000FF3                           start 000E  
                 ___param_bank 000000                          ?_main 0013             _verificaCRCBUFFCOM 0232  
                        i2l114 0088                          i2l115 005C                          i2l119 0096  
                        _RCREG 000FAE                          _RCSTA 000FAB                          _SPBRG 000FAF  
                        _TXREG 000FAD                          _TXSTA 000FAC            ?_verificaCRCBUFFCOM 0013  
                        pclath 000FFA                          tablat 000FF5                __end_of_tx_data 01C0  
                        status 000FD8                __initialization 01C0           ??_verificaCRCBUFFCOM 0022  
                 __end_of_main 0214     __end_of_calculaCRCBUFFRESP 025A                         ??_main 0024  
                __activetblptr 000002         __size_of_maquinaEstado 0046                 _enviaByteTeste 0248  
                       _estado 0011                         clear_0 01DE                         _versao 0025  
                 __pdataCOMRAM 0024                         tblptrh 000FF7                         tblptrl 000FF6  
                       tblptru 000FF8                      ??_tx_data 0022       verificaCRCBUFFCOM@CRC_OK 0022  
                   __accesstop 0060        __end_of__initialization 01E4                  ___rparam_used 000001  
__size_of_SerialRxPinInterrupt 00CA                 __pcstackCOMRAM 0013         __end_of_enviaByteTeste 0254  
                _maquinaEstado 0142             __size_of_enviaByte 001E                ?_enviaByteTeste 0013  
                      _BUFFCOM 0008             enviaByteTeste@BYTE 0013                 ?_maquinaEstado 0013  
                      __Hparam 0000                        __Lparam 0000              __end_of_enviaByte 0232  
                      __pcinit 01C0                        __ramtop 0800                        __ptext0 01F2  
                      __ptext1 0142                        __ptext2 0232                        __ptext3 0188  
                      __ptext4 00D2                        __ptext5 0254                        __ptext6 0214  
                      __ptext8 0248                        _revisao 0024                        _tx_data 0188  
               __pintcode_body 0012           end_of_initialization 01E4             _calculaCRCBUFFRESP 0254  
                __Lmediumconst 0000                        int_func 0012            ?_calculaCRCBUFFRESP 0013  
                enviaByte@BYTE 0022    __size_of_verificaCRCBUFFCOM 0016                        postinc0 000FEE  
         ??_calculaCRCBUFFRESP 0022                ??_maquinaEstado 0024                      _TRISCbits 000F94  
                ?_trataComando 0013                  __pidataCOMRAM 025A   __end_of_SerialRxPinInterrupt 00D2  
          start_initialization 01C0                 ??_trataComando 0022               ??_enviaByteTeste 0013  
                  tx_data@cont 0022                    __pbssCOMRAM 0001                      __pintcode 0008  
                    _enviaByte 0214                       ?_tx_data 0013                       _BUFFRESP 0001  
         _SerialRxPinInterrupt 0008                       _PIR1bits 000F9E           __end_of_trataComando 0142  
                   ?_enviaByte 0013          ?_SerialRxPinInterrupt 0013     __end_of_verificaCRCBUFFCOM 0248  
                     __Hrparam 0000                       __Lrparam 0000    __size_of_calculaCRCBUFFRESP 0006  
        __end_of_maquinaEstado 0188               __size_of_tx_data 0038                  __size_of_main 0022  
                     int$flags 0026                    ??_enviaByte 0022                     _INTCONbits 000FF2  
                     intlevel2 0000         ??_SerialRxPinInterrupt 0014                    _serial_data 0012  
        __size_of_trataComando 0070                   _trataComando 00D2  
