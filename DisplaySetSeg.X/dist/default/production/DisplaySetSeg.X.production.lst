

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Mar 29 14:10:31 2018

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 1.41
    14                           ; Generated 25/01/2017 GMT
    15                           ; 
    16                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F4550 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     
    48                           	psect	smallconst
    49  000800                     __psmallconst:
    50                           	opt stack 0
    51  000800  00                 	db	0
    52  000801                     _display:
    53                           	opt stack 0
    54  000801  3F                 	db	63
    55  000802  06                 	db	6
    56  000803  5B                 	db	91
    57  000804  4F                 	db	79
    58  000805  66                 	db	102
    59  000806  6D                 	db	109
    60  000807  7D                 	db	125
    61  000808  07                 	db	7
    62  000809  7F                 	db	127
    63  00080A  6F                 	db	111
    64  00080B                     __end_of_display:
    65                           	opt stack 0
    66  0000                     _PORTB	set	3969
    67  0000                     _TRISB	set	3987
    68  0000                     _ADCON1	set	4033
    69                           
    70                           ; #config settings
    71  00080B  00                 	db	0	; dummy byte at the end
    72  0000                     
    73                           	psect	cinit
    74  00097C                     __pcinit:
    75                           	opt stack 0
    76  00097C                     start_initialization:
    77                           	opt stack 0
    78  00097C                     __initialization:
    79                           	opt stack 0
    80                           
    81                           ; Clear objects allocated to COMRAM (4 bytes)
    82  00097C  6A04               	clrf	(__pbssCOMRAM+3)& (0+255),c
    83  00097E  6A03               	clrf	(__pbssCOMRAM+2)& (0+255),c
    84  000980  6A02               	clrf	(__pbssCOMRAM+1)& (0+255),c
    85  000982  6A01               	clrf	__pbssCOMRAM& (0+255),c
    86  000984                     end_of_initialization:
    87                           	opt stack 0
    88  000984                     __end_of__initialization:
    89                           	opt stack 0
    90  000984  0E00               	movlw	low (__Lsmallconst shr (0+16))
    91  000986  6EF8               	movwf	tblptru,c
    92  000988  0E08               	movlw	high __Lsmallconst
    93  00098A  6EF7               	movwf	tblptrh,c
    94  00098C  0100               	movlb	0
    95  00098E  EF06  F004         	goto	_main	;jump to C main() function
    96                           tblptru	equ	0xFF8
    97                           tblptrh	equ	0xFF7
    98                           
    99                           	psect	bssCOMRAM
   100  000001                     __pbssCOMRAM:
   101                           	opt stack 0
   102  000001                     _y:
   103                           	opt stack 0
   104  000001                     	ds	2
   105  000003                     _x:
   106                           	opt stack 0
   107  000003                     	ds	2
   108                           tblptru	equ	0xFF8
   109                           tblptrh	equ	0xFF7
   110                           
   111                           	psect	cstackCOMRAM
   112  000005                     __pcstackCOMRAM:
   113                           	opt stack 0
   114  000005                     ??_main:
   115                           
   116                           ; 1 bytes @ 0x0
   117  000005                     	ds	2
   118                           tblptru	equ	0xFF8
   119                           tblptrh	equ	0xFF7
   120                           
   121 ;;
   122 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   123 ;;
   124 ;; *************** function _main *****************
   125 ;; Defined at:
   126 ;;		line 29 in file "main.c"
   127 ;; Parameters:    Size  Location     Type
   128 ;;		None
   129 ;; Auto vars:     Size  Location     Type
   130 ;;		None
   131 ;; Return value:  Size  Location     Type
   132 ;;                  1    wreg      void 
   133 ;; Registers used:
   134 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   135 ;; Tracked objects:
   136 ;;		On entry : 0/0
   137 ;;		On exit  : 0/0
   138 ;;		Unchanged: 0/0
   139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   140 ;;      Params:         0       0       0       0       0       0       0       0       0
   141 ;;      Locals:         0       0       0       0       0       0       0       0       0
   142 ;;      Temps:          2       0       0       0       0       0       0       0       0
   143 ;;      Totals:         2       0       0       0       0       0       0       0       0
   144 ;;Total ram usage:        2 bytes
   145 ;; This function calls:
   146 ;;		Nothing
   147 ;; This function is called by:
   148 ;;		Startup code after reset
   149 ;; This function uses a non-reentrant model
   150 ;;
   151                           
   152                           	psect	text0
   153  00080C                     __ptext0:
   154                           	opt stack 0
   155  00080C                     _main:
   156                           	opt stack 31
   157                           
   158                           ;main.c: 30: ADCON1 = 0x0F;
   159                           
   160                           ;incstack = 0
   161  00080C  0E0F               	movlw	15
   162  00080E  6EC1               	movwf	4033,c	;volatile
   163                           
   164                           ;main.c: 31: TRISB = 0x00;
   165  000810  0E00               	movlw	0
   166  000812  6E93               	movwf	3987,c	;volatile
   167                           
   168                           ;main.c: 33: PORTB = display[0];
   169  000814  0E01               	movlw	low _display
   170  000816  6EF6               	movwf	tblptrl,c
   171  000818                     	if	0	;There is only one active tblptr byte
   172  000818                     	endif
   173  000818                     	if	0	;There are less than 3 active tblptr bytes
   174  000818                     	endif
   175  000818  0008               	tblrd		*
   176  00081A  CFF5 FF81          	movff	tablat,3969	;volatile
   177                           
   178                           ;main.c: 34: _delay((unsigned long)((100)*(20000000/4000.0)));
   179  00081E  0E03               	movlw	3
   180  000820  6E06               	movwf	(??_main+1)& (0+255),c
   181  000822  0E8A               	movlw	138
   182  000824  6E05               	movwf	??_main& (0+255),c
   183  000826  0E56               	movlw	86
   184  000828                     u17:
   185  000828  2EE8               	decfsz	wreg,f,c
   186  00082A  D7FE               	bra	u17
   187  00082C  2E05               	decfsz	??_main& (0+255),f,c
   188  00082E  D7FC               	bra	u17
   189  000830  2E06               	decfsz	(??_main+1)& (0+255),f,c
   190  000832  D7FA               	bra	u17
   191                           
   192                           ;main.c: 35: PORTB = display[1];
   193  000834  0E02               	movlw	low (_display+1)
   194  000836  6EF6               	movwf	tblptrl,c
   195  000838  0E08               	movlw	high (_display+1)
   196  00083A  6EF7               	movwf	tblptrh,c
   197  00083C                     	if	0	;tblptru may be non-zero
   198  00083C                     	endif
   199  00083C                     	if	0	;tblptru may be non-zero
   200  00083C                     	endif
   201  00083C  0008               	tblrd		*
   202  00083E  CFF5 FF81          	movff	tablat,3969	;volatile
   203                           
   204                           ;main.c: 36: _delay((unsigned long)((100)*(20000000/4000.0)));
   205  000842  0E03               	movlw	3
   206  000844  6E06               	movwf	(??_main+1)& (0+255),c
   207  000846  0E8A               	movlw	138
   208  000848  6E05               	movwf	??_main& (0+255),c
   209  00084A  0E56               	movlw	86
   210  00084C                     u27:
   211  00084C  2EE8               	decfsz	wreg,f,c
   212  00084E  D7FE               	bra	u27
   213  000850  2E05               	decfsz	??_main& (0+255),f,c
   214  000852  D7FC               	bra	u27
   215  000854  2E06               	decfsz	(??_main+1)& (0+255),f,c
   216  000856  D7FA               	bra	u27
   217                           
   218                           ;main.c: 37: PORTB = display[2];
   219  000858  0E03               	movlw	low (_display+2)
   220  00085A  6EF6               	movwf	tblptrl,c
   221  00085C  0E08               	movlw	high (_display+2)
   222  00085E  6EF7               	movwf	tblptrh,c
   223  000860                     	if	0	;tblptru may be non-zero
   224  000860                     	endif
   225  000860                     	if	0	;tblptru may be non-zero
   226  000860                     	endif
   227  000860  0008               	tblrd		*
   228  000862  CFF5 FF81          	movff	tablat,3969	;volatile
   229                           
   230                           ;main.c: 38: _delay((unsigned long)((100)*(20000000/4000.0)));
   231  000866  0E03               	movlw	3
   232  000868  6E06               	movwf	(??_main+1)& (0+255),c
   233  00086A  0E8A               	movlw	138
   234  00086C  6E05               	movwf	??_main& (0+255),c
   235  00086E  0E56               	movlw	86
   236  000870                     u37:
   237  000870  2EE8               	decfsz	wreg,f,c
   238  000872  D7FE               	bra	u37
   239  000874  2E05               	decfsz	??_main& (0+255),f,c
   240  000876  D7FC               	bra	u37
   241  000878  2E06               	decfsz	(??_main+1)& (0+255),f,c
   242  00087A  D7FA               	bra	u37
   243                           
   244                           ;main.c: 39: PORTB = display[3];
   245  00087C  0E04               	movlw	low (_display+3)
   246  00087E  6EF6               	movwf	tblptrl,c
   247  000880  0E08               	movlw	high (_display+3)
   248  000882  6EF7               	movwf	tblptrh,c
   249  000884                     	if	0	;tblptru may be non-zero
   250  000884                     	endif
   251  000884                     	if	0	;tblptru may be non-zero
   252  000884                     	endif
   253  000884  0008               	tblrd		*
   254  000886  CFF5 FF81          	movff	tablat,3969	;volatile
   255                           
   256                           ;main.c: 40: _delay((unsigned long)((100)*(20000000/4000.0)));
   257  00088A  0E03               	movlw	3
   258  00088C  6E06               	movwf	(??_main+1)& (0+255),c
   259  00088E  0E8A               	movlw	138
   260  000890  6E05               	movwf	??_main& (0+255),c
   261  000892  0E56               	movlw	86
   262  000894                     u47:
   263  000894  2EE8               	decfsz	wreg,f,c
   264  000896  D7FE               	bra	u47
   265  000898  2E05               	decfsz	??_main& (0+255),f,c
   266  00089A  D7FC               	bra	u47
   267  00089C  2E06               	decfsz	(??_main+1)& (0+255),f,c
   268  00089E  D7FA               	bra	u47
   269                           
   270                           ;main.c: 41: PORTB = display[4];
   271  0008A0  0E05               	movlw	low (_display+4)
   272  0008A2  6EF6               	movwf	tblptrl,c
   273  0008A4  0E08               	movlw	high (_display+4)
   274  0008A6  6EF7               	movwf	tblptrh,c
   275  0008A8                     	if	0	;tblptru may be non-zero
   276  0008A8                     	endif
   277  0008A8                     	if	0	;tblptru may be non-zero
   278  0008A8                     	endif
   279  0008A8  0008               	tblrd		*
   280  0008AA  CFF5 FF81          	movff	tablat,3969	;volatile
   281                           
   282                           ;main.c: 42: _delay((unsigned long)((100)*(20000000/4000.0)));
   283  0008AE  0E03               	movlw	3
   284  0008B0  6E06               	movwf	(??_main+1)& (0+255),c
   285  0008B2  0E8A               	movlw	138
   286  0008B4  6E05               	movwf	??_main& (0+255),c
   287  0008B6  0E56               	movlw	86
   288  0008B8                     u57:
   289  0008B8  2EE8               	decfsz	wreg,f,c
   290  0008BA  D7FE               	bra	u57
   291  0008BC  2E05               	decfsz	??_main& (0+255),f,c
   292  0008BE  D7FC               	bra	u57
   293  0008C0  2E06               	decfsz	(??_main+1)& (0+255),f,c
   294  0008C2  D7FA               	bra	u57
   295                           
   296                           ;main.c: 43: PORTB = display[5];
   297  0008C4  0E06               	movlw	low (_display+5)
   298  0008C6  6EF6               	movwf	tblptrl,c
   299  0008C8  0E08               	movlw	high (_display+5)
   300  0008CA  6EF7               	movwf	tblptrh,c
   301  0008CC                     	if	0	;tblptru may be non-zero
   302  0008CC                     	endif
   303  0008CC                     	if	0	;tblptru may be non-zero
   304  0008CC                     	endif
   305  0008CC  0008               	tblrd		*
   306  0008CE  CFF5 FF81          	movff	tablat,3969	;volatile
   307                           
   308                           ;main.c: 44: _delay((unsigned long)((100)*(20000000/4000.0)));
   309  0008D2  0E03               	movlw	3
   310  0008D4  6E06               	movwf	(??_main+1)& (0+255),c
   311  0008D6  0E8A               	movlw	138
   312  0008D8  6E05               	movwf	??_main& (0+255),c
   313  0008DA  0E56               	movlw	86
   314  0008DC                     u67:
   315  0008DC  2EE8               	decfsz	wreg,f,c
   316  0008DE  D7FE               	bra	u67
   317  0008E0  2E05               	decfsz	??_main& (0+255),f,c
   318  0008E2  D7FC               	bra	u67
   319  0008E4  2E06               	decfsz	(??_main+1)& (0+255),f,c
   320  0008E6  D7FA               	bra	u67
   321                           
   322                           ;main.c: 45: PORTB = display[6];
   323  0008E8  0E07               	movlw	low (_display+6)
   324  0008EA  6EF6               	movwf	tblptrl,c
   325  0008EC  0E08               	movlw	high (_display+6)
   326  0008EE  6EF7               	movwf	tblptrh,c
   327  0008F0                     	if	0	;tblptru may be non-zero
   328  0008F0                     	endif
   329  0008F0                     	if	0	;tblptru may be non-zero
   330  0008F0                     	endif
   331  0008F0  0008               	tblrd		*
   332  0008F2  CFF5 FF81          	movff	tablat,3969	;volatile
   333                           
   334                           ;main.c: 46: _delay((unsigned long)((100)*(20000000/4000.0)));
   335  0008F6  0E03               	movlw	3
   336  0008F8  6E06               	movwf	(??_main+1)& (0+255),c
   337  0008FA  0E8A               	movlw	138
   338  0008FC  6E05               	movwf	??_main& (0+255),c
   339  0008FE  0E56               	movlw	86
   340  000900                     u77:
   341  000900  2EE8               	decfsz	wreg,f,c
   342  000902  D7FE               	bra	u77
   343  000904  2E05               	decfsz	??_main& (0+255),f,c
   344  000906  D7FC               	bra	u77
   345  000908  2E06               	decfsz	(??_main+1)& (0+255),f,c
   346  00090A  D7FA               	bra	u77
   347                           
   348                           ;main.c: 47: PORTB = display[7];
   349  00090C  0E08               	movlw	low (_display+7)
   350  00090E  6EF6               	movwf	tblptrl,c
   351  000910  0E08               	movlw	high (_display+7)
   352  000912  6EF7               	movwf	tblptrh,c
   353  000914                     	if	0	;tblptru may be non-zero
   354  000914                     	endif
   355  000914                     	if	0	;tblptru may be non-zero
   356  000914                     	endif
   357  000914  0008               	tblrd		*
   358  000916  CFF5 FF81          	movff	tablat,3969	;volatile
   359                           
   360                           ;main.c: 48: _delay((unsigned long)((100)*(20000000/4000.0)));
   361  00091A  0E03               	movlw	3
   362  00091C  6E06               	movwf	(??_main+1)& (0+255),c
   363  00091E  0E8A               	movlw	138
   364  000920  6E05               	movwf	??_main& (0+255),c
   365  000922  0E56               	movlw	86
   366  000924                     u87:
   367  000924  2EE8               	decfsz	wreg,f,c
   368  000926  D7FE               	bra	u87
   369  000928  2E05               	decfsz	??_main& (0+255),f,c
   370  00092A  D7FC               	bra	u87
   371  00092C  2E06               	decfsz	(??_main+1)& (0+255),f,c
   372  00092E  D7FA               	bra	u87
   373                           
   374                           ;main.c: 49: PORTB = display[8];
   375  000930  0E09               	movlw	low (_display+8)
   376  000932  6EF6               	movwf	tblptrl,c
   377  000934  0E08               	movlw	high (_display+8)
   378  000936  6EF7               	movwf	tblptrh,c
   379  000938                     	if	0	;tblptru may be non-zero
   380  000938                     	endif
   381  000938                     	if	0	;tblptru may be non-zero
   382  000938                     	endif
   383  000938  0008               	tblrd		*
   384  00093A  CFF5 FF81          	movff	tablat,3969	;volatile
   385                           
   386                           ;main.c: 50: _delay((unsigned long)((100)*(20000000/4000.0)));
   387  00093E  0E03               	movlw	3
   388  000940  6E06               	movwf	(??_main+1)& (0+255),c
   389  000942  0E8A               	movlw	138
   390  000944  6E05               	movwf	??_main& (0+255),c
   391  000946  0E56               	movlw	86
   392  000948                     u97:
   393  000948  2EE8               	decfsz	wreg,f,c
   394  00094A  D7FE               	bra	u97
   395  00094C  2E05               	decfsz	??_main& (0+255),f,c
   396  00094E  D7FC               	bra	u97
   397  000950  2E06               	decfsz	(??_main+1)& (0+255),f,c
   398  000952  D7FA               	bra	u97
   399                           
   400                           ;main.c: 51: PORTB = display[9];
   401  000954  0E0A               	movlw	low (_display+9)
   402  000956  6EF6               	movwf	tblptrl,c
   403  000958  0E08               	movlw	high (_display+9)
   404  00095A  6EF7               	movwf	tblptrh,c
   405  00095C                     	if	0	;tblptru may be non-zero
   406  00095C                     	endif
   407  00095C                     	if	0	;tblptru may be non-zero
   408  00095C                     	endif
   409  00095C  0008               	tblrd		*
   410  00095E  CFF5 FF81          	movff	tablat,3969	;volatile
   411                           
   412                           ;main.c: 52: _delay((unsigned long)((100)*(20000000/4000.0)));
   413  000962  0E03               	movlw	3
   414  000964  6E06               	movwf	(??_main+1)& (0+255),c
   415  000966  0E8A               	movlw	138
   416  000968  6E05               	movwf	??_main& (0+255),c
   417  00096A  0E56               	movlw	86
   418  00096C                     u107:
   419  00096C  2EE8               	decfsz	wreg,f,c
   420  00096E  D7FE               	bra	u107
   421  000970  2E05               	decfsz	??_main& (0+255),f,c
   422  000972  D7FC               	bra	u107
   423  000974  2E06               	decfsz	(??_main+1)& (0+255),f,c
   424  000976  D7FA               	bra	u107
   425                           
   426                           ;main.c: 53: return;
   427  000978  EF00  F000         	goto	start
   428  00097C                     __end_of_main:
   429                           	opt stack 0
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           wreg	equ	0xFE8
   435                           tblptru	equ	0xFF8
   436                           tblptrh	equ	0xFF7
   437                           tblptrl	equ	0xFF6
   438                           tablat	equ	0xFF5
   439                           wreg	equ	0xFE8
   440                           
   441                           	psect	rparam
   442  0000                     tblptru	equ	0xFF8
   443                           tblptrh	equ	0xFF7
   444                           tblptrl	equ	0xFF6
   445                           tablat	equ	0xFF5
   446                           wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       6
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      2       6       1        6.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       6      20        0.0%
DATA                 0      0       6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Mar 29 14:10:31 2018

                      _x 0003                        _y 0001                       u17 0828  
                     u27 084C                       u37 0870                       u47 0894  
                     u57 08B8                       u67 08DC                       u77 0900  
                     u87 0924                       u97 0948                      u107 096C  
                    wreg 000FE8                     _main 080C                     start 0000  
           ___param_bank 000000                    ?_main 0005                    _PORTB 000F81  
                  _TRISB 000F93          __end_of_display 080B                    tablat 000FF5  
        __initialization 097C             __end_of_main 097C                   ??_main 0005  
          __activetblptr 000001                   _ADCON1 000FC1             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0984          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0005                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 097C  
                __ramtop 0800                  __ptext0 080C                  _display 0801  
   end_of_initialization 0984      start_initialization 097C              __pbssCOMRAM 0001  
            __smallconst 0800                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0800            __size_of_main 0170  
